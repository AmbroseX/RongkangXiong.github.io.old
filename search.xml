<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Introduction</title>
    <url>//post/introduction.html</url>
    <content><![CDATA[<h1 id="相遇即是缘分"><a href="#相遇即是缘分" class="headerlink" title="相遇即是缘分"></a>相遇即是缘分</h1><p>博客初建，入站须知</p>
<p>欢迎来到我的世界，这是我的个人博客</p>
<p>知识总结，技术分享</p>
<p>本博客是基于Hexo框架搭建，采用Hexo-theme-next主题并加以改进</p>
<p>后期也会不定时增加新的功能</p>
<p>欢迎留言评论~</p>
<p>敬请期待！！！</p>
]]></content>
      <categories>
        <category>入站须知</category>
      </categories>
      <tags>
        <tag>入站须知</tag>
      </tags>
  </entry>
  <entry>
    <title>常见分布</title>
    <url>//post/mynotes/math/%E5%A4%9A%E5%B1%82%E5%85%88%E9%AA%8C%E6%A8%A1%E5%9E%8B.html</url>
    <content><![CDATA[<p>当所给先验分布中的超参数难以确定的时候，可以对超参数再给出一个先验（超先验）；若超先验中的参数还是难以确定，还可以给出第三个先验</p>
<blockquote>
<p>第一步：设</p>
<p>​    $\Gamma_1 = {\pi_1(\theta|\lambda): \pi_1的函数形式已知,\lambda\in D_1},D_1$是超参数的取值范围</p>
</blockquote>
<blockquote>
<p>第二步：设$\lambda$为随机变量</p>
<p>​    $\Gamma_2={\pi_2(\lambda|\delta):\pi_2的函数形式已知,\delta\in D_2  },D_2$是超参数$\delta$的取值范围</p>
</blockquote>
<blockquote>
<p>第三步：设$\delta$也是随机变量，有先验分布$\pi_3(\delta)$</p>
</blockquote>
<p>任何一个先验都可以写成一个一般规范的先验：</p>
<p>对于两层先验：<br>$$<br>\pi(\theta) = \int_{D_1}\pi_1(\theta|\lambda)\pi_2(\lambda)d\lambda=\int_{D_1}\pi(\theta,\lambda)d\lambda<br>$$<br>其中：$\theta \sim \pi_1(\theta|\lambda),\lambda\sim \pi_2(\lambda)$</p>
<p>公式：<br>$$<br>\begin{align}<br>\pi(\theta,\lambda|x) &amp;\propto \pi(x|\theta)\pi(\theta|\lambda)\pi(\lambda) \<br>\pi(\theta|\lambda,x) &amp;= \prod_{i=1}^{k} \pi(\theta_i|\lambda,x_i) \<br> &amp;= \prod_{i=1}^{k} \pi(x_i|\theta_i)\pi(\theta_i|\lambda) \<br> \pi(\lambda|x) &amp;= \int \pi(\theta,\lambda|x)d\theta \<br> \pi(\theta,\lambda|x) &amp;= \pi(\theta|\lambda,x)\pi(\lambda|x) \<br> \pi(\lambda|x) &amp;= \frac{\pi(\theta,\lambda|x)}{\pi(\theta|\lambda,x)}\<br> \pi(\lambda|\theta,x)<br> \end{align}<br>$$<br>对于三层先验：<br>$$<br>\pi(\theta) = \int_{D_1}\int_{D_2}\pi_1(\theta|\lambda)\pi_2(\lambda|\delta)\pi_3(\delta)d\lambda d\delta=\int_{D_1}\pi(\theta|\lambda)[\int_{D_2}\pi(\lambda,\delta)d\delta]d\lambda<br>$$<br>其中：$\pi(\lambda,\delta) = \pi_2(\lambda|\delta)\pi_3(\delta)$</p>
<h1 id="举栗子"><a href="#举栗子" class="headerlink" title="举栗子"></a>举栗子</h1><p>数据分布：<br>$$<br>y \sim f(y|\theta)<br>$$<br>先验参数$\theta$，超参数$\lambda$<br>$$<br>\theta \sim g_1(\theta|\lambda)<br>$$<br>超参数$\lambda$的分布<br>$$<br>\lambda \sim g_2(\lambda)<br>$$</p>
<ul>
<li>先验参数$\theta= (\theta_1,…\theta_k)$参数是可交换的，不改变分布形式</li>
<li>$\theta_1,…,\theta_k$是从$g_1(\theta|\lambda)$随机采样的</li>
<li></li>
</ul>
<h2 id="估计医院的死亡率"><a href="#估计医院的死亡率" class="headerlink" title="估计医院的死亡率"></a>估计医院的死亡率</h2><p>死亡率$y_i$遵循泊松分布，均值为$e_i\lambda_i$,$y_i/e_i$是单位时间内的死亡人数</p>
<p>每家医院估计死亡率<br>$$<br>(1-\lambda)\frac{y_i}{e_i}+\lambda\frac{\sum_{j=1}^{n}y_j}{\sum_{j=1}^{n}e_j}<br>$$<br>其中$0&lt;\lambda&lt;1$是放缩参数，这是可交换的先验模型，由单家医院死亡率和平均死亡率组合</p>
<h2 id="估计大学平均绩点"><a href="#估计大学平均绩点" class="headerlink" title="估计大学平均绩点"></a>估计大学平均绩点</h2><h2 id="估计职业轨迹"><a href="#估计职业轨迹" class="headerlink" title="估计职业轨迹"></a>估计职业轨迹</h2><p><img src="../../../images/blog/%E5%A4%9A%E5%B1%82%E5%85%88%E9%AA%8C%E6%A8%A1%E5%9E%8B/image-20211122204938175.png" alt="image-20211122204938175"></p>
<p>9名棒球运动员的职业生涯曲线</p>
]]></content>
      <categories>
        <category>数学</category>
        <category>R语言</category>
        <category>R语言</category>
      </categories>
      <tags>
        <tag>math</tag>
        <tag>概率统计分布</tag>
        <tag>R语言</tag>
      </tags>
  </entry>
  <entry>
    <title>常见分布</title>
    <url>//post/mynotes/math/%E5%B8%B8%E8%A7%81%E7%BB%9F%E8%AE%A1%E5%88%86%E5%B8%83.html</url>
    <content><![CDATA[<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="随机变量X的熵"><a href="#随机变量X的熵" class="headerlink" title="随机变量X的熵"></a>随机变量X的熵</h2><p>$$<br>离散形式 \quad H(x) =-E^X[ln(p_i)]= - \sum_i p_i ln(p_i) , \quad 规定 0\cdot ln 0 =0 \<br>连续形式 \quad H(x) =-E^X[ln(f(x))]= - \int f(x) ln(f(x)) dx<br>$$</p>
<h3 id="先验分布的熵"><a href="#先验分布的熵" class="headerlink" title="先验分布的熵"></a>先验分布的熵</h3><p>$$<br>先验参数: \quad \theta \sim \pi(\theta) \<br>离散值: E_n(\pi) = -E^\theta[ln(p_i)] =-\sum_i p_i ln(p_i) \<br>连续值: E_n(\pi) = -E^\theta[ln(p_i)] =- \int\pi(\theta) ln(\pi(\theta)) d\theta<br>$$</p>
<h2 id="K-L距离"><a href="#K-L距离" class="headerlink" title="K-L距离"></a>K-L距离</h2><p>即K-L散度,一种量化两种概率分布P和Q之间差异的方式,又叫相对熵<br>能帮助我们度量使用一个分布来近似另一个分布时所损失的信息</p>
<ol>
<li>定义</li>
</ol>
<p>$$<br>\begin{aligned}<br>离散形式: \quad D(P||Q) &amp;=E^{P}[lnP(x)-lnQ(x)] \<br>&amp; =\sum_{i=1}^{n} P(x) ln \frac{P(x)}{Q(x)} \<br>连续形式: \quad D(P||Q) &amp;=E^{P}[lnP(x)-lnQ(x)] \<br>                &amp; = \int P(x) ln \frac{P(x)}{Q(x)} dx<br>\end{aligned}<br>$$</p>
<p>即数据的原始分布p和近似分布q之间的对数差值的期望<br>如果继续用2为底的对数计算，则K-L散度值表示信息损失的二进制位数</p>
<ol>
<li>相对熵的性质</li>
</ol>
<p>(1) 尽管KL散度从直观上是个度量或距离函数,但它并不是一个真正的度量或者距离,因为它不具有对称性,即$$D(P||Q) \neq D(Q||P)$$</p>
<p>(2) 相对熵的值为非负值,即$$D(P||Q)≥0$$</p>
<h2 id="位置参数和刻度参数"><a href="#位置参数和刻度参数" class="headerlink" title="位置参数和刻度参数"></a>位置参数和刻度参数</h2><h2 id="fisher信息阵求解"><a href="#fisher信息阵求解" class="headerlink" title="fisher信息阵求解"></a>fisher信息阵求解</h2><p>设样本分布族 ${f(x| \theta),\theta \in \Theta }$满足C-R正则条件,这里<br>$\theta=(\theta_1,…,\theta_p)$为p维参数向量.<br>设$X=(X_1,…,X_n)$是从总体$f(x|\theta)$抽样的i.i.d.样本.<br>当$\theta$无先验信息可用时,Jeffrey是用Fisher信息阵行列式的平方根作为$\theta$的无信息先验</p>
<ol>
<li><p>写出参数$\theta$的对数似然函数<br>$$<br>\begin{aligned}<br>l(\theta|x) = ln(\prod_{i=1}^{n} f(x_i|\theta)) = \sum_{i=1}^{n} ln f(x_i|\theta)<br>\end{aligned}<br>$$</p>
</li>
<li><p>求fisher信息矩阵</p>
</li>
</ol>
<p>$$<br>\begin{aligned}<br>&amp;I(\theta) = (I_{ij}(\theta))<em>{p\times p}, \quad I</em>{ij}(\theta)=E^{X|\theta} (-\frac{\partial^2 l}{\partial\theta_i \partial \theta_j}) , \quad (i,j=1,…,p) \<br>&amp;特别的对于单参数情形 \<br>&amp; I(\theta) = E^{X|\theta} (-\frac{\partial^2 l}{\partial\theta^2})<br>\end{aligned}<br>$$</p>
<h2 id="Jeffreys无信息先验"><a href="#Jeffreys无信息先验" class="headerlink" title="Jeffreys无信息先验"></a>Jeffreys无信息先验</h2><p>参数是1维情形下,Jeffreys被证明是相当成功的<br>多参数不相关时使用Jeffreys时效果较好<br><a href="">Bernardo(1979)</a>找到了在多维场合修改的Jeffreys先验方法,即Reference先验</p>
<ol>
<li>求$\theta$的Jeffreys无信息先验密度<br>$$<br>\begin{aligned}<br>\pi(\theta) = [det I(\theta)]^{1/2}<br>\end{aligned}<br>$$</li>
</ol>
<h2 id="最大熵先验"><a href="#最大熵先验" class="headerlink" title="最大熵先验"></a>最大熵先验</h2><p>先验均值被指定,寻找信息量最少的先验分布，即最大化熵的先验分布<br>熵和K-L距离定义密切相关,因此可以看成带有约束的Reference先验</p>
<h3 id="离散参数-theta-最大熵先验定理"><a href="#离散参数-theta-最大熵先验定理" class="headerlink" title="离散参数$\theta$最大熵先验定理"></a>离散参数$\theta$最大熵先验定理</h3><p>$\theta$ 为离散型随机变量, 取值为 $\theta_{1}, \theta_{2}, \cdots$<br>(至多可列个值), $\theta$ 的先验分布满足<br>$$<br>E^{\pi}\left[g_{k}(\theta)\right]=\sum_{i} g_{k}\left(\theta_{i}\right) \pi\left(\theta_{i}\right)=\mu_{k} \quad(k=1, \cdots, m) \text {, } \tag{1}<br>$$<br>其中 $g_{k}(\cdot), \mu_{k}(k=1, \cdots, m)$<br>分别表示已知的函数和已知的常数 (当然, 此时还隐含条件<br>$\left.\sum_{i} \pi\left(\theta_{i}\right)=1\right)$, 则满足条件上式且使<br>$E_{n}(\pi)$ 最大化的解为<br>$$<br>\bar{\pi}\left(\theta_{i}\right)=\frac{\exp \left{\sum_{k=1}^{m} \lambda_{k} g_{k}\left(\theta_{i}\right)\right}}{\sum_{i} \exp \left{\sum_{k=1}^{m} \lambda_{k} g_{k}\left(\theta_{i}\right)\right}} \quad(i=1,2, \cdots) \tag{2}<br>$$<br>其中 $\lambda_{1}, \cdots, \lambda_{m}$ 使得当 $\pi=\bar{\pi}$<br>时(1)式成立, 即<br>$$<br>\sum_{i} g_{k}\left(\theta_{i}\right) \bar{\pi}\left(\theta_{i}\right)=\mu_{k} \quad(k=1, \cdots, m) \tag{3}<br>$$<br>都成立.<br>上述结果的推导超出本教材的范围,<br>其证明可在很多变分法的书中找到,如<a href="https://1lib.us/book/2862293/1fb856">(Calculus of Variations with<br>Applications M. Ewing)</a></p>
<h3 id="连续参数-theta-最大熵先验定理"><a href="#连续参数-theta-最大熵先验定理" class="headerlink" title="连续参数$\theta$最大熵先验定理"></a>连续参数$\theta$最大熵先验定理</h3><p>设 $\theta$ 为 $\Theta=(-\infty, \infty)$ 上的连续型随机变量, $\theta$<br>的先验分布 $\pi(\theta)$ 满足<br>$$<br>E^{\pi}\left[g_{k}(\theta)\right]=\int_{\Theta} g_{k}(\theta) \pi(\theta) \mathrm{d} \theta=\mu_{k} \quad(k=1, \cdots, m)<br>$$<br>其中 $g_{k}(\cdot), \mu_{k}(k=1, \cdots, m)$<br>分别表示已知的函数和已知的常数, 则满足条件 (2.6.5) 且 使 $E_{n}(\pi)$<br>最大化的解为<br>$$<br>\tilde{\pi}(\theta)=\frac{\pi_{0}(\theta) \cdot \exp \left{\sum_{k=1}^{m} \lambda_{k} g_{k}(\theta)\right}}{\int_{\Theta} \pi_{0}(\theta) \cdot \exp \left{\sum_{k=1}^{m} \lambda_{k} g_{k}(\theta)\right} \mathrm{d} \theta}<br>$$<br>其中 $\lambda_{1}, \cdots, \lambda_{m}$ 使得当 $\pi=\tilde{\pi}$ 时式<br>(2.6.5) 成立, 即<br>$$<br>\int_{\Theta} g_{k}(\theta) \tilde{\pi}(\theta) \mathrm{d} \theta=\mu_{k} \quad(k=1, \cdots, m)<br>$$<br>都成立.</p>
<h4 id="求解步骤"><a href="#求解步骤" class="headerlink" title="求解步骤"></a>求解步骤</h4><ol>
<li>确定$m,g_1(\theta),\cdots,g_k(\theta)$</li>
<li>化简$\pi_{0}(\theta) \cdot \exp \left{\sum_{k=1}^{m} \lambda_{k} g_{k}(\theta)\right}$</li>
<li>$\bar{\pi}(\theta) \propto \pi_{0}(\theta) \cdot exp {\sum_{k=1}^{m} \lambda_{k}g_{k}(\theta)}$</li>
<li>利用归一化常数A,带入$E^{\bar{\pi}}(g_k(\theta)) = \mu_k$求解$\lambda_k$</li>
<li>得出$\bar{\pi}(\theta)$正比表达式</li>
<li>求归一化常数A</li>
<li>得出$\theta$的最大熵先验$\bar{\pi}(\theta)$</li>
</ol>
<h2 id="Reference先验"><a href="#Reference先验" class="headerlink" title="Reference先验"></a>Reference先验</h2><p>最早由<a href="https://people.eecs.berkeley.edu/~jordan/sail/readings/bernardo-1979.pdf">Bernardo(1979)</a>提出<br>多维场合修改的Jeffreys先验,将多维参数分为感兴趣的参数和多余(nuisance)参数<br>基本思想:获得观测数据后,使得参数的先验分布和后验分布之间的K-L距离最大</p>
<ol>
<li><p>Reference先验定义<br> 设样本 $X=\left(X_{1}, \cdots, X_{n}\right)$ 的分布族为<br> ${p(x \mid \theta), \theta \in$ $\theta}$, 其中 $\theta$ 为参数<br> (或参数向量), $\Theta$ 为参数空间; $\theta$ 的先验分布为<br> $\pi(\theta)$<br> 令 $\mathscr{P}={\pi(\theta)$<br> $\left.0: \int_{\Theta} \pi(\boldsymbol{\theta} \mid x) d \boldsymbol{\theta}&lt;\infty\right}$,此处<br> $\pi(\boldsymbol{\theta} \mid x)$ 为 $\theta$ 的后验分布.<br> 设先验分布 $\pi(\boldsymbol{\theta})$ 与后验分布<br> $\pi(\boldsymbol{\theta} \mid \boldsymbol{x})$ 的 $K-L$ 距离关于样本<br> $X$ 的期望为<br> $$<br> I_{\pi(\theta)}(\boldsymbol{\theta}, \boldsymbol{x})=\int_{\mathscr{X}^{(n)}} p(\boldsymbol{x})\left[\int_{\Theta} \pi(\boldsymbol{\theta} \mid x) \ln \frac{\pi(\boldsymbol{\theta} \mid \boldsymbol{x})}{\pi(\boldsymbol{\theta})} \mathrm{d} \boldsymbol{\theta}\right] \mathrm{d} \boldsymbol{x}<br> \tag{1}$$<br> 其中<br> $\mathscr{X}^{(n)}=\mathscr{X}<em>{1} \times \cdots \times \mathscr{X}</em>{1}$<br> 为样本空间,<br> $p(x)=\int_{\Theta} p(x \mid \theta) \pi(\boldsymbol{\theta}) \mathrm{d} \boldsymbol{\theta}$<br> 为样本 $\mathrm{X}$ 的边缘密度. 若<br> $\pi^{<em>}(\boldsymbol{\theta}) \in \mathscr{P}$, 且满足<br> $$<br> I_{\pi^{</em>}(\theta)}(\theta, x)=\max <em>{\pi(\theta) \in \mathscr{P}} I</em>{\pi(\theta)}(\theta, x) \tag{2}<br> $$<br> 则称<br> $$\pi^{*}(\theta) = arg \max <em>{\pi(\theta) \in \mathscr{P}}I</em>{\pi(\theta)}(\theta, x) \tag{3}$$<br> 为参数$\theta$的Reference先验</p>
</li>
<li><p>Reference先验的计算<br> 利用上式很难得到解析表达式,数值方法获得也很困难,替代办法是用渐进方法获得解析表达式<br> 设X<br> 表示一个简单试验的观测结果,向量$X^{(k)}=(X_1,\cdots,X_k)$的分量由随机变量$X$的$k$个独立复制组成,令<br> $$<br> I_{\pi(\theta)}\left(\theta, x^{(k)}\right)=\int_{x^{(k)}} p\left(x^{(k)}\right)\left[\int_{\theta} \pi\left(\theta \mid x^{(k)}\right) \ln \frac{\pi\left(\theta \mid x^{(k)}\right)}{\pi(\theta)} \mathrm{d} \theta\right] \mathrm{d} x^{(k)} \tag{4}<br> $$</p>
</li>
</ol>
<p>通过最大化<br>$I_{\pi(\theta)}\left(\theta, x^{(k)}\right)$,得到$\pi_{k}(\theta)=\arg \max <em>{\pi(\theta)} I</em>{\pi(\theta)}\left(\theta,x^{(k)}\right)$为了找到$\pi_{k}$的更方便的形式,改写$I_{\pi(\theta)}\left(\theta, x^{(k)}\right)$<br>如下:<br>$$<br>\begin{aligned}<br>I_{\pi(\theta)}\left(\theta, x^{(k)}\right) &amp;=\int_{X^{(k)}} p\left(x^{(k)}\right)\left[\int_{\theta} \pi\left(\theta \mid x^{(k)}\right) \ln \frac{\pi\left(\theta \mid x^{(k)}\right)}{\pi(\theta)} \mathrm{d} \theta\right] \mathrm{d} x^{(k)} \<br>&amp;=\int_{\theta} \pi(\theta)\left{\int_{X^{(k)}} p\left(x^{(k)} \mid \theta\right)\left[\ln \pi\left(\theta \mid x^{(k)}\right)-\ln \pi(\theta)\right] \mathrm{d} x^{(k)}\right} \mathrm{d} \theta \<br>&amp;= \int_{\Theta} \pi(\theta) \ln \frac{f_{k}(\theta)}{\pi(\theta)} \mathrm{d} \theta\end{aligned} \tag{5}<br>$$</p>
<p>此处<br>$$<br>\begin{aligned}<br>f_{k}(\theta)=\exp \left{\int_{\mathscr{x}^{-(k)}} p\left(x^{(k)} \mid \theta\right) \ln \pi\left(\theta \mid x^{(k)}\right) \mathrm{d} x^{(k)}\right} \tag{6} \<br>此处 \pi(\theta|x^{(k)}) 近似 N(\hat{\theta},I(\theta))<br>\end{aligned}<br>$$<br>利用拉格朗日求条件极值的方法,在$\int \pi(\theta) \mathrm{d} \theta=1$的条件下求<br>$$<br>I_{\pi(\theta)}\left(\theta, x^{(k)}\right)=\int_{\Theta} \pi(\theta) \ln \frac{f_{k}(\theta)}{\pi(\theta)} \mathrm{d} \theta \tag{7}<br>$$<br>的极大值.利用变分法求解,<br>可知其解$\pi_{k}(\theta) \propto f_{k}(\theta)$. <a href="">Berger 等(2009)</a><br>证明了在适当条件下 $\theta$ 的 Reference 先验为<br>$$<br>\pi^{*}(\theta)=\lim_{k \rightarrow \infty} \frac{f_{k}(\theta)}{f_{k}\left(\theta_{0}\right)} \tag{8}<br>$$<br>此处 $\theta_{0}$ 是参数空间 $\theta$ 的一个内点, $f_{k}(\theta)$<br>由式(6)给出.</p>
<ol start="4">
<li><p>当存在多余参数时 Reference 先验的计算</p>
<p> 在我们所讨论的统计模型中,当参数是多维时,我们感兴趣的参数常常是其中的一个参数(或某些参数的子集),其余的视为多余参数.此时求多参数情形下的无信息先验,可利用<br> Reference 先验来处理.<br> 其中的某些步聚可简化成一维的情形,通过计算 Jeffreys<br> 先验获得.具体说明如下.<br> 设似然函数为 $p(x \mid \theta, \lambda)$, 此处 $\theta$<br> 为感兴趣的参数, 而 $\lambda$ 为多余参数. 我们希望找到<br> 联合的无信息先验分布 $\pi(\theta, \lambda)$.<br> 处理这种带有多余参数的方法按下列步骤:</p>
<p> (1) 固定$\theta$,用标准的Reference先验方法获得$\pi(\lambda\mid\theta)$(如果$\lambda$是一维的,将$\theta$看成常数,计算Jeffreys<br> 先验, 获得$\pi(\lambda \mid \theta)$).</p>
<p> (2) 如果$\pi(\lambda\mid\theta)$是正常的先验,对$\lambda$积分得到<br> $$<br> p(x \mid \theta)=\int p(x \mid \theta, \lambda) \pi(\lambda \mid \theta) \mathrm{d} \lambda \tag{9}<br> $$</p>
<p> (3) 用$p(x \mid \theta)$计算Reffreys先验,获得$\pi(\theta)$)(如果$\theta$是一维的,利用$p(x|\theta)$)计算Jeffreys先验,获得$\pi(\theta)$</p>
<p> (4) $\theta$ 和 $\lambda$的联合先验为<br> $\pi(\theta,\lambda)=\pi(\lambda|\theta)\pi(\theta)$</p>
</li>
<li><p>两参数的Reference 先验的计算<br> 设$\theta=(\theta_1,\theta_2)$,其中$\theta_1$为感兴趣的参数,$\theta_2$为多余参数,令<br> $$<br> I\left(\theta_{1}, \theta_{2}\right)=\left(\begin{array}{ll}<br> I_{11}\left(\theta_{1}, \theta_{2}\right) &amp; I_{12}\left(\theta_{1}, \theta_{2}\right) \<br> I_{21}\left(\theta_{1}, \theta_{2}\right) &amp; I_{22}\left(\theta_{1}, \theta_{2}\right)<br> \end{array}\right) \tag{10}<br> $$<br> 为$\left(\theta_{1}, \theta_{2}\right)$ 的Fisher信息阵.<br> $\left(\theta_{1}, \theta_{2}\right)$的Reference先验可按下面四个步骤获得</p>
<p> (1) 求给定 $\theta_{1}$ 时 $\theta_{2}$ 的 Reference 先验<br> $\pi\left(\theta_{2} \mid \theta_{1}\right)$由于在一维的情形下Reference先验与Jeffreys先验相同,<br> 所以取$\pi\left(\theta_{2} \mid \theta_{1}\right)=\left|I_{22}\left(\theta_{1}, \theta_{2}\right)\right|^{1 / 2}$.<br> (2) 选取$\left(\theta_{1},\theta_{2}\right)$的参数空间$\Theta$上的紧子集(一维闭区间或多维有限闭集概念的推广)<br> $$<br> \Theta_1\subset\Theta_2\subset\cdots,满足\bigcup_{i=1}^{\infty} \Theta_i = \Theta \<br> 且对 \forall \theta_1,使得\pi(\theta_2|\theta_1) \quad 在集合 \quad \Omega_{i,\theta_1} = {\theta_2:(\theta_1,\theta_2)\in\Theta_i} \quad 上是有限的 \<br> 将 \pi\left(\theta_{2} \mid \theta_{1}\right)在 \Omega_{i, \theta_{1}}上正则化,得到<br> $$<br> $$<br> \pi_{i}\left(\theta_{2} \mid \theta_{1}\right)=K_{i}\left(\theta_{1}\right) \pi\left(\theta_{2} \mid \theta_{1}\right) I_{\Omega_{i, o_{1}}}\left(\theta_{2}\right)  \tag{11}<br> $$</p>
</li>
</ol>
<p>其中 $I_{A}(x)$ 表示集合 $A$ 上的示性函数,<br>而$K_{i}\left(\theta_{1}\right)=1 / \int_{\Omega_{i, 0},} \pi\left(\theta_{2} \mid \theta_{1}\right) \mathrm{d} \theta_{2} .$<br>(3) 求参数 $\theta_{1}$ 关于<br>$\pi_{i}\left(\theta_{2} \mid \theta_{1}\right)$ 的边缘Reference先验<br>$\pi_{i}\left(\theta_{1}\right)$, 其公式为</p>
<p>$$<br>\pi_{i} (\theta_1)=\exp {\frac{1}{2}\int_{\Omega_{i,\theta_1}}\pi_{i}(\theta_{2} \mid \theta_{1})\ln\frac{|I(\theta_{1}, \theta_{2})|}{|I_{22}(\theta_{1},\theta_{2})|}d\theta_{2} } \tag{12}<br>$$<br>此处 $I\left(\theta_{1}, \theta_{2}\right)$ 和<br>$I_{22}\left(\theta_{1}, \theta_{2}\right)$ 由式(10)给出 (4) 求极限得到<br>$\left(\theta_{1}, \theta_{2}\right)$ 的 Reference 先验<br>$$<br>\pi\left(\theta_{1}, \theta_{2}\right)=\lim_{i \rightarrow \infty}\left[\frac{K_{i}\left(\theta_{1}\right) \pi_{i}\left(\theta_{1}\right)}{K_{i}\left(\theta_{10}\right) \pi_{i}\left(\theta_{10}\right)}\right] \pi\left(\theta_{2} \mid \theta_{1}\right) \tag{13}<br>$$<br>比处假定极限存在, $\theta_{10}$ 为任一固定点</p>
<h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>设 $X \sim N\left(\mu, \sigma^{2}\right)$.<br>求$\theta=\left(\mu, \sigma^{2}\right)$的<br>(1) Jeffreys 先验<br>(2) Reference先验</p>
<h1 id="数学函数及统计方法"><a href="#数学函数及统计方法" class="headerlink" title="数学函数及统计方法"></a>数学函数及统计方法</h1><h2 id="Gamma-函数"><a href="#Gamma-函数" class="headerlink" title="$\Gamma$函数"></a>$\Gamma$函数</h2><p>$$\Gamma(\alpha) = \int_{0}^{+\infty}x^{\alpha-1}e^{-x}dx$$</p>
<h2 id="beta-函数"><a href="#beta-函数" class="headerlink" title="$\beta$函数"></a>$\beta$函数</h2><h1 id="离散分布"><a href="#离散分布" class="headerlink" title="离散分布"></a>离散分布</h1><h2 id="伯努利分布（又称之为二点分布或者0-1分布）"><a href="#伯努利分布（又称之为二点分布或者0-1分布）" class="headerlink" title="伯努利分布（又称之为二点分布或者0-1分布）"></a>伯努利分布（又称之为二点分布或者0-1分布）</h2><ol>
<li><p>密度分布函数</p>
</li>
<li><p>数字特征</p>
</li>
<li><p>性质 $\theta$为伯努利试验中成功概率,失败概率为$1-\theta$<br> $P(x)= \theta^x(1-\theta)^{1-x}$</p>
</li>
</ol>
<h2 id="二项分布-N重伯努利实验-X-sim-B-n-theta"><a href="#二项分布-N重伯努利实验-X-sim-B-n-theta" class="headerlink" title="二项分布(N重伯努利实验)$X \sim B(n,\theta)$"></a>二项分布(N重伯努利实验)$X \sim B(n,\theta)$</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> f(x;\theta) = \left( \begin{array}{c} n \ x \end{array} \right) \theta^x(1-\theta)^{n-x}<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征</p>
<p> $$<br> \begin{align}<br> E[x] &amp; = n\theta \<br> Var[x] &amp;= n\theta(1-\theta) \<br> Mode[x] &amp;=(n+1)\theta<br> \end{align}<br> $$</p>
</li>
<li><p>性质<br> $\theta$为伯努利试验中成功概率,失败概率为$1-\theta$,则在n次独立的伯努利试验中，成功次数$X \sim B(n,\theta)$<br> $$P(X = k|\theta) = C_k^n \theta^k(1-\theta)^{n-k} \quad , k = 0,1,2,…,n $$<br> ## 负二项分布$Nb(r,\theta)$,又称帕斯卡分布<br> 已知一个事件在伯努利试验中每次的出现概率是p,在一连串伯努利试验中,一件事件刚好在第r+x次试验出现第r次的概率</p>
</li>
<li><p>密度分布函数<br> $$f(x;r,p) = C_{x}^{x+r-1}p^r(1-p)^x ,\quad x=0,1,…$$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h2 id="多项分布"><a href="#多项分布" class="headerlink" title="多项分布"></a>多项分布</h2><p>随机实验如果有k个可能结局$A_1,A_2,…,A_k$，分别将他们的出现次数记为随机变量$X_1,X_2,…,X_k$，它们的概率分布分别是$p_1,p_2,…,p_k$，那么在n次采样的总结果中，$A_1$出现$n_1$次、$A_2$出现$n_2$次、…、$A_k$出现$n_k$次的这种事件的出现概率$P$有下面公式</p>
<ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> P(X_1=n_1,…,X_k=n_k;p_1,…,p_k) =&amp;\left{\begin{array}{l}<br> \frac{n!}{n_1!\cdots n_k!} p_1^{n_1}\cdots p_n^{n_k}, \quad \sum_{i=1}^{k}n_i=n, \sum_{i=1}^{k}p_i=1\<br> 0, otherwise<br> \end{array}\right. \<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征 $$<br> \begin{aligned}<br> E[x_1,\cdots,x_k] &amp; = (np_1,\cdots,np_k) \<br> Var[x_i] &amp;= np_i(1-p_i) , \quad i=1,\cdots,k\<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
<li><p>最大似然估计<br>$$<br> \begin{aligned}<br> 用拉格朗日陈志发，得到带参数限制的似然函数 \<br> l(D|p_1,…,p_n,n) &amp; =ln(\prod_{i=1}^{N} \frac{n!}{n_{i1}!\cdots n_{ik}!} )+(\sum_{i=1}^{N}\sum_{j=1}^{k} n_{ij}ln(p_j)) + \alpha(1-\sum_{j=1}^{k}p_j)\<br> 对 p 求导 \<br> \frac{\partial}{\partial p_j}ln P(x|p) &amp;= \frac{\sum_{i=1}^{N}n_{ij}}{p_j}-\alpha = 0\<br>  \Rightarrow p_j &amp;= \frac{\sum_{i=1}^{N}n_{ij}}{\alpha}  \Rightarrow 1=\sum_{j=1}^{k}\frac{\sum_{i=1}^{N}n_{ij}}{\alpha}  \Rightarrow \alpha = N\cdot k\<br> p_j &amp;= \frac{\sum_{i=1}^{N}n_{ij}}{N\cdot k}<br> \end{aligned}<br>$$</p>
</li>
</ol>
<h2 id="泊松分布-Poisson-distribution"><a href="#泊松分布-Poisson-distribution" class="headerlink" title="泊松分布(Poisson distribution)"></a>泊松分布(Poisson distribution)</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> P(x=k;\lambda)  = \frac{\lambda^k}{k!}e^{-\lambda},\quad \lambda&gt;0,k=0,1,…<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; = \lambda \<br> Var[x] &amp;= \lambda<br> \end{aligned}<br> $$<br> 泊松分布的Jeffreys先验<br> $\pi(\theta) = \sqrt{I(\theta)} = \sqrt{\frac{n}{\lambda}}$<br> $$<br> \begin{align}<br> f(x;\lambda)  &amp;= \frac{\lambda^x}{x!}e^{-\lambda},\quad \lambda&gt;0,x=0,1,… \<br> E[x] &amp;= \lambda \<br> L(\lambda|x_1,…,x_n) &amp;=  \frac{\lambda^{x_1+…+x_n}}{x_1!\cdots x_n!}e^{-n\lambda}  \<br> l(\lambda|x_1,…,x_n) &amp;= \sum_{i=1}^n x_iln(\lambda)-n\lambda+ln(x_1!\cdots x_n!)   \<br> \frac{\partial}{\partial \lambda}ln f(x|\lambda) &amp;= \frac{\sum_{i=1}^{n} x_i}{\lambda}-n \<br> \frac{\partial^2}{\partial \lambda^2}ln f(x|\lambda) &amp;= -\frac{\sum_{i=1}^n x_i}{\lambda^2}\<br> I(\lambda) &amp; = \sum_{x_1,\cdots,x_n =0}^{\infty} \frac{\sum_{i=1}^n x_i}{\lambda^2}\frac{\lambda^{x_1+…+x_n}}{x_1!\cdots x_n!}e^{-n\lambda} \</p>
<pre><code>  &amp; = \frac&#123;1&#125;&#123;\lambda^2&#125; \sum_&#123;i=1&#125;^&#123;n&#125; [(\sum_&#123;x_i=0&#125;^&#123;\infty&#125; \frac&#123;x_i\lambda^&#123;x_i&#125;e^&#123;-\lambda&#125;&#125;&#123;x_i!&#125;) \prod_&#123;j\neq i&#125;^&#123;n&#125; (\sum_&#123;x_j=0&#125;^&#123;\infty&#125;\frac&#123;\lambda^&#123;x_j&#125;e^&#123;-\lambda&#125;&#125;&#123;x_j!&#125;)] \\
  &amp; =  \frac&#123;1&#125;&#123;\lambda^2&#125; \sum_&#123;i=1&#125;^&#123;n&#125; (\sum_&#123;x_i=0&#125;^&#123;\infty&#125; \frac&#123;x_i\lambda^&#123;x_i&#125;e^&#123;-\lambda&#125;&#125;&#123;x_i!&#125;)\\
  &amp; = \frac&#123;1&#125;&#123;\lambda^2&#125;\sum_&#123;i=1&#125;^&#123;n&#125; \lambda \\
  &amp; = \frac&#123;n&#125;&#123;\lambda&#125; \\
</code></pre>
<p> \pi(\theta) &amp;= \sqrt{I(\theta)} = \sqrt{\frac{n}{\lambda}}<br> \end{align}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h1 id="连续分布"><a href="#连续分布" class="headerlink" title="连续分布"></a>连续分布</h1><h2 id="均匀分布"><a href="#均匀分布" class="headerlink" title="均匀分布"></a>均匀分布</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> f(x;) =<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征 $$<br> \begin{aligned}<br> E[x] &amp; =  \<br> Var[x] &amp;=  \<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h2 id="指数分布"><a href="#指数分布" class="headerlink" title="指数分布"></a>指数分布</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> f(x;\lambda) = \left{\begin{array}{l}<br> 0 ,\quad x \leq 0 \<br> \lambda e^{-\lambda x}, \theta &gt; 0<br> \end{array}\right.<br> \end{aligned}<br> $$</p>
</li>
<li><p>分布函数<br> $$<br> \begin{aligned}<br> F(x;\lambda) = \left{\begin{array}{l}<br> 0 ,\quad x \leq 0 \<br> 1-e^{-\lambda x}, x &gt; 0<br> \end{array}\right.<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; = \frac{1}{\lambda} \<br> Var[x] &amp;=  \frac{1}{\lambda^2}\<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质 无记忆性: $s,t\geq 0 \Rightarrow P(T&gt;s+t|T&gt;t) = P(T&gt;s)$</p>
</li>
</ol>
<h2 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> f(x;) =<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; =  \<br> Var[x] &amp;=  \<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h2 id="对数正态分布-LN-x-mu-sigma-2"><a href="#对数正态分布-LN-x-mu-sigma-2" class="headerlink" title="对数正态分布$LN(x;\mu,\sigma^2)$"></a>对数正态分布$LN(x;\mu,\sigma^2)$</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> &amp;LN(x;\mu,\sigma^2) = \frac{1}{x\sqrt{2\pi\sigma^2}}exp{-\frac{1}{2\sigma^2}(ln(x)-\mu)^2 },\quad x&gt;0 \<br> &amp;\mu是位置参数,\sigma&gt;0 是刻度参数<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> &amp; E(x)=e^{\mu+\frac{1}{2}\sigma^2}, \quad n&gt;1 \<br> &amp; Var(x) = (e^{\sigma^2}-1)e^{2\mu+\sigma^2}, \quad n&gt;2\<br> &amp; Mode(x) = e^{\mu-\sigma^2}<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h2 id="Beta-x-alpha-beta-分布"><a href="#Beta-x-alpha-beta-分布" class="headerlink" title="$Beta(x;\alpha,\beta)$分布"></a>$Beta(x;\alpha,\beta)$分布</h2><p>(1)    密度分布函数<br>$$<br>f(x;\alpha,\beta) = \frac{\Gamma(\alpha+\beta)}{\Gamma(\alpha)\Gamma(\beta)}x^{\alpha-1}(1-x)^{\beta-1}, 0&lt;x&lt;1,\alpha&gt;0,\beta&gt;0<br>$$<br>(2)    数字特征<br>$$<br>E[X] =\frac{\alpha}{\alpha+\beta} \<br>Var[X]=\frac{\alpha\beta}{(\alpha+\beta)^2(\alpha+\beta+1)} \<br>Mode[X] = \frac{\alpha-1}{\alpha+\beta-2}<br>$$<br>(3)    性质</p>
<ul>
<li>若$X\sim \chi^2_{2\alpha},Y\sim \chi_{2\beta}^2$独立，则$U=\frac{X}{X+Y} \sim Be(\alpha,\beta)$</li>
</ul>
<p>(4)    R语言用法</p>
<p>​    $shape1 = \alpha,shape2=\beta$</p>
<pre class="line-numbers language-R" data-language="R"><code class="language-R">dbeta(x, shape1, shape2, ncp &#x3D; 0, log &#x3D; FALSE)
pbeta(q, shape1, shape2, ncp &#x3D; 0, lower.tail &#x3D; TRUE, log.p &#x3D; FALSE)
qbeta(p, shape1, shape2, ncp &#x3D; 0, lower.tail &#x3D; TRUE, log.p &#x3D; FALSE)
rbeta(n, shape1, shape2, ncp &#x3D; 0)</code></pre>

<ul>
<li><p>生成随机数</p>
<pre class="line-numbers language-R" data-language="R"><code class="language-R">rbeta(n,alpha,beta)</code></pre></li>
</ul>
<h2 id="t分布-tau-x-n-mu-sigma"><a href="#t分布-tau-x-n-mu-sigma" class="headerlink" title="t分布 $\tau(x;n,\mu,\sigma)$"></a>t分布 $\tau(x;n,\mu,\sigma)$</h2><h3 id="密度分布函数"><a href="#密度分布函数" class="headerlink" title="密度分布函数"></a>密度分布函数</h3><p>$$<br>\begin{aligned}<br>\tau(x;n,\mu,\sigma) = \frac{1}{\sigma}\frac{\Gamma(\frac{n+1}{2})}{\sqrt{n\pi}\Gamma(\frac{n}{2})}(1+\frac{1}{n}(\frac{x-\mu}{\sigma})^2)^{-\frac{n+1}{2}} \<br>n&gt;0 为自由度, \mu为位置参数,\sigma&gt;0为刻度参数<br>\end{aligned}<br>$$</p>
<ol>
<li>数字特征<br> $$<br> \begin{aligned}<br> &amp;E[x]=\mu,n&gt;1 \<br> &amp;Var[x] = \frac{n\sigma^2}{n-2},n&gt;2\<br> &amp;Mode[x] = x \<br> \end{aligned}<br> $$</li>
</ol>
<h2 id="卡方分布-chi-n-2"><a href="#卡方分布-chi-n-2" class="headerlink" title="卡方分布$\chi_{n}^2$"></a>卡方分布$\chi_{n}^2$</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> f(x;) =<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; =  \<br> Var[x] &amp;=  \<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h2 id="伽马分布-Gamma-x-alpha-lambda"><a href="#伽马分布-Gamma-x-alpha-lambda" class="headerlink" title="伽马分布$\Gamma(x;\alpha,\lambda)$"></a>伽马分布$\Gamma(x;\alpha,\lambda)$</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> \Gamma(x;\alpha,\lambda) =&amp;\left{\begin{array}{l}<br> \frac{\lambda^{\alpha}}{\Gamma(\alpha)} x^{\alpha-1} e^{-\lambda x}, x \geq 0 \<br> 0, x&lt;0<br> \end{array}\right. \<br> \Gamma(\alpha) =&amp; \int_{0}^{+\infty}x^{\alpha-1}e^{-x}dx<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; = \frac{\alpha}{\lambda} \<br> Var[x] &amp;= \frac{\alpha}{\lambda^2} \<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
<li><p>R语言代码</p>
</li>
</ol>
<pre class="line-numbers language-R" data-language="R"><code class="language-R">dgamma(x, shape, rate &#x3D; 1, scale &#x3D; 1&#x2F;rate, log &#x3D; FALSE)
pgamma(q, shape, rate &#x3D; 1, scale &#x3D; 1&#x2F;rate, lower.tail &#x3D; TRUE,
       log.p &#x3D; FALSE)
qgamma(p, shape, rate &#x3D; 1, scale &#x3D; 1&#x2F;rate, lower.tail &#x3D; TRUE,
       log.p &#x3D; FALSE)
rgamma(n, shape, rate &#x3D; 1, scale &#x3D; 1&#x2F;rate)</code></pre>

<p>参数说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>x,q</code></td>
<td></td>
</tr>
<tr>
<td><code>p</code></td>
<td>概率向量</td>
</tr>
<tr>
<td><code>n</code></td>
<td>观察值的长度</td>
</tr>
<tr>
<td><code>rate</code></td>
<td></td>
</tr>
<tr>
<td><code>shape</code></td>
<td>$shape = \alpha$</td>
</tr>
<tr>
<td><code>scale</code></td>
<td>$scale = \frac{1}{\lambda}$</td>
</tr>
</tbody></table>
<pre class="line-numbers language-R" data-language="R"><code class="language-R">rgamma(1,shape &#x3D; alpha,scale &#x3D; 1)</code></pre>





<h2 id="逆伽马分布"><a href="#逆伽马分布" class="headerlink" title="逆伽马分布"></a>逆伽马分布</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> \Gamma^{-1}(\theta;\alpha,\lambda)=&amp;<br> \left{\begin{array}{l}<br> \frac{\lambda^{\alpha}}{\Gamma(\alpha)} \theta^{-(\alpha+1)} \exp \left(-\frac{\lambda}{\theta}\right) \quad, \theta \geq 0 \<br> 0 \quad, \theta&lt;0<br> \end{array}\right. \<br> \Gamma(\alpha) =&amp; \int_{0}^{+\infty}x^{\alpha-1}e^{-x}dx<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; =  \<br> Var[x] &amp;=  \<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h2 id="帕雷托分布-Pa-theta-0-alpha"><a href="#帕雷托分布-Pa-theta-0-alpha" class="headerlink" title="帕雷托分布$Pa(\theta_0,\alpha)$"></a>帕雷托分布$Pa(\theta_0,\alpha)$</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> \pi(\theta;x_{min},k) &amp;=\left{\begin{array}{l}<br> 0 ,\quad \theta \leq x_{min}\<br> \frac{kx_{min}^{k}}{\theta^{k+1}}, \theta &gt; x_{min}<br> \end{array}\right.<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; =  \<br> Var[x] &amp;=  \<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h2 id="柯西分布"><a href="#柯西分布" class="headerlink" title="柯西分布"></a>柯西分布</h2><ol>
<li><p>密度分布函数<br> $$<br> \begin{aligned}<br> f(x;) =<br> \end{aligned}<br> $$</p>
</li>
<li><p>数字特征<br> $$<br> \begin{aligned}<br> E[x] &amp; =  \<br> Var[x] &amp;=  \<br> mod[x] &amp;=<br> \end{aligned}<br> $$</p>
</li>
<li><p>性质</p>
</li>
</ol>
<h1 id="统计检验量"><a href="#统计检验量" class="headerlink" title="统计检验量"></a>统计检验量</h1><h2 id="单变量偏度系数-Skewness-test-of-normality"><a href="#单变量偏度系数-Skewness-test-of-normality" class="headerlink" title="单变量偏度系数(Skewness test of normality)"></a>单变量偏度系数(Skewness test of normality)</h2><p>$$<br>\sqrt{\beta_1} = \frac{E[(X-\mu)^3]}{\sigma_X^3}, \mu_X= E[X],\sigma_X^2=Var[X] \<br>样本偏度 :\sqrt{b_1}=\frac{\frac{1}{n}\sum_{i=1}^n (X_i-\bar{X})^3}{(\frac{1}{n}\sum_{i=1}^n(X_i-\bar{X})^2)^{3/2}} \<br>如果X是正态的,那么\sqrt{b_1} \sim N(0,\frac{6}{n}) \<br>而对于有限的采样 Var(\sqrt{b_1}) = \frac{6(n-2)}{(n+1)(n+3)} 会使得 Type \ I\ error\ rate与\alpha相当<br>$$</p>
<h2 id="多变量偏度系数"><a href="#多变量偏度系数" class="headerlink" title="多变量偏度系数"></a>多变量偏度系数</h2><p>$$<br>\begin{aligned}<br>\beta_{1, d}=E[(X-\mu)^{T} \Sigma^{-1}(Y-\mu)]^{3}<br>\end{aligned}<br>$$</p>
<p>Under normality, $\beta_{1, d}=0 .$ The multivariate skewness statistic<br>is<br>$$<br>b_{1, d}=\frac{1}{n^{2}} \sum_{i, j=1}^{n}\left(\left(X_{i}-\bar{X}\right)^{T} \widehat{\Sigma}^{-1}\left(X_{j}-\bar{X}\right)\right)^{3}<br>$$</p>
<h2 id="t检验"><a href="#t检验" class="headerlink" title="t检验"></a>t检验</h2><h3 id="两正态样本t检验"><a href="#两正态样本t检验" class="headerlink" title="两正态样本t检验"></a>两正态样本t检验</h3><p>$$<br>T(x, y)=\frac{\sqrt{\frac{m n}{m+n}}(\bar{x}-\bar{y})}{\sqrt{\frac{1}{m+n-2}\left[\sum_{i=1}^{m}\left(x_{i}-\bar{x}\right)^{2}+\sum_{j=1}^{n}\left(y_{i}-\bar{y}\right)^{2}\right]}}<br>$$</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>math</tag>
        <tag>概率统计分布</tag>
        <tag>R语言</tag>
      </tags>
  </entry>
  <entry>
    <title>国企改革究竟改的是什么？</title>
    <url>//post/political/%E5%9B%BD%E4%BC%81%E6%94%B9%E9%9D%A9%E7%A9%B6%E7%AB%9F%E6%94%B9%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.html</url>
    <content><![CDATA[<blockquote>
<p>转载自 佐伊23</p>
<p>链接：<a href="https://www.zhihu.com/question/30105824/answer/1484712593">https://www.zhihu.com/question/30105824/answer/1484712593</a></p>
<p>来源：知乎</p>
</blockquote>
<p>“国企工人不就是大锅饭吗，不就是磨洋工吗，这样不改还得了啊？”</p>
<p>“他们不就是喜欢从厂里面偷东西吗，这不就是产权不明确无人负责导致的吗？”</p>
<p>“居然还有人说当时的国企好，国企这么好，那为什么垮了？”</p>
<p>“那些下岗的自己不努力，怪谁！”</p>
<p>当过程被人有意无意忽略的时候，某些结果就显得不可理解。但是当我们把过程补齐的时候，一切看似矛盾的事物又都显得那么自洽。</p>
<p>改革开放前，我国国营企业有三大特点。</p>
<p>经济上。企业的利润扣除社会保障基金和扩大再生产的资金外，归根结底要通过各种福利制度返还职工。国企有自己的医院、学校和修房子的住建科，职工享受免费的医疗和教育，并且享受福利分房。也就是说，国企的钱不光要给职工发工资，还要给职工修房子、上学、看病。</p>
<p>管理上。企业在逐步实行“两参一改三结合”（有些实行得好点，有些差一点），即“干部参加劳动，工人参加管理；改革不合理的规章制度；工程技术人员、管理者和工人在生产实践和技术革新中相结合”。工人在劳动中不是被动的工具，不是被动的领受任务，而是主动的自觉的人，主动参与到企业计划的制定之中。</p>
<p>工人和企业的关系上。工人是企业的主人，而不是企业的雇员。企业管理人员（厂长、书记等等）没有权力开除工人。一般而言，只要工人不犯罪，厂里就没有开除工人的权力。</p>
<p>对国企而言，改革改的就是这三点。</p>
<span id="more"></span>

<h2 id="一、从放权让利到经济责任制"><a href="#一、从放权让利到经济责任制" class="headerlink" title="一、从放权让利到经济责任制"></a>一、从放权让利到经济责任制</h2><p>国企改革的第一阶段叫做放权让利。</p>
<p>1978年后我国确立了放权让利的基调，要求“扩大企业自主权，并且把企业经营好坏同职工的物质利益结合起来。”从1979年4月开始，中央在2100多个企业进行了试点。</p>
<p>我国历史上有两次大规模企业权力下放，一次是1958年，一次是1979年。但是，两者有本质不同。1958年在工业企业下放的同时，大力推行工人民主管理，而1979年的放权让利同时大力推行厂长经理负责制。这实际是用物质刺激（奖金）回收工人管理工厂的权力，从短期看工人收入增加，从长期看工人权力丧失，最终必然导致更大的经济利益的丧失。</p>
<p>放权扩大了厂长经理享有的特权，使企业经营管理人员的公权力私有化，破坏了工人阶级在企业中的领导权。也就是说，国家把权力下放给企业，企业却把权力集中到了厂长经理手里。这显然会损害工人阶级积极性，是不利于国营企业发展的。</p>
<p>在扩权的初期，企业表现出很高的增产增收的积极性，也多发了一些工资，工人的经济收入在不断提高，而且增长的速度较快。以北京某机械厂为例，1983年机械厂开始对直接生产工人实行超额计件工资制，即超额完成生产指标颁发超额奖，全厂职工的月平均工资从1978年的52元上升到1985年的119元，年均工资增长13％。在这一阶段上，工人逐渐放弃了管理权利，从以前的政治挂帅走向了关注物质利益。然而好景不长，国家提高工资是通过增发货币形成的，这导致经济混乱、财政赤字和通货膨胀。到1980年底，中央决定“进一步调整国民经济”，国有企业也由进行“扩权”改革转向强化完成国家计划的“责任制”，这宣告了放权让利的结束。但是，放权让利虽然结束了，工人被回收的管理权力，却是再也拿不回来了。</p>
<h2 id="二、利改税和拨改贷"><a href="#二、利改税和拨改贷" class="headerlink" title="二、利改税和拨改贷"></a>二、利改税和拨改贷</h2><p>1983年的利改税和1985年的拨改贷，是国企改制史上至关重要的两个环节。通过利改税和拨改贷两个制度设计，国企在极度不公平的环境下参与了市场竞争，为之后国企破产埋下伏笔。</p>
<p>我国企业以前所有利润统一上缴国家，如果需要扩建厂房或者购买设备，则由国家无偿拨款给企业。利改税就是用所得税替代利润上缴，用贷款替代无偿拨款。</p>
<p>企业利润全部上缴，国家就无偿拨款给企业搞建设；企业利润不上交了（只缴税而不交利润），国家就不拨款了，企业搞建设就去银行贷款。这听起来很公平，但事实上全然不是。</p>
<p>首先看利改税。我们以大企业为例，国家对有盈利的国营大中型企业，按55％的比例税率征收所得税，所得税后剩下的利润，一部分上缴国家，一部分按照国家核定的留利水平留给企业。整体而言，企业要将大约7-8成的利润通过利税方式上缴国家。</p>
<p>再看拨改贷。国家收走了企业8成的盈利，却不再给企业的建设拨款，而是要求企业向银行借贷。这使得国有企业面临异常困难的境地。当时国有企业已经开始和私企、外企竞争了，但是私企外企的综合税率只有17%-33%（本身税就低，还有各种减免），而国企的综合税率却在70%-80%。这是典型的不平等竞争。外企和私企赚钱了，大部分可以留下来扩大再生产或者购买更新的设备，国企赚钱了，大部分给了国家，国家却不再拨款给企业建设，而要求企业自己去贷款买新设备。这直接导致国企设备老旧，资金不足。</p>
<p>国企数十年来的利润都给了国家搞建设，而没有用来发展国企自身，本指望国家拨款更新设备，结果突然拨改贷，使得它要么不更新设备，要么背负巨额债务去发展生产。拨改贷实施后，原先的国营企业负债率从20%左右急速升至80%以上，个别企业全额负债，这严重影响了企业的积极性和发展后劲。</p>
<p>不仅如此，拨改贷项目仍然沿袭由国家定项目，企业和建设单位听命使用资金的做法。国家定项目就是领导人定项目，厂里面的领导人为了政绩胡乱贷款上项目。这导致上届领导借钱下届领导人还款，对借钱者没有有效的制约手段。在“拨改贷”实行后不久，一些厂长经理就悟出了“不贷白不贷”的道理，向国家争投资、争项目、争贷款，最终导致国企债务高企，并引发了80年代数次经济失衡。</p>
<h2 id="三、一长制和工人的积极性降低"><a href="#三、一长制和工人的积极性降低" class="headerlink" title="三、一长制和工人的积极性降低"></a>三、一长制和工人的积极性降低</h2><p>随着一长制的恢复，工人失去已有的民主权利，管理层逐渐失控。《工人日报》指出：“随着改革方向的明确，厂长、经理及其他经营管理人员的地位、作用已经得到了明确的界定，他们的权力得到了明确的保证。然而，无庸讳言，我们在正确地强调和注重了厂长、经理阶层的权力和职能时，却不恰当地疏忽了职工劳动者的应有权利。致使职工在分享改革成果的预期未得实现的同时，又未能分享参与协调的机会”。</p>
<p>1982年全国职工状况调查表明，一些领导干部通过不正当的手段为自己的子女安排较好的工种，在提干、晋级、住房分配等涉及群众利益方面，都给自己以及自己的子女和亲属以特殊的照顾。1984年，国家开始改革劳动用工制度，招收合同制工人，1986年废除子女顶替和内部招工办法。</p>
<p>1986年有调查表明，由于搞活企业的需要，企业管理者向经营者转化，被赋予了更大的企业权力。企业厂长由上级领导任命、委派，实行负责制，职工满意不满意都得接受，干好干坏群众既不能褒，也不能贬。他们说：“工人只尽主人翁义务，没有主人翁权利，主人担风险（企业办不好，领不到工资），公仆有保险（企业办垮了照样当官或调走了事）”。企业干群关系开始紧张，工人用消极怠工来对付干部，已经成为公开的秘密。</p>
<p>据中华全国总工会1988年对17个城市400多个企业的21万职工所作的劳动积极性调查显示，“国营企业劳动者的劳动热情不在峰值而在谷底。21万职工中认为自己的劳动积极性得到了充分发挥的只占12%。”因为此时工人队伍已经瓦解，所谓的劳动积极性就是关心私利的积极性，当工人的个人利益得不到满足时，劳动积极性自然就会消失。</p>
<h2 id="四、承包制和工人积极性的进一步降低"><a href="#四、承包制和工人积极性的进一步降低" class="headerlink" title="四、承包制和工人积极性的进一步降低"></a>四、承包制和工人积极性的进一步降低</h2><p>1987年5月，国务院在全国推广承包制。承包制就是把国营企业的各个车间部门承包给各种厂长、书记、主任等等，这些人按承诺缴纳一定的利润，剩下的钱可以自行分配。</p>
<p>承包制使得工人和干部的收入差距迅速扩大。按照国家的规定，应当采取公开招标办法，通过竞争确定承包经营者，但实际中很少有采用竞争办法的，基本上都是主管领导拍板。在政府和企业之间，企业的承包基数和分成比例等指标取决于政府发包部门和厂长的谈判，没有统一和科学的标准；在企业内部，根据游正林的调查，承包人和承包监督人一般为分厂厂长和书记，在承包指标上有讨价还价余地，承包指标也不会订的太高，正常情况下承包任务完成都不会很难，因此“完不成年度责任目标的，应扣减厂长的个人收入”也就成了空话。</p>
<p>承包奖包括风险抵押金和超额奖两部分，超额奖的分配由承包者自主决定，不再是公开的。这样，通过两权分离就创造出来“先富起来”的一批干部。现代化大生产彼此之间的联系密切，很难按照计件工资的方式来计算劳动成果，再加上辅助工人和非生产工人没有有形的劳动产品，因此工人的工资改革变成了普调。同时也开始发年度奖和红包，工人之间的年度奖基本都一样，工人与经营者奖金差距日益拉大。工人对工厂的变化看的非常清楚，工人中都流传着这样的话：“工人穷，厂长富，车间主任万元户，厂长挣钱没有数。”</p>
<h2 id="五、所谓的懒汉"><a href="#五、所谓的懒汉" class="headerlink" title="五、所谓的懒汉"></a>五、所谓的懒汉</h2><p>一长制使得厂长建立了工厂里面的独裁，承包制扩大了工人和干部的收入差距，这还没完。厂里面的领导为了赚更多的钱，开始在外面建小厂。钢铁厂的领导开个焦炭厂，高价把焦炭卖给自己单位；媒矿的领导在外面开个洗煤厂，私底下利益输送。</p>
<p>作为小说《抉择》原型的那家纺织厂每年的招待费就一千多万元。每个厂长经理退休，发给一百万元办三产，也就是个人小纺织厂。于是大纺织厂周围布满了小纺织厂，国家的资金、原料、市场都流到了小纺织厂。小厂红红火火，大厂一点一点被蚕食。大厂的工人失业，被小厂以低价招来，一天干十几个小时，随意压榨剥削。</p>
<p>这一切，都被工人看在眼里。就在这样的大背景下，工人和工厂的关系发生了根本性变化。曾经在毛时代积极奋战的工人，有一些人开始变得偷奸耍滑。</p>
<p>70年代的时候，某个钢铁厂的领导公车私用，被一群工人堵在厂门口，要求他下车来解释，这个车拿去干嘛了，为什么要占国家的便宜。80年代的时候，还是那个钢铁厂，还是那些工人，他们开始从厂里面偷钢偷铁，拿一块好点的钢回家去打把菜刀，或者投点特殊钢材拿去卖给私人老板。你问工人，“你为什么要这样干啊？”他说，“领导大偷，工人小偷，这有什么问题吗？国家的便宜，不占白不占。”</p>
<p>部分工人开始了磨洋工。当资本制度全面建立时，曾经的主人由抱怨而愤怒、由愤怒而反抗，最初这种反抗是消极的，是以怠工或磨洋工的形式体现出来的。这就是磨洋工的原因。</p>
<p>一种声音出现了，他们痛斥工人偷懒，他们大呼人性本恶，他们说国企效率就是低下，国企工人就是磨洋工，他们说这一切的原因就是国企没有清晰的产权制度，“全民所有就是全民所无”。他们献言献策，要建立一个由严格的规章制度和明晰的产权制度构成的现代化企业，去防范工人从厂里面拿钢拿铁。但是，他们却从来不说这一切都是什么造成的，他们也从不建立一个规章制度去限制资本占有工人的剩余价值。</p>
<p>【然而，即使在这样的条件下，很多国企工人照样还是勤勤恳恳的工作，我曾经问过很多老工人，他们怎么看待大锅饭养懒汉的说法。他们无一例外痛斥这种污蔑他们的说法，“我们是企业的主人，不是懒汉！”】</p>
<h2 id="六、1993年后的国企改革"><a href="#六、1993年后的国企改革" class="headerlink" title="六、1993年后的国企改革"></a>六、1993年后的国企改革</h2><p>1993年11月开始了新一轮国企改革，三个重点：一是抓大放小，二是建立公司法人治理结构，三是理顺企业产权关系。与此同时，全国人大颁布了《公司法》，这标志着按份占有资本并实行权力的产权制度在中国有了法律依据。结合1993年的增值税改革前后的五个文件，可以得出两个结论：</p>
<p>1、国家除了17%的增值税，还可以获得33%的所得税。表面上看税率较以前的55%有所降低，但由于增值税的税基较原来扩大了很多，因此，国家所得较以前有大幅增加（这从后来津津乐道的税收增长中可以看出来）。更为重要的是，在税负增加的同时，我国彻底抛弃了教育、医疗和住房的包袱，国民不再能通过财政收入享受国有资产的收益。工人曾经享有的医疗、教育和住房福利，基本被改革掉了（1998年后明确终止福利分房，最终完结了工人从经济上获取国企利润的途径）。</p>
<p>2、对于企业职工福利和奖金，由于原来的文件被废止，而新文件没有交代，于是，它的法律地位被弱化。因此，企业留存的利润，从理论上来讲，除了用于投资，便没有任何可以索取的途径。</p>
<p>从1993年起，国有资产分成了三大块：政府的税收，约占50%或更多；用于投资的利润，大致占50%弱；没有任何法律保障的职工福利，份额微不足道。</p>
<p>1994年通过并于1995年实施的《劳动法》，从法律层面上明确了劳动者仅仅是企业的雇员，而不是工厂的主人，也就是说，从法律意义而言，工厂有权力开除工人了。与此前后，国企开始全面推行合同制，国有单位的劳动合同制职工由1992年的2059万人猛增到1996年的5549万人。在签合同的过程中，一开始领导告诉工人这不过是“走过场”，签个字就行了；到了90年代末开始优化的时候，签了字的合同就开始起作用，领导们宣布“老人老办法，新人新办法”，合同制的职工这时就傻眼了。</p>
<p>1996年一季度，在长期不公平的竞争中（至少有两点：其一、税收不平等。其二、私企和外企只给职工发工资，而国企除了工资，还要给职工修房子、看病、上学），在国企乱象横生的背景下，国有工业企业首次出现全行业净亏损。国有及国有控股大中型亏损企业6599户，亏损面达39.1％。</p>
<p>而导致这一切的锅，自然又是由那些“磨洋工”的国企工人背了。</p>
<p>面对当时的局面，领导人提出要进一步深化改革，用各种方法让国企三年脱困。砸三铁、甩包袱，也就是在这个大背景下出台的。在此前后，国有企业甩卖了自己的医院、学校，分出了自己的住建科成立房地产公司，优化了大批老工人以减少成本。</p>
<p>被优化的工人生活境遇迅速下降，以三线职工为例，2005年三线被优化的职工月收入低于300元的有68％，收入的92％用于衣食和子女教育，88％的人无法养活自己而不得不依靠政府福利、亲友救济。被优化的那些人生活没有着落，出现了各种人间悲剧。有女工成为霓虹灯下的新哨兵，而她的男人每次都驮着她去上岗。有男工为了自己的小孩上学，吃了某种药制造一个大新闻，让社会捐助自己的遗孤。去问问那些经历过这个时期的人，哪一个不是对这些专家学者恨的咬牙切齿。一个老工人这样说，“我们不是懒汉，我们是社会主义的建设者！”还有很多不甘心的老工人开始了串联，上访，甚至实施了其他更激进的措施。《那儿》，《问苍茫》等等优秀的文学作品，就生动地描述了这段对中国有深刻影响的历史。</p>
<p>1997年刘欢的《从头再来》就是给这些被优化的人。“昨天所有的荣誉，已变成遥远的回忆，辛辛苦苦已度过半生，今夜重又走进风雨……心若在梦就在，天地之间还有真爱，看成败人生豪迈，只不过是从头再来。”工人听了当时就直骂娘，你为什么不走进风雨，凭什么叫我们从头再来！</p>
<p>而这一切也构成了黄宏那个小品的时代背景。刘欢的歌还比较隐晦，你骂他，他还能闪躲。黄宏的小品实在说不上高明，用这样直白的话，去刺痛工人的心，“工人要为国家想，我不下岗谁下岗”。人家一辈子都在为国家想，人家老了，希望安定一点，希望你也为他想想。结果你倒好，把人家当包袱一甩了之。这就难怪那么多为国家奉献一身的老工人，恨黄宏入骨。</p>
<p>2000年开始，国家对全国的国有企业改革实行分类指导，对陷入困境的老企业通过出售一块、盘活一块、加强一块等各种方式，进行国企“改革”。数千万工人被优化，众多国企被甩卖。通过甩包袱卖企业，2000年底，终于如期基本实现了国企改革与脱困的三年两大目标。</p>
<p>从实质而非形式的意义来讲，至此，国企改革已经完毕。后续的行动，无论怎么冠以改革的名义，其实质仅仅是垄断资本的重组而已。2003年组建国资委，对国有垄断资本进行打散重组，这之后的进程，多数人至少也有耳闻了。</p>
<p>21世纪初期，与资本对立的那些曾经的主人还在动。他们的切身利益受到前所未有的冲击，迫使他们开始关注自身的利益。到2005年，全国群体上访涉及约400万人，其中以他们为主体的有40％。各种消息在他们之间传播。一个城市的那些人，甚至形成了某种网络式的联系。一棉、二棉、三棉联系在一起，钢铁、五金、采矿、炼焦联系在一起，木材厂和肉联厂的也在沟通，这导致了巨大的不安定。这些不安定因素，用自己气吞山河的壮举，延缓了私有化的进程。</p>
<p>作为曾经的主人，在资本全面复兴的时代，他们唱出了极为悲壮的挽歌，也因此而奏响了新时代的号角。</p>
<p>-——————————————-</p>
<p>主要参考文献：</p>
<p>​    游正林.内部分化与流动——一家国有企业的二十年.北京：社会科学文献出版社，1998</p>
<p>​    刘卓红.现代化建设主体——当代工人阶级地位研究[M].广东人民出版社，2000</p>
<p>​    冯同庆，围绕工人阶级理论的争论与工人阶级状况</p>
<p>​    柳可白，王玫，阎春芝.当代工人阶级的地位和作用.中国工人出版社，2007</p>
<p>​    胡鞍钢.关于我国就业问题的若干看法</p>
<p>​    于建嵘.当代中国工人的以理维权</p>
<p>-————————————————</p>
]]></content>
      <categories>
        <category>鉴证</category>
        <category>国企改革</category>
      </categories>
      <tags>
        <tag>鉴证</tag>
        <tag>改革</tag>
        <tag>国企改革</tag>
      </tags>
  </entry>
  <entry>
    <title>用在Hexo博客写作中用Typora快捷插入图像</title>
    <url>//post/SoftwareUsage/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F.html</url>
    <content><![CDATA[<h1 id="下载Typora"><a href="#下载Typora" class="headerlink" title="下载Typora"></a>下载Typora</h1><p><a href="https://www.typora.io/">Typora官网链接</a></p>
<p>现在安装好后</p>
<p>打开<code>文件-设置偏好</code></p>
<span id="more"></span>

<img src="../../images/blog/用Typora快捷插入图像/image-20211113012957221.png" alt="image-20211113012957221"  />

<p>点击<code>图像-选择操作 复制到指定路径</code></p>
<p><img src="../../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113013313305.png" alt="image-20211113013313305"></p>
<p>输入一下代码，没有文件夹的可以选择创建文件夹：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">你的blog的路径\source\images\blog\$&#123;filename&#125;</code></pre>

<p>下面的两项打上勾</p>
<p>然后我们测试</p>
<p>直接复制一张图片粘贴到Typora中</p>
<p><img src="../../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113013626874.png" alt="image-20211113013626874"></p>
<p>效果如图</p>
<p><img src="../../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113013709011.png" alt="image-20211113013709011"></p>
<p><code>Ctrl+s</code>保存一下<code>md</code>文件，然后我们打开网页查看是否有图片</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo s</code></pre>

<p><img src="../../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113014052910.png" alt="image-20211113014052910"></p>
<p>Nice!</p>
<p>本地编辑器和网页都有了图像</p>
<p>尝试了路径各种排列组合，VScode伤透了我的心，同样的路径格式就是要么VScode有图像，要么网页没图像</p>
<p>最后终于尝试出了一种办法！</p>
]]></content>
      <categories>
        <category>个人博客</category>
        <category>Typora</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Typora</tag>
        <tag>插入图像</tag>
      </tags>
  </entry>
  <entry>
    <title>采样方法</title>
    <url>//post/mynotes/math/%E9%87%87%E6%A0%B7%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<h1 id="重要性采样法"><a href="#重要性采样法" class="headerlink" title="重要性采样法"></a>重要性采样法</h1><h1 id="拒绝采样法"><a href="#拒绝采样法" class="headerlink" title="拒绝采样法"></a>拒绝采样法</h1><p><img src="../../images/blog/%E9%87%87%E6%A0%B7%E6%96%B9%E6%B3%95/1463534-20180813184957114-1198916282.png" alt="example"></p>
<p>红色线是较为复杂的分布（目的采样分布）</p>
<p>构造较为简单的，容易抽样的高斯分布$q(z)$,乘以一个常数$k$使得：<br>$$<br>kq(z) \geq p(z) ,\forall z<br>$$<br>步骤:</p>
<ul>
<li>$$对高斯分布进行采样得到一个$z_0$</li>
<li>在$U[0,kq(z_0)]$均匀采样得到$u_0$</li>
<li>如果$u_0 &gt; p(z_0)$，就拒绝该采样结果，反之接受</li>
<li>重复上述步骤$(1)-(3)$</li>
</ul>
<h1 id="加权Bootstrap"><a href="#加权Bootstrap" class="headerlink" title="加权Bootstrap"></a>加权Bootstrap</h1>]]></content>
      <categories>
        <category>Math</category>
        <category>采样方法</category>
      </categories>
      <tags>
        <tag>Math</tag>
        <tag>采样方法</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB中使用CSV文件</title>
    <url>//post/MATLAB%E4%B8%AD%E4%BD%BF%E7%94%A8CSV%E6%96%87%E4%BB%B6.html</url>
    <content><![CDATA[<h1 id="读取CSV文件"><a href="#读取CSV文件" class="headerlink" title="读取CSV文件"></a>读取CSV文件</h1><h2 id="csvread只能读取纯数值的CSV文件"><a href="#csvread只能读取纯数值的CSV文件" class="headerlink" title="csvread只能读取纯数值的CSV文件"></a><code>csvread</code>只能读取纯数值的<code>CSV</code>文件</h2><p>查看帮助</p>
<pre class="line-numbers language-matla" data-language="matla"><code class="language-matla">help csvread</code></pre>

<p>读取文件格式:</p>
<pre class="line-numbers language-matl" data-language="matl"><code class="language-matl">a &#x3D; csvread(&#39;1.csv&#39;)
disp(a)</code></pre>

<h1 id="创建CSV文件"><a href="#创建CSV文件" class="headerlink" title="创建CSV文件"></a>创建CSV文件</h1><span id="more"></span>]]></content>
      <categories>
        <category>MATLAB</category>
        <category>CSV</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>CSV</tag>
        <tag>文件操作</tag>
      </tags>
  </entry>
  <entry>
    <title>万达私有化的原罪!</title>
    <url>//post/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA.html</url>
    <content><![CDATA[<p><img src="G:\Data\MyBlog\RongkangXiong.github.io\source\images\blog\万达私有化的原罪\640.webp" alt="Image"></p>
<span id="more"></span>]]></content>
      <categories>
        <category>鉴证</category>
        <category>私有化</category>
      </categories>
      <tags>
        <tag>鉴证</tag>
        <tag>私有化</tag>
        <tag>万达</tag>
      </tags>
  </entry>
  <entry>
    <title>万达私有化的原罪!</title>
    <url>//post/political/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA.html</url>
    <content><![CDATA[<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640.webp" alt="Image"></p>
<p>这位大叔国人恐怕没有不知道的</p>
<p>他曾多年被评为中国首富、华人首富、亚洲首富、房地产首富、福布斯前30……</p>
<p>当然最有份量的一个Title</p>
<p>是资产近9000亿（最高峰时）的万达集团董事长</p>
<p>然而很多90后和00后是通过这个小帅哥认识他爹的</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-16374866602482.webp" alt="Image"></p>
<span id="more"></span>

<p>现在这位“二代首富”的知名度已经不亚于他老爸</p>
<p>这个生在黄金窝受到完整西方教育的公子小哥有着他的圈子和场子</p>
<p>他的微博粉丝有数千万之多</p>
<p>09年老王扔给小王5亿练手，小王做了普思投资公司董事长</p>
<p>7年来，5亿翻了12倍成了60亿</p>
<p>成功变身资本家，小王的脾气也见长</p>
<p>说话口气介个味：</p>
<p>埃，谁说我的文凭是买的我跟谁急啊！</p>
<p>老子学习那么努力，成绩特别好!</p>
<p>认识这爷俩也不算啥</p>
<p>您能认识这位气质美女么？</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-16374866743644.webp" alt="Image"></p>
<p>对，她是王老板的原配妻子林宁</p>
<p>也是王公子小帅哥的亲妈</p>
<p>关于这位白富美知道的人很少，传言可不少</p>
<p>明明与王健林一样的红二代背景，有人却说她不姓林</p>
<p>而姓×（还是不传播莫须有的事吧）,是某前中央领导的女儿</p>
<p>这位女神也像他老公和儿子一样，有自己的事业</p>
<p>——林氏投资集团董事长</p>
<p>经营着家装业、餐饮娱乐业、外贸、高端会所等</p>
<p>据说还是全球最大的万达院线的实际控制人</p>
<p>总之在业务上跟老公配合的水乳交融（关联交易）</p>
<p>吃瓜群众对这一家子可能有很多疑惑的问题：</p>
<p>这一家子怎么就坐到了13亿人民的头顶尖上去了？</p>
<p>老王一个“小目标”就是一个亿</p>
<p>小王一开口就是“最不缺的就是钱”</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-16374866855476.webp" alt="Image"></p>
<p>是不是太高调了？容易遭人忌恨？</p>
<p>万达的前身是大连一个区属国有企业</p>
<p>怎么就变成老王的私有企业了？</p>
<p>这个资产转移是肿么完成的？</p>
<p>真像老王说的没有“企业家原罪”吗？</p>
<p>“王大胆”当年怎么完成的“第一桶金”？</p>
<p>2017年网上一直疯传万达粗事了，到底出啥事了？</p>
<p>万达近年一直在“走麦城”</p>
<p>万达全球院线持续亏损</p>
<p>多地万达广场卖给了当地企业</p>
<p>77家五星酒店卖给了富力的李思廉</p>
<p>13家文创产业卖给了融创的孙宏斌…..</p>
<p>万达的资产还要卖多少？</p>
<p>笔者也是带着这些“闹心”的问题来研究王健林的</p>
<p>也希望还群众们一个客观的答案</p>
<p><strong>万达出事是传言？还是事实？</strong></p>
<p>2017年，中国房地产业整体进入拐点，万达集团也同步进入拐点。万达多年来的发展一直也是跌跌撞撞过来的，过的沟坎也不少，可是这次真的不一样，貌似有点过不去的节奏。</p>
<p>这一年，乐视是遇到了过不去的坎，万达虽然没有那么明显，瘦死骆驼还在撑着，其实病因与乐视类似。</p>
<p>比如，业务摊子铺的过大，大的与乐视不是一个量级的，而且主要铺的是海外，问题是新铺的业务均处于亏损，且在有限时间内没有扭赢的迹象；</p>
<p>再比如，由于摊子大且亏损，资金链全面紧张，负债率很高，银行催债压力很大，只是由于底盘大，还没到被银行冻结资产的地步。</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-16374867063818.webp" alt="Image"></p>
<p>2016以至2017上半年，万达仍然高调，仍然“昂首阔步”。国内万达广场继续扩张、文旅事业大干快上，老王甚至嘲笑迪斯尼在中国不会赢利，国外除了院线扩张外，还在海外大谈巨型工程项目（马来西亚、印尼）。</p>
<p>2017下半年，风头突然逆转，万达院线股票几个跌停板，跌到被“严重低估”的白菜价。</p>
<p>7月开始，由于资金巨大压力，万达开始狂抛产业，最大的是抛售是13座文旅城和77座酒店。</p>
<p>9月底，国际三大商业评级机构已经把万达降为BB＋的“垃圾级”，海外大项目由于种种原因，明显搁浅。</p>
<p>这些坏消息使万达回归A股的进程受到巨大阻力。</p>
<p>此事万达与投资方是签了对赌协议的：2018年如果万达没有完成IPO，将面临要巨额回购投资人的股份，意味着又一个天价资金缺口！</p>
<p>到年底更有“王炸”文章“王健林的滑铁卢”在网上疯传，抛出4个（每个都让看官惊到合不上嘴）惊天新闻：</p>
<p>万达用两倍价格，欲抢央企在马来西亚的投资项目，引起高层震怒。最后连续抽贷，导致万达被迫割肉卖资产给融创；</p>
<p>万达土地储备从6000万平米，缩减至1000万平米，已掉出一线房企阵营</p>
<p>万达企业管理手段严苛，导致离职率高。猎头公司曝光表示万达员工平均13个月离职，并附上了数据证明。近期原来两位重臣离职；</p>
<p>暗指万达和落网的贪腐官员有密切关联；</p>
<p>这把一向爱看热闹的吃瓜群众们闪懵了，真的？假的？</p>
<p>对于某自媒体的“王炸”文章，万达官网几乎是第一时间答复：对万达集团和王健林本人进行恶意诽谤和中伤，多处严重违背事实，将坚决采取法律手段维护企业名誉。然后是逐条予以驳斥。</p>
<p>对于这些问题我们可以客观地评述：</p>
<p>第一条万达在马来西亚大马城与央企争夺巨额项目是有“影子”的，至于签的是“意向书”还是“正式协议”并未有铁定的证据，后面的引起“高层震怒”也显得有“臆想”的意味；</p>
<p>第二条与第三条是真事的比例很大，很难抹掉；</p>
<p>第四条的水太深，没人能说的清，只能引用当年两会新闻发布会问到敏感问题时发言人用中国人都能懂的、意味深长的答复“你懂的”。</p>
<p>至于卖万达广场、卖酒店、卖文旅城等应该均为事实。卖掉阜阳、滨州、烟台、营口和连云港5座万达广场是万达自己公告的，卖掉77座五星酒店和13座文旅城是有目共睹的。当然，这些都是表面的现象，而万达“走麦城”深层的政治经济背景和原因，确实就难以揣测了。</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748671867510.webp" alt="Image"></p>
<p>这就是中国做到这个份上的企业的现实，高处不胜寒，除非某天真的粗事了，才会把真实的“黑幕”逐渐披露出来，否则只能一直是“哥德巴赫猜想”。</p>
<p>对于万达，目前也只能以中国改革开放后的企业发展规律、已出事企业的案例、还有多年前大连党政军一把手被揪出等事实来“反推”。</p>
<p>也用不着去听信“被限制出境”“银行已停止授信”等传言，有些事恐怕王老板自己也不知道会是什么结局？就像老王自己的一句戏言：<strong>如果我明年还能站在这儿讲课，那就说明没事儿喽。</strong></p>
<p>总之，万达从几年前的异常高调到半年来低调变卖资产以及传言漫天飞绝非“无事”，一定是中国政治经济发展状况在这个企业上的精确反映，当然最终结果确实还没有结论，大家只能拭目以待……</p>
<p><strong>王健林怎么把国有资产变私有？有没有“原罪”？</strong></p>
<p>大连万达的前身是大连西岗住宅开发公司，这是一家100%的国有企业，十几年后，在这个公司基础上发展起来的万达一步步变成了100％王健林的私有企业，这一切是怎么发生的？</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748673553812.webp" alt="Image"></p>
<p>这与前苏联解体后大量国有企业私有化过程有什么区别吗？</p>
<p>我们先看看事实吧：</p>
<p><strong>1987年</strong>，大连西岗住宅开发公司成立，这是大连市西岗区区属的一家全民所有制企业；</p>
<p><strong>1989年，</strong>王健林从大连西岗区政府办公室主任任上辞职，任开发公司总经理；</p>
<p><strong>1992年，</strong>大连西岗区住宅开发公司改制为大连万达房地产总公司，注册资本1.2亿元，被等额分为12000万股，包括9600万股法人股，以及2400万股个人股。</p>
<p>公司发起股东六家：大连万达房地产总公司持股58.33%，中国工商银行大连信托投资股份有限公司持股12.5%，大连渤海饭店集团公司持股0.83%，大连煤气公司持股3.96%，大连鑫淼实业总公司持股3.96%，大连电业局市内供电局供电技术服务公司持股0.4%，另外20%股份由公司内部职工认购。</p>
<p><strong>2002年7月31日，</strong>大连万达房地产总公司将持有的万达集团的3000万股股份转让给了<strong>北京合兴投资有限公司</strong>，转让价格为每股1.67元。此外，大连华信信托股份有限公司也将其持有的600万股股份转让给了这家公司，其中100万股的转让价格为每股2.2元，另外500万股的转让价格为每股2元。北京合兴投资有限公司成立于<strong>2001年12月，</strong>公司注册资本为1000万元，大连一方集团有限公司董事长孙双喜以货币方式投入500万元，占总注册资本的50%，王健林和董学林分别以货币方式投入300万元和200万元，占注册资本的30%和20%。</p>
<p>从公司成立到<strong>2007年12月</strong>注销，这期间北京合兴投资有限公司并没有实际业务。这家公司成立的唯一目的，很难说不是为了帮助王健林实现对万达国有股权的收购。</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748674506814.webp" alt="Image"></p>
<p><strong>2004年2月，</strong>大连煤气公司、大连华信信托投资股份有限公司、大连自来水集团给水工程有限公司又陆续将分别持有的475万股、1000万股和475万股万达集团股份转让给了<strong>上海万尚置业有限公司。</strong></p>
<p>与此同时，大连万达房地产总公司将持有的2050万股转让给万达集团的子公司——大连万达集团房地产企业管理有限公司，形成交叉持股的情形。</p>
<p>仅过了1个月，大连万达房地产总公司继续将持有的900万股转让给了王健林个人，大连万达集团房地产企业管理有限公司则将持有的2050万股中的2000万股转让给上海万尚置业有限公司。</p>
<p><strong>2004年10月，</strong>大连万达房地产总公司所持有的最后1000万股被转让至上海万尚置业有限公司，彻底从第一发起人的角色中退出。</p>
<p><strong>上海万尚置业有限公司</strong>成立于2002年12月，在2010年底已经注销。公司注册资本为4000万元，其中90%为王健林个人出资3600万元，另一个股东为开发上海五角场万达广场的上海万达商业广场置业有限公司，出资400万元。上海万尚置业有限公司成立的目的显然也是为了实现王健林对万达集团国有股的收购。</p>
<p><strong>2004年底，</strong>国有股已经从万达集团全部退出，新的股权结构形成：上海万尚置业有限公司占41.66%，北京合兴投资有限公司占30%，王健林占7.5%，大连万达集团房地产管理有限公司和大连万达房地产有限公司各占0.42%，内部职工占20%。</p>
<p>清退20%的职工持股成为万达集团私有化需要清除的最后一个障碍，根据大连国资委<strong>2005年8月29日</strong>印发的《关于同意大连万达集团股份有限公司清退内部职工股的批复》，万达集团清退2400万股职工股的价格仅为每股2.75元。</p>
<p>在完成私有化后的2年多时间里，万达集团的股权又几经转让，直到<strong>2008年3月，</strong>最终形成了大连合兴投资有限公司持股98%、王健林个人持股2%的持股局面。这个令人眼花缭乱的“资本游戏”不知吃瓜群众看明白没有？</p>
<p>说直白点，92年改制万达公司基本上还是国有企业，王健林个人在员工持股的20%里持总股本的7.5%，到了02年合兴公司期间，王健林个人股份已然变成30%左右，而04年万尚置业期间，王健林个人股份变成80%左右，到08年，万达集团100%股份完全“洗”到了王健林名下！</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748675461616.webp" alt="Image"></p>
<p>2012年王健林在清华企业家讲堂上说过，“15年前万达就做了决定，所有公司都不能收取现金，制度上杜绝不行贿。万达是少有的敢公开说我们不行贿的企业。”</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748676159118.webp" alt="Image"></p>
<p>2016年10月，在央视鲁豫的节目中，王健林再次强调，万达很清洁，“很多企业有原罪，我们万达没有”。</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748677131520.webp" alt="Image"></p>
<p>老王这次“信誓旦旦”话音未落，几天后对大连西岗原区委书记金程的判决书狠狠打了他个“啪啪”，金程在任期间因30多起受贿罪被公诉，其中就有万达高管贿赂的30万元。</p>
<p><strong>2004年8月到2007年9月间</strong>西岗区政府区长金程多次主持召开区长办公会，决定和研究大连万达房地产总公司转让所持有的大连万达集团股份有限公司全部国有股权事宜，西岗区人民政府2007年9月出函确认对大连万达房地产总公司<strong>1996年至2004年间7000万国有法人股历次转让无异议，</strong>2007年9月完成企业改制。</p>
<p>事后，万达宣布“严惩行贿人员，涉事员工被开除”，而王健林说：员工瞒着我行贿，我真的不知道。这种话谁能信吗？</p>
<p>如果说，万达从100%国有股转为100%个人股的过程令人触目惊心，那么其中起到关键作用的主要是两个人：一是大连一方集团董事长，也曾是北京合兴公司法人孙喜双；</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748677960122.webp" alt="Image"></p>
<p>二是大连市前西岗区区长、区委书记金程。</p>
<p>前者是在财务上帮助王健林完成了私有化程序，而后者则是在政治经济上代表政府对整个私有化过程的最终认可与裁定。</p>
<p>这在中国社会是至关重要的一环！</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748678701124.webp" alt="Image"></p>
<p>上世纪80年代中期，中国开始改革开放，在那个时代背景下，众多企业家按照自己的理解，利用开放的政策，做出了“五花八门”的企业改制进程。</p>
<p>其中有比较“过线”的被指为“企业家原罪”，像前健力宝集团董事长李经纬、前红塔集团董事长诸时健等均被判有罪；</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748680027126.webp" alt="Image"></p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748680336228.webp" alt="Image"></p>
<p>也有只是打“擦边球”而免罪的案例，如联想的柳传志、万科的王石，仔细琢磨，似乎最重要的区别是后者在改制时没有把股权大头划拉到自己名下，柳传志到最后也就拿了联想2%的股权，王石也就拿了不到1%，由此判定他们是出于公心对国企进行了改制。</p>
<p><strong>按照这个说法，万达的改制怎么算？</strong></p>
<p>有几件事我们是不能否认的：</p>
<p>1989年，王健林从区政府办公室主任任上辞职下海，这个魄力和胆识不是大多数政府官员都有的；当年王健林接手西岗开发公司时，那是个连年亏损的烂摊子。</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748681217830.webp" alt="Image"></p>
<p>王健林接手后第二年就变成赢利的企业，挣到了第一桶金1000万元。</p>
<p>也就是说，早年的万达从一个没人要的亏损企业变成了赢利的“香饽饽”，王健林的个人贡献肯定是关键性的、无可厚非的。但问题是能否以此为“资本”，在20年内，把100%国企转为100%私企，这个过程是有诸多疑问的。</p>
<p>比如万达几次转股的定价是否合理？是否经过公示？企业资产估值是否合理？是否经过第三方机构的合法认定？价格与估值是否经过国企资产管理机构的认可？是否经过政府部门对私有化程序的合法性（无贪腐状况下）认定？等等，而这些问题在万达的私有化进程中显然是有硬伤的。</p>
<p>前文提到中国企业改制与前苏联解体后大量国有企业私有化过程的区别，笔者认为在上述一些关键点上有惊人相似之处，比如价格？估值？资产管理机构与政府的认定？</p>
<p>差别主要在于国有资产的领域与规模，前苏联国企在领域与规模上全面放开了。</p>
<p><img src="../../images/blog/%E4%B8%87%E8%BE%BE%E7%A7%81%E6%9C%89%E5%8C%96%E7%9A%84%E5%8E%9F%E7%BD%AA/640-163748682259532.webp" alt="Image"></p>
<p>包括重要的能源、交通、钢铁、水泥等基础设施领域，规模上包括特大型国企（中国的央企）；而中国在这些方面是控制住了，但在已开放领域企业私有化过程没有太大区别。</p>
<p>结果是前苏联解体了，经济发展经历了长年的低迷阵痛期，而中国改革避免了阵痛期，中前期异常顺利，只是在后期遇到瓶颈。</p>
<p>可是在开放领域（如房地产），一些私有化企业后来发展规模达到了大型央企的水平，对这些企业私有化的过程如何评估？</p>
<p>2016年10月中央有了最新的说法：中央全面深化改革领导小组通过了《关于完善产权保护制度依法保护产权的意见》，<strong>一锤定音，决定大赦民企历史原罪，为下一步经济改革注入新动力。</strong></p>
<p>很多人为此唏嘘不止，如果这个政策早日出台，一大批企业家像牟其中、李经纬、黄光裕、褚时健等就不会有牢狱之灾了！</p>
<p>至于万达私有化的问题，老王也不要对“存在原罪”死不认账，事实是清楚的，只是被赦免了而已。</p>
<p>原文链接<a href="https://mp.weixin.qq.com/s/PR3ITMnxEZPZ8dorp1g3FA">https://mp.weixin.qq.com/s/PR3ITMnxEZPZ8dorp1g3FA</a></p>
]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
  </entry>
  <entry>
    <title>王思聪是一个什么样的人？</title>
    <url>//post/political/%E7%8E%8B%E6%80%9D%E8%81%AA%E6%98%AF%E4%B8%80%E4%B8%AA%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E4%BA%BA%EF%BC%9F.html</url>
    <content><![CDATA[<h1 id="1989年，是王思聪的起点-也是万达的起点"><a href="#1989年，是王思聪的起点-也是万达的起点" class="headerlink" title="1989年，是王思聪的起点,也是万达的起点"></a>1989年，是王思聪的起点,也是万达的起点</h1><p><strong>1989年，是商界翻天覆地的一年。</strong></p>
<p>那年，任正非决定投入 BH－03 交换机的研发，这决定了华为商国的未来走向；</p>
<p>那年，柳传志正式被任命为联想集团总裁，从此登上历史舞台；</p>
<p>那年的王石，让万科完成了股份化改造，并募集到了2800万元的资金；</p>
<p>同样是这一年，元旦刚过，大连西岗区政府办公室副主任王健林，在35岁的“高龄”，终于喜得贵子。</p>
<p>太太林宁催着老王赶紧起个名字。老王不慌不忙地翻起自己最爱看的《论语》。</p>
<p>正好翻到《季氏》中的一段：孔子曰：“君子有九思：视思明，听思聪，色思温，貌思恭，言思忠，事思敬，疑思问，忿思难，见得思义。”</p>
<p><strong>王思聪，这个名字由此诞生。</strong></p>
<span id="more"></span>

<p>一位心理学家朋友曾说：一对夫妻有了孩子之后，心理会有很大的变化，女性一般趋于保守，男性趋于激进。</p>
<p>不知道有没有科学根据，不过从王健林来看，貌似如此。</p>
<p>就在王思聪降临的几个月后，王健林做了一个大胆的决定——脱离体系，接盘西岗区房屋开发公司。</p>
<p>老王从一个公务员，蜕变成一名创业者。而西岗区房屋开发公司，日后更名为“万达”。</p>
<p><strong>1989年，是王思聪的起点，也是万达的起点。</strong></p>
<h1 id="独自成长的王思聪"><a href="#独自成长的王思聪" class="headerlink" title="独自成长的王思聪"></a>独自成长的王思聪</h1><p>良叔一位地产圈朋友说，就颜值而论，王健林太太林宁，绝对是地产大佬夫人NO.1。</p>
<p>我说，她和田朴珺比呢？朋友愣了片刻，说：“我说的是原配……”</p>
<p>林宁，出身很好，老爸之前是军人，后来转业成为大连某保险公司的高管。</p>
<p>林宁在西岗区体委工作，有能力、有魄力。</p>
<p>作为一名女强人，当然不会甘心成为全职太太。</p>
<p>王健林创业没多久，林宁便也投身其中，成立了林氏投资公司，与王健林桴鼓相应。</p>
<p><strong>夫妻二人忙得搞事业， 实在没时间管儿子。</strong></p>
<p>于是，两岁的王思聪，就被送进了寄宿幼儿园，每周家人将他接回家一次，或者有时一个月一次。</p>
<p>王思聪<strong>到了5岁，又被送到新加坡读小学，与父母相隔万里。</strong></p>
<p>关于童年，话唠王思聪很少提起。</p>
<p>是啊，缺少父母的童年有什么可说的呢？</p>
<p>无非就是群体中的机械活动，新环境下的恐慌，还有半夜醒来的无助……</p>
<p>良叔的儿子5岁时，参加了一个攀岩夏令营。</p>
<p>那是他第一次远离父母，待了4天。</p>
<p>回家后，他便多了一项怪癖——睡觉前，总要把妈妈的抱枕或者衣服偷偷拿到自己床上。</p>
<p>问他为什么？他说有妈妈的味道，他才能睡得着……</p>
<p>有句话说“一入豪门深似海”，很有道理。</p>
<p>当你羡慕那些衔着金汤匙出生的人中龙凤时，你可知道，他们也失去了作为一名普通人的福利。</p>
<p>他们闻不到妈妈的味道，看不到父亲的鬼脸，更享受不到父母合力的举高高……</p>
<p>他们的唯一目标就是成为精英。</p>
<p>而这背后总有你想不到的代价。</p>
<p>某次，王健林在接受新京报专访时，略有悔意地说到：”现在回头看，我可能有失误的地方。</p>
<p>比如说，应该让思聪在国内读完初中或高中，再把他送到国外去。”</p>
<h1 id="才华横溢的王思聪"><a href="#才华横溢的王思聪" class="headerlink" title="才华横溢的王思聪"></a>才华横溢的王思聪</h1><p>在很多人的刻板印象中，王思聪是个典型的富二代，飞扬跋扈，不学无术。</p>
<p>然而真相并非这样。</p>
<p>王思聪小学毕业后，被送到英国“温彻斯特公学”念中学。</p>
<p><strong>霍启刚、何猷君也曾就读于此。</strong></p>
<p>温彻斯特公学，是一所男校，没有女生。</p>
<p>而且是完全的军事化管理，主要招募全球的精英公子。</p>
<p>因此，它有两个外号，一个叫做“精英摇篮”，另一个外号叫“监狱”。学生中流传一句名言——“<strong>毕业即越狱。</strong>”</p>
<p>不得不说，就效果而言，温彻斯特公学的管理是有效的。</p>
<p>毕业后，<strong>王思聪参加美国 SAT 考试，考了1550分，总分是1600分</strong>。</p>
<p>这是一个相当优异的成绩，他也因此进入了伦敦大学学院，攻读哲学。</p>
<p>伦敦大学学院居世界前十，出过 32 个诺贝尔奖得主。甘地、泰戈尔、伊藤博文等大名人，都毕业于伦敦大学学院。</p>
<p>有点海外留学常识的人应该知道，无论温彻斯特，还是伦敦大学学院，都不是随便能混过去的，要有点真才实学才行。</p>
<p>所以，当有人说王思聪的文凭是买的时，他总会怒不可遏地回答：“放你的屁，老子学习很努力，成绩也一直很好！”</p>
<p>学霸王思聪除了用功学习，在求学期间偶尔还会发挥一下余热。比如，<strong>做翻译</strong>。</p>
<p>他曾在微博里说自己以前做过字幕，很多人以为他在开玩笑。</p>
<p>其实，王思聪15岁时，就以“Exodus”的名字开始<strong>混字幕组，翻译过一些英文、日文字幕</strong>，例如《攻壳机动队》。</p>
<p>他在16岁时，竟然还<strong>用英文写了一首诗</strong>，名字叫做《脆弱的爱》。大概意思是：</p>
<p>爱，是脆弱的玩笑，是痛苦的根源</p>
<p>死亡，在祈祷中变得冰冷</p>
<p>不用对我怜悯，我们都是被遗弃的人</p>
<p>在有梦的晚上，眼水从脸庞滑落</p>
<p>我终于学会了拥抱恐惧……</p>
<p>这样的诗，绝对称不上惊艳。</p>
<p>但看看原文的韵律，对于一个16岁的少年来讲，也算是不容易了。</p>
<p>而且，你大概也能体会到王思聪当时的心境：孤独、脆弱、失落。心理学上有个概念叫做“过度补偿”。</p>
<p>是说有些人的外在表现，会走向内心的极端。</p>
<p><strong>他们内心敏感脆弱，却刻意表现出刚烈。只是因为他们不愿意，让别人洞察到那个真实的自己。</strong></p>
<p>想想现在那个戾气十足的富二代，何尝不是那个孤独少年的倒影？只是岁月把一切变得模糊，不可辨认。</p>
<h1 id="王思聪的炫富之路"><a href="#王思聪的炫富之路" class="headerlink" title="王思聪的炫富之路"></a>王思聪的炫富之路</h1><p>和王健林打过交道的人，都说老王低调睿智。</p>
<p>听音辩位的能力极强，特别知道怎么说话。</p>
<p>2014年，达沃斯峰会某个论坛。五位发言嘉宾中有四个老外，还有一个中国人，就是王健林。</p>
<p>那四位嘉宾发言时，提到中国的种种不足，甚至言论有些偏激。</p>
<p>当王健林接过话筒时，恰如其分表达了自己的不满：</p>
<blockquote>
<p><strong>这是一个经济论坛，不该涉及到政治，特别是还有一个中国嘉宾坐在这里。</strong><br><strong>你们公开挤兑中国，我觉得连最起码的礼貌都没有。</strong></p>
</blockquote>
<p>王健林的这次反驳，被官媒誉为“中国好声音”，赢得了不少掌声。</p>
<p>然而，常在河边走，总会有失足的时候。</p>
<p>2016年，在公众视野本不活跃的王健林，很意外的接受了鲁豫的采访。</p>
<p>而且，还说出了那个著名金句：“一个亿小目标。”</p>
<p>良叔的一位朋友，是万达高管。他说王健林对这事儿极其恼火，说是节目组本来答应要把这段剪掉的……</p>
<p>当然，老王更介意的是哈佛的那次演讲。</p>
<p>明显是在美国人的安排下，他讲了些本没打算讲的东西。</p>
<p>不论怎样，王健林都体会到了媒体的险恶。</p>
<p>从此噤若寒蝉，几乎再没公开露过面了。</p>
<p><strong>对比王健林的低调矜持，王思聪却是另一个极端。</strong></p>
<p>2010年10月27日，他发了一条微博：“三十万的电脑就这么报废了。”<strong>从此开启了自己的炫富路程。</strong></p>
<p>在微博里，王思聪像个普通人一样，经常晒晒自己的生活日常。只是他的那些日常逼格，高得让人炫目。</p>
<p>比如，“直径7.44米的桌子”</p>
<p>比如，十全大补汤还有Chateau d’Yquem酒，他说买了两箱</p>
<p>这个d’Yquem酒，是什么鬼？中文名是吕萨吕斯酒堡。</p>
<p>在 1855 年波尔多评级中，唯一一个“超一级酒庄”，远优于拉菲、拉图、玛歌等5大酒庄之上。</p>
<p>懂行的人都称呼它为：液体黄金。</p>
<p>王思聪不仅自己喝得好，也不亏待自己的爱犬。</p>
<p><strong>他有一个小号，专门来晒自己的狗儿子。</strong></p>
<p>王可可浑身上下都是名牌，狗链都是爱马仕的。</p>
<p>不是斐泉矿泉水不喝。这是一款是顶级瓶装饮用水，不贵，一瓶大概十几块钱吧。</p>
<p>这还不算什么，王可可的饭碗都是香奈儿的。</p>
<p>不得不说，王可可也是个含着金汤匙出生的幸运儿。</p>
<p>此狗及狗中龙凤，它第一次广为人知，是王思聪最著名的一次炫富，来自一条朋友圈截图：“带可可小公主回北京避避雨。”</p>
<p>周鸿祎看了非常惊讶：“飞机让带狗么？”</p>
<p>王思聪回复：“让。”</p>
<p>周鸿祎再问：“买儿童票么？”</p>
<p>王思聪回复：“不知道我是私人飞机？”</p>
<p>商界大佬周鸿祎身家也有六七百亿，但他怎么也没想到王思聪竟然有私人飞机，用来带狗！</p>
<p>王思聪也专门晒过自家的私人飞机：“中国首架G550。”</p>
<p>多贵？差不多4亿吧！</p>
<p>李嘉诚、默多克的同款座驾。</p>
<p>这架飞机，平时一般是他老爸王健林在用。</p>
<p>也许是为了出行更方便，王思聪带狗狗王可可的私人飞机，是另一架——达索猎鹰7X。</p>
<p>这架没他老爸那架那么贵，也就3亿吧。</p>
<p>既然有了私人飞机，那么私人订制豪华游艇怎么能少？</p>
<p>王思聪向圣汐游艇公司定制的万达2号，长33米，共有三层，包含套房、包间、运动飞椅等等，可谓是顶级奢华。</p>
<p>都说海陆空，陆地上的家伙自然更不能让大家失望。</p>
<p>一次，在综艺节目上，有位游戏主播炫耀自己买了一台限量版的阿斯顿马丁，还说全上海只有一辆。</p>
<p>王思聪听完很火，说：“明显是假新闻，因为如果真的是上海只有一辆的话，那一定是在我那里。”</p>
<p>王思聪真不是吹牛，你可以看看他的车库, 单就劳斯莱斯就有六台。豪车不算什么，富人圈有个俗话：“穷人炫车，富人炫表”。</p>
<p>思聪同学不经意间就炫了三款表。</p>
<p>第一款是理查德米勒RM53-01，价值609万；</p>
<p>第二款也是理查德米勒，略贵了点，696万；</p>
<p>第三款看起来档次很低，全透明，塑料的。</p>
<p>但一查便发现，还是理查德米勒，只不过款型是rm056，全球限量5只，价值1700万。</p>
<p>王思聪如此高调炫富，自然引起了很多网民的不满。</p>
<p>很多人跳出来说他极度炫耀，激起大众仇富心理。</p>
<p>我在他的微博下，曾看到一个愤青大骂他是靠自己老爹才能这么洒脱。</p>
<p>还跑到微博上来装逼。</p>
<p>不过公正的说，炫富不违法吧？</p>
<p>况且，人家就是真喜欢跑车不行吗？就像你喜欢集邮，晒两张邮票一样，这有什么本质区别吗？</p>
<p>似乎并没有，区别就在于多数人买不起跑车。</p>
<p>这种落差感，才是很多人仇富的真正原因。</p>
<p>就像作家杨奇函所说：<strong>在哪里欲求不满，我们就在哪里愤怒。其实，我们根本不在乎对方拥有什么，而是我们跟他们比，我们没有什么。</strong></p>
<h1 id="王思聪的真性情"><a href="#王思聪的真性情" class="headerlink" title="王思聪的真性情"></a>王思聪的真性情</h1><p><strong>王思聪的十年网红之路，不止于炫富，最出名的还是敢“怼”！</strong></p>
<p>从网红模特到娱乐圈顶级明星、再到超一线大导演，再到创投圈，没有他不敢怼的人，也没有他不敢说的话，爆的瓜比狗仔队还劲爆。</p>
<p>其中他特喜欢怼娱乐明星。</p>
<p>他讽刺刘晓庆不懂行还装逼：“不仅茶盲，还很脑残。”</p>
<p>他直指范冰冰是毯星：“没作品，天天去各大电影节蹭红毯。”</p>
<p>他怒骂张翰是渣男：“分了手，回头说对方的都是最渣的人。”</p>
<p>他回怼万达影城不给冯小刚排片事件：“你作为一个导演，用拿得出手的作品说话，岂不是更好？”</p>
<p>他还怒怼过吴秀波，说：“吴秀波你这 B 真够坏的。”</p>
<p>王思聪不在圈内， 却每天都在为娱乐圈的事操碎了心！</p>
<p>他曾在微博申请认证“富二代战神”的签名。</p>
<p>不过后来他有了“娱乐圈纪检委”的荣誉称号。</p>
<p>怼完娱乐圈，商界他也不放过。他嘲讽田朴珺很绿茶，替王石感到不值。</p>
<p>俏江南董事长张兰的儿子汪小菲，要迎娶大S，张兰说酒席省了不少钱。因为和王健林关系不错，饭店和酒店都是万达赞助的。</p>
<p>谁知王思聪却发文，说对方在装逼，自己老爹和张兰一点都不熟。</p>
<p>你看，这搞得多尬。</p>
<p>李开复也成了王公子的攻击对象。</p>
<p>说他只会自我包装，从不干实事。对于贾跃亭，王思聪早就断定他在吹牛逼。</p>
<p>那些投资者如果相信王思聪的判断的话，应该能减少不少损失。</p>
<p>至于孙宇晨这种不入流的货，王思聪也没多费口舌，就送给了他七个字。</p>
<p>由于王思聪太能怼，他爸王健林都有点顶不住，告诫他：“我的朋友你别骂。”</p>
<p>但后来发现不管用，只好改口，“实在要骂人，就别指名道姓了。”</p>
<p><strong>王思聪就是这样一个连老爹，都没办法管的混不吝。</strong></p>
<p>这样一个人，当然不招人喜欢，也招来很多人的愤恨。</p>
<p>但我觉得一位网友的评价，挺客观的。</p>
<p>他说：“<strong>王思聪是中国所有网络名人里，网上和线下形象最一致的人，没有之一。</strong>”</p>
<p>还确实是这样。在中国你还真找不出一个这么真实的名人。</p>
<p>从不隐藏自己的喜恶，从不遵守世俗的规则。</p>
<p>当然，你可以说王思聪坏。可是他坏得表里如一，他对坏人也坏。</p>
<p>他坏得固定，坏得可以预测，坏得很不虚伪。相比较而言，那些满口仁义道德，背地里却鸡鸣狗盗的伪善者，杀伤力更大。</p>
<p>他们杀死的都是最好的东西：善良、信任、希望……我不是给王思聪贴金，我并不喜欢他。</p>
<p>但这世界充斥着太多的伪君子，他这样的真小人反而很稀缺。</p>
<p>可惜的是，这样的真小人马上要绝迹了……</p>
<h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>老江湖王健林一直担心儿子的性格，害怕他适应不了中国的环境。</p>
<p>他曾多次表示，儿子在西方养成过于直率的性格，与当下的土壤不符。</p>
<p>甚至一度表示，自己的接班人不一定会是王思聪。</p>
<p>如果他不适合，会交给职业经理人。据说，这话一出，在他家族里还掀起了一场风浪。</p>
<p><strong>然而，王健林可能低估了王思聪的可塑性。</strong></p>
<p>2012年以前，王思聪还会偶尔讲些政治方面的话题。</p>
<p>但从这以后，再也没有涉及了。2014年7月，嘉人杂志给王思聪做了一个专访，副主编庄雅婷说自己很欣赏王思聪，夸他是年少轻狂的新青年。</p>
<p>戴了一堆高帽后，突然话锋一转，问他，“你将如何从商业方向推动中国政治文明。”</p>
<p>还真不知道这庄主编是何用意。</p>
<p>还好，王思聪没上套，说了几句假大空的官方语言。</p>
<p>2015年，王思聪接受BBC专访，秀了一把英文。</p>
<p>事后，王公子对身边人说：</p>
<blockquote>
<p><strong>“奶奶的，BBC净给我挖坑，发给我 100 个问题，我只回答了 15 个。</strong></p>
<p><strong>其他问题根本回答不了，问我现在领导人和毛时代风格的对比，往左还是往右的。</strong><br><strong>这特么怎么回答？”</strong></p>
</blockquote>
<p>江湖险恶，暗礁遍布。</p>
<p>当王健林知道BBC采访王思聪时，惊出一身冷汗。</p>
<p>得知王思聪如何作答后，长出了一口气。</p>
<p><strong>夸他懂事了，成熟了。</strong></p>
<p>这几年，王思聪确实成熟不少。</p>
<p>微博越来越少，有时发出一个，想了想还给删了。</p>
<p>怼人帖子也越来越少，只是偶尔宣传一下自己的商业。</p>
<p>直到现在的半年可见，曾经喧闹熙攘，现在空空如也。</p>
<p>就连孙宇晨的挑衅，也不再回复。</p>
<p>是的，30而立的王思聪成熟了，65岁的王健林也老了。</p>
<p>前段时间，某知名财经作家，找到老王，想给他写传记。</p>
<p>文学爱好者老王，略有不屑，说自己文笔还可以，准备自己写。</p>
<p>作家又问了一嘴，你准备什么时候动笔？老王说，退居二线后吧，差不多也就明年。</p>
<p>豪门的世界我们不懂，当我们还在为1.5亿债务和限高消令津津乐道时，一些端倪正在展开。</p>
<p>然而，有一件可以确定的事——我们再也见不到那个熟悉的王思聪了。</p>
<p>那些充满荷尔蒙的文字，以及纸醉金迷的图片，都已经成为历史。</p>
<p>甚至将无处寻见。</p>
<p>每次王思聪惹祸，王健林都会责备他为什么不能改改？</p>
<p>老王显然多虑了，他那时还没意识到，岁月是一把刻刀，能消去一切棱角。</p>
<p>再狂妄的鲜衣少年，在这把刻刀下，终会变成一个沉默的中年人。</p>
<p>是的，30岁的王思聪，已是中年人了。</p>
]]></content>
      <categories>
        <category>鉴证</category>
      </categories>
      <tags>
        <tag>鉴证</tag>
        <tag>八卦</tag>
        <tag>王思聪</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言绘图</title>
    <url>//post/programming/R/R%E8%AF%AD%E8%A8%80%E7%BB%98%E5%9B%BE.html</url>
    <content><![CDATA[<h1 id="绘制数据分布图"><a href="#绘制数据分布图" class="headerlink" title="绘制数据分布图"></a>绘制数据分布图</h1><h2 id="绘制基本直方图"><a href="#绘制基本直方图" class="headerlink" title="绘制基本直方图"></a>绘制基本直方图</h2><span id="more"></span>]]></content>
      <categories>
        <category>R语言</category>
      </categories>
      <tags>
        <tag>R语言</tag>
        <tag>绘图</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora如何让Markdown自动显示序号</title>
    <url>//post/SoftwareUsage/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7.html</url>
    <content><![CDATA[<h1 id="内容中编号"><a href="#内容中编号" class="headerlink" title="内容中编号"></a>内容中编号</h1><p>打开Typora外观里面的主题文件夹</p>
<h2 id="菜单-偏好设置-外观-打开主题文件夹"><a href="#菜单-偏好设置-外观-打开主题文件夹" class="headerlink" title="菜单-偏好设置-外观-打开主题文件夹"></a><code>菜单-偏好设置-外观-打开主题文件夹</code></h2><p><img src="../../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117123309505.png" alt="image-20211117123309505"></p>
<h2 id="新建一个名为base-user-css的文件，写入如下代码："><a href="#新建一个名为base-user-css的文件，写入如下代码：" class="headerlink" title="新建一个名为base.user.css的文件，写入如下代码："></a>新建一个名为<code>base.user.css</code>的文件，写入如下代码：</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css">#write &#123;
    counter-reset: h1
&#125;

h1 &#123;
    counter-reset: h2
&#125;

h2 &#123;
    counter-reset: h3
&#125;

h3 &#123;
    counter-reset: h4
&#125;

h4 &#123;
    counter-reset: h5
&#125;

h5 &#123;
    counter-reset: h6
&#125;

#write h1:before &#123;
    counter-increment: h1;
    content: counter(h1) &quot; &quot;
&#125;

#write h2:before &#123;
    counter-increment: h2;
    content: counter(h1) &quot;.&quot; counter(h2) &quot; &quot;
&#125;

#write h3:before,
h3.md-focus.md-heading:before &#123;
    counter-increment: h3;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot; &quot;
&#125;

#write h4:before,
h4.md-focus.md-heading:before &#123;
    counter-increment: h4;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;.&quot; counter(h4) &quot; &quot;
&#125;

#write h5:before,
h5.md-focus.md-heading:before &#123;
    counter-increment: h5;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;.&quot; counter(h4) &quot;.&quot; counter(h5) &quot; &quot;
&#125;

#write h6:before,
h6.md-focus.md-heading:before &#123;
    counter-increment: h6;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;.&quot; counter(h4) &quot;.&quot; counter(h5) &quot;.&quot; counter(h6) &quot; &quot;
&#125;

#write &gt; h3.md-focus:before,
#write &gt; h4.md-focus:before,
#write &gt; h5.md-focus:before,
#write &gt; h6.md-focus:before,
h3.md-focus:before,
h4.md-focus:before,
h5.md-focus:before,
h6.md-focus:before &#123;
    color: inherit;
    border: inherit;
    border-radius: inherit;
    position: inherit;
    left: initial;
    float: none;
    top: initial;
    font-size: inherit;
    padding-left: inherit;
    padding-right: inherit;
    vertical-align: inherit;
    font-weight: inherit;
    line-height: inherit;
&#125;</code></pre>

<p>上边部分是左边的标题栏，下面部分是正文的标题</p>
<p>这是没有添加前：</p>
<p><img src="../../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117124856611.png" alt="image-20211117124856611"></p>
<p>添加以后：</p>
<p><img src="../../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117124948102.png" alt="image-20211117124948102"></p>
<p>自动添加好序号了</p>
<h1 id="大纲中编号"><a href="#大纲中编号" class="headerlink" title="大纲中编号"></a>大纲中编号</h1><h2 id="添加在base-user-css中添加如下代码"><a href="#添加在base-user-css中添加如下代码" class="headerlink" title="添加在base.user.css中添加如下代码"></a>添加在<code>base.user.css</code>中添加如下代码</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css">.sidebar-content &#123;
    counter-reset: h1
&#125;

.outline-h1 &#123;
    counter-reset: h2
&#125;

.outline-h2 &#123;
    counter-reset: h3
&#125;

.outline-h3 &#123;
    counter-reset: h4
&#125;

.outline-h1&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h1;
    content: counter(h1) &quot;. &quot;
&#125;

.outline-h2&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h2;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;. &quot;
&#125;

.outline-h3&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h3;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;. &quot;
&#125;</code></pre>

<p>重启Typora</p>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="../../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117125920057.png" alt="image-20211117125920057"></p>
<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css">#write &#123;
    counter-reset: h1
&#125;

h1 &#123;
    counter-reset: h2
&#125;

h2 &#123;
    counter-reset: h3
&#125;

h3 &#123;
    counter-reset: h4
&#125;

h4 &#123;
    counter-reset: h5
&#125;

h5 &#123;
    counter-reset: h6
&#125;

#write h1:before &#123;
    counter-increment: h1;
    content: counter(h1) &quot;.&quot;
&#125;

#write h2:before &#123;
    counter-increment: h2;
    content: counter(h1) &quot;.&quot; counter(h2) &quot; &quot;
&#125;

#write h3:before,
h3.md-focus.md-heading:before &#123;
    counter-increment: h3;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot; &quot;
&#125;

#write h4:before,
h4.md-focus.md-heading:before &#123;
    counter-increment: h4;
    content: &quot;(&quot; counter(h4) &quot;) &quot;
&#125;

#write h5:before,
h5.md-focus.md-heading:before &#123;
    counter-increment: h5;
    content: counter(h5) &quot;) &quot;
&#125;



.sidebar-content &#123;
    counter-reset: h1
&#125;

.outline-h1 &#123;
    counter-reset: h2
&#125;

.outline-h2 &#123;
    counter-reset: h3
&#125;

.outline-h3 &#123;
    counter-reset: h4
&#125;

.outline-h1&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h1;
    content: counter(h1) &quot;. &quot;
&#125;

.outline-h2&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h2;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;. &quot;
&#125;

.outline-h3&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h3;
    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;. &quot;
&#125;

.outline-h4&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h4;
    content: &quot;(&quot; counter(h4) &quot;) &quot;
&#125;

.outline-h5&gt;.outline-item&gt;.outline-label:before &#123;
    counter-increment: h5;
    content: counter(h5) &quot;) &quot;
&#125;

#write &gt; h3.md-focus:before,
#write &gt; h4.md-focus:before,
#write &gt; h5.md-focus:before,
#write &gt; h6.md-focus:before,
h3.md-focus:before,
h4.md-focus:before,
h5.md-focus:before,
h6.md-focus:before &#123;
    color: inherit;
    border: inherit;
    border-radius: inherit;
    position: inherit;
    left: initial;
    float: none;
    top: initial;
    font-size: inherit;
    padding-left: inherit;
    padding-right: inherit;
    vertical-align: inherit;
    font-weight: inherit;
    line-height: inherit;
&#125;</code></pre>

<h2 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a>效果图</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题###"></a>三级标题<code>###</code></h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题####"></a>四级标题<code>####</code></h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题#####"></a>五级标题<code>#####</code></h5><p><img src="../../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117133645418.png" alt="image-20211117133645418"></p>
<p><img src="../../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117133651299.png" alt="image-20211117133651299"></p>
<p>参考链接：</p>
<p>​    <a href="https://blog.csdn.net/lt6210925/article/details/109754804?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-109754804.pc_agg_new_rank&utm_term=markdown+%E5%BA%8F%E5%8F%B7&spm=1000.2123.3001.4430">[Markdown][typora]如何让markdown自动显示序号</a></p>
<p>​    <a href="https://blog.csdn.net/qq_50806329/article/details/112845330">Typora自动在大纲和编辑页面里显示编号</a></p>
<span id="more"></span>

]]></content>
      <categories>
        <category>个人博客</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo + Next 主题博客提交百度谷歌收录</title>
    <url>//post/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95.html</url>
    <content><![CDATA[<p>SEO（Search Engine Optimization）：中文译为搜索引擎优化，即利用搜索引擎的规则提高网站搜索引擎内自然排名。主要通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化等方式实现。</p>
<p>主要是给各个搜索引擎提交你的 sitemap，让别人能搜到你博客的内容。<br>先确认博客是否被搜索引擎收录，在百度或者谷歌输入下面格式来判断，如果能搜索到就说明被收录，否则就没有。</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">site:写你要搜索的域名
# site:xxx.github.io # site:rongkangxiong.top
</code></pre>

<h1 id="开启-Next-主题的-SEO-优化项"><a href="#开启-Next-主题的-SEO-优化项" class="headerlink" title="开启 Next 主题的 SEO 优化项"></a>开启 Next 主题的 SEO 优化项</h1><p>Next 提供了 <code>seo</code> 优化选项，在主题配置文件<code>_config.yml</code>中有个选项是<code>seo</code>，设置成<code>true</code>即开启了<code>seo</code>优化。<br>百度无法搜索到博客信息，是因为 <code>Github Pages </code>屏蔽了百度爬虫</p>
<p>我们需要使用插件自动生成网站的 sitemap，然后将生成的 sitemap 提交到百度和其他搜索引擎。<br>先安装谷歌和百度的插件，如下：</p>
<pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install hexo-generator-sitemap --save
npm install hexo-generator-baidu-sitemap --save</code></pre>

<p>在博客根目录<code>_config.yml</code>中改<code>url</code>为你的站点地址：</p>
<pre class="line-numbers language-yam" data-language="yam"><code class="language-yam"># URL
## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;
url: https:&#x2F;&#x2F;rongkangxiong.top
permalink: &#x2F;post&#x2F;:title.html
permalink_defaults:
pretty_urls:
  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks
  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</code></pre>

<p>在博客根目录的<code>_config.yml</code>中添加如下代码：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">baidusitemap:
  path: baidusitemap.xml
sitemap:
  path: sitemap.xml</code></pre>

<p>之后重新打包<code>hexo g -d</code>，若在你的博客根目录的<code>public</code>下面发现生成了<code>sitemap.xml</code>以及<code>baidusitemap.xml</code>就表示成功了</p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213456005.png" alt="image-20211113213456005"></p>
<p>其中<code>sitemap.xml</code>文件是搜索引擎通用的文件，<code>baidusitemap.xml</code>是百度专用的 `sitemap 文件。可以通过<a href="https://xxx.github.io/baidusitemap.xml">https://xxx.github.io/baidusitemap.xml</a>查看该文件。</p>
<h1 id="向百度提交链接"><a href="#向百度提交链接" class="headerlink" title="向百度提交链接"></a>向百度提交链接</h1><p>之后可以将生成的<code>sitemap</code>文件提交给百度，可以加快爬虫抓取速度</p>
<p>在<a href="https://ziyuan.baidu.com/">站长平台</a>，找到 <code>网站支持-数据引入-链接提交</code>，选择<code>自动提交</code></p>
<p>一般主动提交比手动提交效果好，这里介绍主动提交的三种方法。从效率上来说：<code>主动推送&gt;自动推送&gt;sitemap</code>。</p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213906951.png" alt="image-20211113213906951"></p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213920196.png" alt="image-20211113213920196"></p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113214756683.png" alt="image-20211113214756683"></p>
<p>在选择完网站的类型之后需要验证网站的所有权，有三种验证方式，文件验证、html 标签验证、<code>cname </code>解析验证。</p>
<p>使用HTML验证最简单</p>
<p>打开 Hexo 主题配置文件，按如下修改/添加：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">google_site_verification: #索引擎提供给你的HTML标签的content后的内容
baidu_site_verification: #索引擎提供给你的HTML标签content后的内容</code></pre>

<p>然后控制台输入<code>hexo g -d</code>，部署更新。</p>
<p>验证完之后点击<code>提交资源</code></p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113215816088.png" alt="image-20211113215816088"></p>
<p>点击普通收录</p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113220003266.png" alt="image-20211113220003266"></p>
<p>安装插件：</p>
<pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install hexo-baidu-url-submit --save</code></pre>

<p>根目录配置文件<code>_config.ym</code>新增字段：</p>
<pre class="line-numbers language-yam" data-language="yam"><code class="language-yam">baidu_url_submit:
  count: 100 # 提交最新的一个链接
  host: xxx.github.io # 在百度站长平台中注册的域名
  token: xxxxxx # 秘钥，百度站长平台 &gt; 推送接口 &gt; 接口调用地址中token字段
  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里
  xz_appid: xxxxxx # 你的熊掌号 appid</code></pre>

<p>其次，记得查看<code>_config.ym</code>文件中<code>url</code>， 必须是百度站长平台注册的域名（包含www）：</p>
<pre class="line-numbers language-yam" data-language="yam"><code class="language-yam">url: https:&#x2F;&#x2F;rongkangxiong.top
permalink: &#x2F;post&#x2F;:title.html
permalink_defaults:
pretty_urls:
  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks
  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</code></pre>

<p>最后，根目录配置文件新增 deploy：</p>
<pre class="line-numbers language-yam" data-language="yam"><code class="language-yam">deploy:
  type: baidu_url_submitter</code></pre>

<p><strong>注意：参考 <a href="https://hexo.io/docs/deployment.html">hexo官网</a> 多个 deploy 时要这样写，前面加横杠：</strong></p>
<pre class="line-numbers language-yam" data-language="yam"><code class="language-yam"># You can use multiple deployers. Hexo will execute each deployer in order.
deploy:
- type: git
  repo:
- type: heroku
  repo:</code></pre>

<p>这样以后每次执行<code>hexo deploy</code>，链接就会被推送给百度了。</p>
<h1 id="让Google收录网站"><a href="#让Google收录网站" class="headerlink" title="让Google收录网站"></a>让Google收录网站</h1><p>进入<code>Google Search Console</code>控制台 <a href="https://search.google.com/search-console/welcome">链接</a></p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113222436951.png" alt="image-20211113222436951"></p>
<h2 id="验证所有权，有几种验证方法："><a href="#验证所有权，有几种验证方法：" class="headerlink" title="验证所有权，有几种验证方法："></a>验证所有权，有几种验证方法：</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">Domain 网域验证
URL prefix 网址前缀验证，包含以下验证方法：
	HTML file（文件验证）
	HTML taghtml（标签验证）
	Google Analytics
	Google Tag Manager
	Google name provider</code></pre>

<p>URL prefix 验证下的，文件验证、标签验证和百度类似，我选的标签验证，在主题配置文件中修改：</p>
<pre class="line-numbers language-yam" data-language="yam"><code class="language-yam"># Google Webmaster tools verification setting
# See: https:&#x2F;&#x2F;www.google.com&#x2F;webmasters&#x2F;
google_site_verification: xxxxxxxxxxxxx # 此处改为google提供给你的HTML标签content后的内容</code></pre>

<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113222848795.png" alt="image-20211113222848795"></p>
<h2 id="提交Sitemap"><a href="#提交Sitemap" class="headerlink" title="提交Sitemap"></a>提交Sitemap</h2><p>参考链接</p>
<p>​    <a href="https://www.luanzhuxian.com/post/82d92ad4.html">Hexo + Next 主题博客提交百度谷歌收录</a></p>
<span id="more"></span>]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
  </entry>
  <entry>
    <title>使用DropIt整理数据文件</title>
    <url>//post/SoftwareUsage/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE.html</url>
    <content><![CDATA[<p>写在前面：</p>
<p>文件管理里有许多琐碎的事要做，比如：<br>    - 文件自动分组；<br>    - 批量打包；<br>    - 批量改格式；<br>    - 管理安全性高的文件；<br>    …</p>
<p>如果有一个全自动的文件管理工具，它能够帮你把所有的文件分门别类地放好、给重要的文件加密、还能给文件转格式，会不会迫不及待地想尝试一下？</p>
<span id="more"></span>

<p><a href="http://www.dropitproject.com/">DropIt官网</a></p>
<p>外观可以自由定制</p>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113170509209.png" alt="image-20211113170509209"></p>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113170612394.png" alt="image-20211113170612394"></p>
<p>配置规则：选择协议</p>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113170740709.png" alt="image-20211113170740709"></p>
<p>添加协议</p>
<ul>
<li>处理文件的协议规则</li>
</ul>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113194104521.png" alt="image-20211113194104521"></p>
<ul>
<li>处理文件夹的协议规则</li>
</ul>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113194209673.png" alt="image-20211113194209673"></p>
<ul>
<li>设定规则优先级</li>
</ul>
<p>在一个配置文件中可以设定多条协议来筛选文件，但 <strong>多条协议之间可能会产生冲突</strong>，比如设置 <code>*.jpg</code> 文件移动到子文件夹，又设置 <code>*.jpg</code> 文件放进压缩包。如果运行这个配置文件，它会在扫描文件阶段出现一个提示项，真正执行前让你再做一次选择。简而言之，DropIt 采用的是「一个文件一次应用一条协议」。</p>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113194335205.png" alt="image-20211113194335205"></p>
<p>可以在配置文件中提高某条协议的优先级（右上角的星号），或是在规则一栏添加 <code>#</code> 和 <code>##</code> 来区分文件和文件夹，变相提高了协议的优先级</p>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113195140422.png" alt="image-20211113195140422"></p>
<p>最后配置文件如上，，几十个文件几秒钟就搞定了，效果如下</p>
<p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211113195210299.png" alt="image-20211113195210299"></p>
<h1 id="DropIt常用规则"><a href="#DropIt常用规则" class="headerlink" title="DropIt常用规则"></a>DropIt常用规则</h1><h2 id="重命名文件为序号"><a href="#重命名文件为序号" class="headerlink" title="重命名文件为序号"></a>重命名文件为序号</h2><p><img src="../../images/blog/%E4%BD%BF%E7%94%A8DropIt%E6%95%B4%E7%90%86%E6%95%B0%E6%8D%AE/image-20211121190304673.png" alt="image-20211121190304673"></p>
<h2 id="将文件中的关键字替换"><a href="#将文件中的关键字替换" class="headerlink" title="将文件中的关键字替换"></a>将文件中的关键字替换</h2><p>参考资料：</p>
<p> <a href="https://sspai.com/post/45532">https://sspai.com/post/45532</a></p>
]]></content>
      <categories>
        <category>DropIt</category>
        <category>文件操作</category>
      </categories>
      <tags>
        <tag>文件操作</tag>
        <tag>DropIt</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB文件和文件夹操作</title>
    <url>//post/mynotes/%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/MATLAB%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6.html</url>
    <content><![CDATA[<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">
A &#x3D; exist(path,&#39;dir&#39;);   %name为对应的路径 ,dir为指定值,照写
if A&#x3D;&#x3D;0          %所在的路径不存在时，A的值为0  
   error(&#39;路径：%s 不存在！&#39;,path); %路径不存在就返回报错
en</code></pre>

<p>这样错误输入路径就会报错</p>
<p><img src="../../../images/blog/MATLAB%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/image-20211113165232703.png" alt="image-20211113165232703"></p>
]]></content>
      <categories>
        <category>MATLAB</category>
        <category>错误处理机制</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>错误处理机制</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB文件和文件夹操作</title>
    <url>//post/mynotes/%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/MATLAB%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C.html</url>
    <content><![CDATA[<h2 id="弹出一个模态对话框，选择一个文件夹作为工作目录"><a href="#弹出一个模态对话框，选择一个文件夹作为工作目录" class="headerlink" title="弹出一个模态对话框，选择一个文件夹作为工作目录"></a>弹出一个模态对话框，选择一个文件夹作为工作目录</h2><pre class="line-numbers language-matl" data-language="matl"><code class="language-matl">selpath &#x3D; uigetdir(&#39;path_to_your_folder&#39;)</code></pre>

<p><img src="../../../images/blog/MATLAB%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C/image-20211113163624565.png" alt="image-20211113163624565"></p>
<h2 id="选择要处理的文件"><a href="#选择要处理的文件" class="headerlink" title="选择要处理的文件"></a>选择要处理的文件</h2><p>选择刚刚选择的工作目录下的文件</p>
<pre class="line-numbers language-matl" data-language="matl"><code class="language-matl">[choosefiles,value] &#x3D; fileChoose(selpath,&#39;*.文件后缀&#39;);</code></pre>

<p><img src="../../../images/blog/MATLAB%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C/image-20211113163830189.png" alt="image-20211113163830189"></p>
<p>出来这样的效果，你可以单选，也可以多选，也可以全选</p>
<p>其中返回的<code>value =1</code>表示选择了文件，<code>choosefiles</code>信息如下：</p>
<p><img src="../../../images/blog/MATLAB%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C/image-20211113164004182.png" alt="image-20211113164004182"></p>
<p>是一个struct结构，使用</p>
<pre class="line-numbers language-matl" data-language="matl"><code class="language-matl">choosefiles(i).folder
choosefiles(i).name</code></pre>

<p>获取元素值</p>
]]></content>
      <categories>
        <category>MATLAB</category>
        <category>文件操作</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>文件操作</tag>
      </tags>
  </entry>
  <entry>
    <title>如何分析线虫数据</title>
    <url>//post/mynotes/%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/xlsx%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E6%A0%87%E8%AE%B0%E6%95%B0%E6%8D%AE.html</url>
    <content><![CDATA[<p>数据标签：</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">motion_mode: 1 #前进
motion_mode: -1 #后退
motion_mode: 0 #不动
motion_mode: 2 #转弯turn状态</code></pre>





<h1 id="写入数据"><a href="#写入数据" class="headerlink" title="写入数据"></a>写入数据</h1><pre class="line-numbers language-matl" data-language="matl"><code class="language-matl">Age &#x3D; [38;43;38;40;49];
Height &#x3D; [71;69;64;67;64];
Weight &#x3D; [176;163;131;133;119];
BloodPressure &#x3D; [124 93; 109 77; 125 83; 117 75; 122 80];
T &#x3D; table(Age,Height,Weight,BloodPressure);
writetable(T,&#39;H:\WenLabData\wormdata\N2_Crawl_202105\Labels\ceshi2.xlsx&#39;)</code></pre>

<p>Table的形式是这样</p>
<p><img src="../../../images/blog/CSV%E5%AD%98%E5%82%A8%E6%A0%87%E8%AE%B0%E6%95%B0%E6%8D%AE/image-20211113161130571.png" alt="image-20211113161130571"></p>
<p>写进文件后是这样</p>
<p><img src="../../../images/blog/CSV%E5%AD%98%E5%82%A8%E6%A0%87%E8%AE%B0%E6%95%B0%E6%8D%AE/image-20211113161155174.png" alt="image-20211113161155174"></p>
<p>如果左边还要加一列的话可以写为:</p>
<pre class="line-numbers language-matl" data-language="matl"><code class="language-matl">Name &#x3D; &#123;&#39;Smith&#39;;&#39;Johnson&#39;;&#39;Williams&#39;;&#39;Jones&#39;;&#39;Brown&#39;&#125;;
Age &#x3D; [38;43;38;40;49];
Height &#x3D; [71;69;64;67;64];
Weight &#x3D; [176;163;131;133;119];
BloodPressure &#x3D; [124 93; 109 77; 125 83; 117 75; 122 80];
T &#x3D; table(Name,Age,Height,Weight,BloodPressure);
writetable(T,&#39;H:\WenLabData\wormdata\N2_Crawl_202105\Labels\ceshi4.xlsx&#39;)</code></pre>

<p>得到写入的’xlsx’文件的效果为</p>
<p><img src="../../../images/blog/xlsx%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E6%A0%87%E8%AE%B0%E6%95%B0%E6%8D%AE/image-20211113161649625.png" alt="image-20211113161649625"></p>
]]></content>
      <categories>
        <category>实验分析</category>
        <category>线虫</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>Python</tag>
        <tag>实验分析</tag>
        <tag>线虫</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用Colab使用WormPose</title>
    <url>//post/%E5%A6%82%E4%BD%95%E7%94%A8Colab%E4%BD%BF%E7%94%A8WormPose.html</url>
    <content><![CDATA[<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>有登陆速率限制</p>
<p><img src="../images/blog/%E5%A6%82%E4%BD%95%E7%94%A8Colab%E4%BD%BF%E7%94%A8WormPose/image-20211113113629696.png" alt="image-20211113113629696"></p>
<span id="more"></span>]]></content>
      <categories>
        <category>Python</category>
        <category>Colab</category>
        <category>WormPose</category>
      </categories>
      <tags>
        <tag>Colab</tag>
        <tag>Python</tag>
        <tag>WormPose</tag>
      </tags>
  </entry>
  <entry>
    <title>常用网址查询</title>
    <url>//post/commonURLs/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%E6%9F%A5%E8%AF%A2.html</url>
    <content><![CDATA[<p><a href="source/../../keep_html/color.html">颜色代码查询https://rongkangxiong.top/keep_html/color.html</a></p>
<span id="more"></span>]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
  </entry>
  <entry>
    <title>如何使用Google的Colab</title>
    <url>//post/SoftwareUsage/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab.html</url>
    <content><![CDATA[<p>Google Colab(Colaboratory) 是一个研究项目，可免费使用。<br>旨在帮助传播机器学习培训和研究成果。它是一个 Jupyter 笔记本环境，不需要进行任何设置就可以使用，并且完全在云端运行</p>
<h1 id="创建Colab"><a href="#创建Colab" class="headerlink" title="创建Colab"></a>创建Colab</h1><p>登录<a href="https://drive.google.com/drive/my-drive">GoogleDriver地址 https://drive.google.com/drive/my-drive</a></p>
<p>点击 <code>我的云端硬盘-更多-关联更多应用</code></p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105751743.png" alt="image-20211113105751743"></p>
<p>选择<code>Colaboratory</code>然后点击进去安装</p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105832690.png" alt="image-20211113105832690"></p>
<p>安装Colaboratory插件,选择自己的Google账号，，选择与Google云端硬盘关联</p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105925943.png" alt="image-20211113105925943"></p>
<p>新建Colaborator</p>
<img src="../images/blog/如何使用Google的Colab/image-20211113110211489.png" alt="image-20211113110211489" style="zoom: 67%;" />



<p>链接到Google云端硬盘</p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110505754.png" alt="image-20211113110505754"></p>
<p>允许授权</p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110430488.png" alt="image-20211113110430488"></p>
<p>然后你的文件夹编程如下形式</p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110605422.png" alt="image-20211113110605422"></p>
<p>查看是否能使用GPU</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">import tensorflow as tf
tf.test.gpu_device_name()</code></pre>

<p>如果结果为空，则不能使用GPU</p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110919130.png" alt="image-20211113110919130"></p>
<p>选择<code>Runtime-GPU-Save</code>然后再重新运行代码</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">import tensorflow as tf
tf.test.gpu_device_name()</code></pre>

<p>如果结果为<code>/device:GPU:0</code></p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111100800.png" alt="image-20211113111100800"></p>
<p>使用<code>!/opt/bin/nvidia-smi</code>查看显存情况</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">!&#x2F;opt&#x2F;bin&#x2F;nvidia-smi</code></pre>

<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111158328.png" alt="image-20211113111158328"></p>
<p>查看显卡内存使用上限</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">from tensorflow.python.client import device_lib
device_lib.list_local_devices()</code></pre>

<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111238429.png" alt="image-20211113111238429"></p>
<p>查看内存信息</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">!cat &#x2F;proc&#x2F;meminfo</code></pre>

<p>查看CPU信息</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">!cat &#x2F;proc&#x2F;cupinfo</code></pre>

<h1 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h1><h2 id="挂载Google云盘"><a href="#挂载Google云盘" class="headerlink" title="挂载Google云盘"></a>挂载Google云盘</h2><p>这一步很重要，Colab的运行原理实际上就是给你分配一台远程的带GPU的主机，所以它的原始路径不是你的谷歌云盘（也就是你的代码文件）所在的路径。所以第一步我们先要把谷歌云盘挂载带到那台远程主机上</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">from google.colab import drive
drive.mount(&#39;&#x2F;content&#x2F;drive&#39;)</code></pre>

<h2 id="更改运行目录"><a href="#更改运行目录" class="headerlink" title="更改运行目录"></a>更改运行目录</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">import os
os.chdir(&quot;&#x2F;content&#x2F;gdrive&#x2F;My Drive&#x2F;Colab Notebooks&#x2F;Hashing&quot;)</code></pre>



<h1 id="重要的事情！！！"><a href="#重要的事情！！！" class="headerlink" title="重要的事情！！！"></a>重要的事情！！！</h1><h2 id="Error-404-rate-limit-exceeded"><a href="#Error-404-rate-limit-exceeded" class="headerlink" title="Error 404: rate_limit_exceeded"></a>Error 404: rate_limit_exceeded</h2><p>Google 对应用的新用户登录频率设有上限。您可以稍后尝试重新登录，或者要求开发者 (<a href="mailto:&#100;&#114;&#105;&#118;&#101;&#45;&#102;&#x69;&#x6c;&#101;&#x2d;&#115;&#116;&#114;&#x65;&#x61;&#109;&#x2d;&#x66;&#x65;&#101;&#x64;&#98;&#97;&#x63;&#107;&#x40;&#x67;&#x6f;&#x6f;&#x67;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;">&#100;&#114;&#105;&#118;&#101;&#45;&#102;&#x69;&#x6c;&#101;&#x2d;&#115;&#116;&#114;&#x65;&#x61;&#109;&#x2d;&#x66;&#x65;&#101;&#x64;&#98;&#97;&#x63;&#107;&#x40;&#x67;&#x6f;&#x6f;&#x67;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;</a>) 提高此应用的登录速率限制。</p>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>出现403错误是因为gdrive使用的谷歌的API使用频率超限，这个API调用的凭据（Credentials）是集成在gdrive里的，使用的人太多了，就导致超限错误</p>
<p>所以为了解决这个错误，就需要把gdrive里内置的ClientId和ClientSecret替换为我们自己的。</p>
<h2 id="申请API"><a href="#申请API" class="headerlink" title="申请API"></a>申请API</h2><ul>
<li><p>登陆Google API服务</p>
<p><a href="https://console.developers.google.com/apis/dashboard">https://console.developers.google.com/apis/dashboard</a></p>
<p>需要统一服务条款</p>
</li>
<li><p>创建项目</p>
</li>
</ul>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113143740935.png" alt="image-20211113143740935"></p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113143814842.png" alt="image-20211113143814842"></p>
<p>项目名称随意填写</p>
<ul>
<li>启用Google Drive API</li>
</ul>
<p>打开<a href="https://console.developers.google.com/apis/library/drive.googleapis.com">https://console.developers.google.com/apis/library/drive.googleapis.com</a>点击<strong>启用</strong></p>
<p><img src="../../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113144026038.png" alt="image-20211113144026038"></p>
<ul>
<li>创建凭据</li>
</ul>
<p>参考链接</p>
<p>​        <a href="https://blog.csdn.net/qq122716072/article/details/106779195">如何使用Google Colab免费算力训练自己的模型</a></p>
<p>​        <a href="https://www.cnblogs.com/think90/articles/13072937.html">如何正确使用Google Colab</a></p>
<span id="more"></span>]]></content>
      <categories>
        <category>Python</category>
        <category>Colab</category>
      </categories>
      <tags>
        <tag>Colab</tag>
        <tag>机器学习</tag>
        <tag>Python</tag>
        <tag>Jupyter notebook</tag>
      </tags>
  </entry>
  <entry>
    <title>用Pycharm跑Jupyter在远程服务器上运行</title>
    <url>//post/programming/%E7%94%A8Pycharm%E8%B7%91Jupyter%E5%9C%A8%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8C.html</url>
    <content><![CDATA[<span id="more"></span>]]></content>
      <categories>
        <category>Python</category>
        <category>Jupyter notebook</category>
      </categories>
      <tags>
        <tag>Jupyter notebook</tag>
        <tag>Pycharm</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>//post/programming/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<h1 id="Linux进程管理"><a href="#Linux进程管理" class="headerlink" title="Linux进程管理"></a>Linux进程管理</h1><h2 id="清除Terminal界面"><a href="#清除Terminal界面" class="headerlink" title="清除Terminal界面"></a>清除Terminal界面</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">clear</code></pre>

<h2 id="显示正在运行的CPU进程"><a href="#显示正在运行的CPU进程" class="headerlink" title="显示正在运行的CPU进程"></a>显示正在运行的CPU进程</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">htop</code></pre>

<p><img src="../images/blog/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/image-20211113130948515.png" alt="image-20211113130948515"></p>
<h2 id="显示正在运行的GPU进程"><a href="#显示正在运行的GPU进程" class="headerlink" title="显示正在运行的GPU进程"></a>显示正在运行的GPU进程</h2><p>显示正在运行的GPU进程</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">nvidia-smi</code></pre>

<p><img src="../images/blog/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/image-20211113131005993.png" alt="image-20211113131005993"></p>
<h2 id="清理进程"><a href="#清理进程" class="headerlink" title="清理进程"></a>清理进程</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">kill -9 PID</code></pre>

<p>其中<code>PID</code> 是你的进程编号</p>
<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="统计文件夹下面文件个数"><a href="#统计文件夹下面文件个数" class="headerlink" title="统计文件夹下面文件个数"></a>统计文件夹下面文件个数</h2><p>长列表输出该目录下文件信息(注意这里的文件是指目录、链接、设备文件等)，每一行对应一个文件或目录</p>
<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">ls -l # 查看详细信息
ls -a #查看隐藏文件
ls -la #同时具备上述两者特点</code></pre>

<p>统计当前目录下文件的个数包括子目录</p>
<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">ls -lR</code></pre>
<p>查看文件中内容</p>
<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">cat</code></pre>



<h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><ul>
<li><p>直接删除</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">rm filename</code></pre></li>
<li><p>删除前提示</p>
<pre class="line-numbers language-pytho" data-language="pytho"><code class="language-pytho">rm -i filename</code></pre></li>
<li><p>强制删除</p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">rm -f filename</code></pre></li>
<li><p>递归删除</p>
<pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux">rm -rf &#x2F;dir</code></pre></li>
</ul>
<h2 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h2><ul>
<li>删除名为<code>Mydocuments</code>的空文件夹</li>
</ul>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">rmdir Mydocuments</code></pre>

<p>如果文件夹不是空的，会提示 <code>rmdir: failed to remove ‘MyDocuments’: Directory not empty</code></p>
<ul>
<li><p>使用<code>rm</code>递归删除来删除，会删除所有目录和子目录，不提示</p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">rm -rf dir1 dir2 dir3</code></pre></li>
<li><p>删除所有空目录</p>
<pre class="line-numbers language-py" data-language="py"><code class="language-py">find . -type d -empty -delete</code></pre>

<p><code>-empty</code>只对空目录进行限制</p>
<p><code>-delete</code>删除包括子目录在内的所有空目录</p>
</li>
</ul>
<h1 id="文件创建"><a href="#文件创建" class="headerlink" title="文件创建"></a>文件创建</h1><p><code>echo</code>文字输入</p>
<pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">echo xxx &gt; y.txt  # 把 xxx 内容放到 y.txt 文件中，如果没有这个文件则创建这个文件，新存放的内容会替换原有文件的内容</code></pre>

]]></content>
      <categories>
        <category>常用</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>命令</tag>
        <tag>常用</tag>
      </tags>
  </entry>
  <entry>
    <title>HDF5文件使用方法</title>
    <url>//post/mynotes/%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/HDF5%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>HDF5, 大量(海量?)数据存储的一种解决方案. HDF的全称是Hiearchical Data Format<br>HDF5 文件一般以 <code>.h5</code> 或者 <code>.hdf5</code> 作为后缀名，需要专门的软件才能打开预览文件的内容<br>HDF5 文件结构中有 2 primary objects: Groups 和 Datasets。</p>
<span id="more"></span>]]></content>
      <categories>
        <category>实验分析</category>
        <category>线虫</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>Python</tag>
        <tag>实验分析</tag>
        <tag>线虫</tag>
      </tags>
  </entry>
  <entry>
    <title>用WormPose导入用Tierpsy tracker产生的数据</title>
    <url>//post/mynotes/%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/%E7%94%A8WormPose%E5%AF%BC%E5%85%A5Tierpsy%E4%BA%A7%E7%94%9F%E7%9A%84%E6%95%B0%E6%8D%AE.html</url>
    <content><![CDATA[<h1 id="下载视频转换软件Fiji"><a href="#下载视频转换软件Fiji" class="headerlink" title="下载视频转换软件Fiji"></a>下载视频转换软件<code>Fiji</code></h1><p><a href="https://imagej.net/software/fiji/">Fiji软件</a></p>
<p>通过将<code>loader</code>声明为<code>tierpsy</code></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">dataset_loader&#x3D;&quot;tierpsy&quot;</code></pre>

<p>为实验创建一个根目录，里面包含记录的视频，目录结构如下</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">+-- dataset_path
|   +-- video_name0
|   |   +-- video_name0.hdf5
|   |   +-- video_name0_features.hdf5  or video_name0_featuresN.hdf5
|   +-- video_name1
|   |   +-- video_name1.hdf5
|   |   +-- video_name1_features.hdf5 or video_name1_featuresN.hdf5
|   ...</code></pre>

<h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><p>在Tierpsy中选取 <code>提取时间戳选项</code>(即 <code>is_extract_timestamp</code>)<br>以便在<code>hdf5</code>文件中设置字段<code>timestamp/raw</code>，没有时间戳的配置文件在<code>WormPose</code>中不支持<br>每个文件中包含多个线虫 <code>indexes</code>的 <code>Tierpsy files</code>，<code>WormPose</code>将只加载一个线虫文件，即具有最小的<code>index</code>的文件</p>
<h2 id="高级使用"><a href="#高级使用" class="headerlink" title="高级使用"></a>高级使用</h2><p><code>Tierpsy</code> 数据集加载器使用默认的<code>SimpleFrameProcessing class</code>从背景对线虫进行分割。<br>如果这不适用于您的图像，并且您具有从后台分割蠕虫的自定义功能，则应实现自定义数据集加载器。您仍然可以使用提供的分层框架数据集和功能数据集，但您将需要重新执行帧预处理。<br>以<code>toy_dataset</code>为例，添加自定义数据集加载器，如下所示：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">from wormpose import BaseFramePreprocessing

# We use the Tierpsy loaders from WormPose
from wormpose.dataset.loaders.tierpsy import FramesDataset, FeaturesDataset

# But we redefine a custom frame preprocessing function
class FramePreprocessing(BaseFramePreprocessing):

    def process(self, frame)

        segmented_frame &#x3D; #TODO segment the frame, or load if precalculated
        background_color &#x3D; #TODO find the background color
        return segmented_frame, background_color</code></pre>


<h1 id="WormPose函数使用手册"><a href="#WormPose函数使用手册" class="headerlink" title="WormPose函数使用手册"></a>WormPose函数使用手册</h1><p>wormpose.dataset.loader</p>
]]></content>
      <categories>
        <category>实验分析</category>
        <category>线虫</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>Python</tag>
        <tag>实验分析</tag>
        <tag>线虫</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown常用语法</title>
    <url>//post/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html</url>
    <content><![CDATA[<p><a href="https://www.typora.io/#windows">Typora下载</a></p>
<h1 id="小功能"><a href="#小功能" class="headerlink" title="小功能"></a>小功能</h1><h2 id="启用预览功能"><a href="#启用预览功能" class="headerlink" title="启用预览功能"></a>启用预览功能</h2><p>直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能此代码下面的内容</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;!--more--&gt;</code></pre>

<h2 id="文章内部锚点跳转"><a href="#文章内部锚点跳转" class="headerlink" title="文章内部锚点跳转"></a>文章内部锚点跳转</h2><p>这个方式是由John Tsai给出的，分成两步：</p>
<ul>
<li>定义一个锚(id)：</li>
</ul>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;span id&#x3D;&quot;jump&quot;&gt;跳转到的地方&lt;&#x2F;span&gt;</code></pre>

<ul>
<li>使用markdown语法：</li>
</ul>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">[点击跳转](#jump)</code></pre>

<h2 id="自己写的文章的跳转"><a href="#自己写的文章的跳转" class="headerlink" title="自己写的文章的跳转"></a>自己写的文章的跳转</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](&#x2F;forder-to-you-file)</code></pre>

<p>例子:</p>
<ul>
<li><p>跳转到<a href="/post/Firstblog.html">我的第一篇博客</a></p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">[我的第一篇博客](&#x2F;post&#x2F;Firstblog.html)</code></pre></li>
<li><p>跳转到<a href="/mynotes/math/common_dstribute.html">我的笔记</a><br>  在内部的位置是<code>myblog/source/mynotes/math/common_dstribute.html</code></p>
  <pre class="line-numbers language-md" data-language="md"><code class="language-md">[我的笔记](&#x2F;mynotes&#x2F;math&#x2F;common_dstribute.html)</code></pre></li>
</ul>
<h2 id="链接跳转"><a href="#链接跳转" class="headerlink" title="链接跳转"></a>链接跳转</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](链接)</code></pre>

<h1 id="如何插入图片"><a href="#如何插入图片" class="headerlink" title="如何插入图片"></a>如何插入图片</h1><p>HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用</p>
<p>Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片</p>
<p>在<code>source</code>中新建一个<code>images</code>目录用于存放图片，将图片放在该目录下，示例:</p>
<h2 id="例1-如在任意-post目录下的文章中引用"><a href="#例1-如在任意-post目录下的文章中引用" class="headerlink" title="例1. 如在任意_post目录下的文章中引用"></a>例1. 如在任意<code>_post</code>目录下的文章中引用</h2><p><code>myblog/source/images/notecover/Firstblog.png</code>的这张图片<br>想引用的时候VScode和网页都能看到要用如下格式</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">![](images&#x2F;notecover&#x2F;..&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)
或者
![](images&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre>

<p>如果使用格式以下格式</p>
<h3 id="网页端看不到的格式-VScode能看到"><a href="#网页端看不到的格式-VScode能看到" class="headerlink" title="网页端看不到的格式|VScode能看到"></a>网页端看不到的格式|VScode能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)
![ceshi](&#x2F;source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)
</code></pre>

<h3 id="VsCode看不到的格式-网页端能看到"><a href="#VsCode看不到的格式-网页端能看到" class="headerlink" title="VsCode看不到的格式|网页端能看到"></a>VsCode看不到的格式|网页端能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)</code></pre>

<h3 id="网页端和VsCode都看不到的格式"><a href="#网页端和VsCode都看不到的格式" class="headerlink" title="网页端和VsCode都看不到的格式"></a>网页端和VsCode都看不到的格式</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)
![ceshi](&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre>

<h2 id="例2-引用同级目录的同名文件夹下的图片"><a href="#例2-引用同级目录的同名文件夹下的图片" class="headerlink" title="例2.引用同级目录的同名文件夹下的图片"></a>例2.引用同级目录的同名文件夹下的图片</h2><p><code>myblog/source/_post/Linux常用命令.md</code>文件中插入<code>myblog/source/_post/Linux常用命令/cup进程.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)
![ceshi](_post&#x2F;Linux常用命令&#x2F;..&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre>

<p>下面的方法只能在文章<code>Linux常用命令.md</code>中插入同文件夹路径下的图片<code>Linux常用命令/tupian.png</code></p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](Linux常用命令&#x2F;GUP进程.png)</code></pre>

<h3 id="VScode能看到的格式-网页端看不到"><a href="#VScode能看到的格式-网页端看不到" class="headerlink" title="VScode能看到的格式|网页端看不到"></a>VScode能看到的格式|网页端看不到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre>

<h3 id="网页端能看到的格式-VScode看不到"><a href="#网页端能看到的格式-VScode看不到" class="headerlink" title="网页端能看到的格式|VScode看不到"></a>网页端能看到的格式|VScode看不到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;_post&#x2F;_Linux常用命令&#x2F;GUP进程.png)
![ceshi](&#x2F;GUP进程.png)
![ceshi](GUP进程.png)</code></pre>

<h3 id="网页端和VScode都不能看到"><a href="#网页端和VScode都不能看到" class="headerlink" title="网页端和VScode都不能看到"></a>网页端和VScode都不能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;Linux常用命令&#x2F;GUP进程.png)
![ceshi](&#x2F;_post&#x2F;Linux常用命令&#x2F;GUP进程.png)
![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre>

<span id="more"></span>

<h1 id="VSCode快捷键"><a href="#VSCode快捷键" class="headerlink" title="VSCode快捷键"></a>VSCode快捷键</h1><h2 id="快速修复"><a href="#快速修复" class="headerlink" title="快速修复"></a>快速修复</h2><p><code>Windows</code> 上是 <code>Ctrl + .</code></p>
<h1 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h1><p>流程图、时序图、甘特图。画图都是用代码形式输入的，所以，都是以代码块形式来输入。画图引用的是mermai代码模块</p>
<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><blockquote>
<ul>
<li><code>graph</code> 是指画流程图，<code>TD</code>表示竖版,<code>LR</code>表示横版</li>
<li>双括号<code>(( ))</code>表示圆圈; <code>[ ]</code>表示圆角矩形; <code>/ /</code>表示菱形</li>
<li><code>--&gt;</code>表示箭头连接线</li>
</ul>
</blockquote>
<p>语法样例：</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">&#96;&#96;&#96;mermaid
graph TD
o((开始))--&gt;A[模块A]

A --&gt;|A1| B(模块B)

A--&gt;|a2|G(模块b1)

B --&gt; C&#123;判断条件C&#125;

C --&gt;|条件C1| D[模块D]

C --&gt;|条件C2| E[模块E]

C --&gt;|条件C3| F[模块F]

G--&gt;H&#123;if tt&#125;

H--&gt;|tt1|I[tt1]

H--&gt;|tt2|J[tt2]

H--&gt;|tt3|K[tt3]

D--&gt;Z((end))

E--&gt;Z((end))

F--&gt;Z((end))

I--&gt;Z((end))

J--&gt;Z((end))

K--&gt;Z((end))
&#96;&#96;&#96;</code></pre>



<p>自动生成的竖版效果如下：</p>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TD
o((开始))--&gt;A[模块A]

A --&gt;|A1| B(模块B)

A--&gt;|a2|G(模块b1)

B --&gt; C&#123;判断条件C&#125;

C --&gt;|条件C1| D[模块D]

C --&gt;|条件C2| E[模块E]

C --&gt;|条件C3| F[模块F]

G--&gt;H&#123;if tt&#125;

H--&gt;|tt1|I[tt1]

H--&gt;|tt2|J[tt2]

H--&gt;|tt3|K[tt3]

D--&gt;Z((end))

E--&gt;Z((end))

F--&gt;Z((end))

I--&gt;Z((end))

J--&gt;Z((end))

K--&gt;Z((end))</code></pre>

<p>自动生成的横版效果如下：</p>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
o((开始))--&gt;A[模块A]

A --&gt;|A1| B(模块B)

A--&gt;|a2|G(模块b1)

B --&gt; C&#123;判断条件C&#125;

C --&gt;|条件C1| D[模块D]

C --&gt;|条件C2| E[模块E]

C --&gt;|条件C3| F[模块F]

G--&gt;H&#123;if tt&#125;

H--&gt;|tt1|I[tt1]

H--&gt;|tt2|J[tt2]

H--&gt;|tt3|K[tt3]

D--&gt;Z((end))

E--&gt;Z((end))

F--&gt;Z((end))

I--&gt;Z((end))

J--&gt;Z((end))

K--&gt;Z((end))</code></pre>

<h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><p><code>sequenceDiagram</code>表示时序图</p>
<p>语法示例:</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">&#96;&#96;&#96;mermaid

sequenceDiagram

电脑A-&gt;&gt;电脑B: SYN：seq&#x3D;x

电脑B--&gt;&gt;电脑A: ACK+SYN：ack&#x3D;x+1，seq&#x3D;y

电脑A-&gt;&gt;电脑B: ACK：ack&#x3D;y+1，seq&#x3D;x+1

&#96;&#96;&#96;</code></pre>

<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">
sequenceDiagram

电脑A-&gt;&gt;电脑B: SYN：seq&#x3D;x

电脑B--&gt;&gt;电脑A: ACK+SYN：ack&#x3D;x+1，seq&#x3D;y

电脑A-&gt;&gt;电脑B: ACK：ack&#x3D;y+1，seq&#x3D;x+1
</code></pre>

<h2 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h2><p><code>gantt</code>表示甘特图</p>
<p>语法示例：</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">&#96;&#96;&#96;mermaid
gantt

title 甘特图

dateFormat YYYY-MM-DD

section 项目A

任务1 :a1, 2019-07-01, 15d

任务2 :a2, after a1, 20d

任务3 :a3, 2019-07-20, 20d

任务4 :a4, after a3, 10d

任务5 :a5, after a4, 15d
&#96;&#96;&#96;</code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">gantt

title 甘特图

dateFormat YYYY-MM-DD

section 项目A

任务1 :a1, 2019-07-01, 15d

任务2 :a2, after a1, 20d

任务3 :a3, 2019-07-20, 20d

任务4 :a4, after a3, 10d

任务5 :a5, after a4, 15d</code></pre>

<h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2>]]></content>
      <categories>
        <category>常用</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>如何分析线虫数据</title>
    <url>//post/mynotes/%E5%AE%9E%E9%AA%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E7%BA%BF%E8%99%AB%E6%95%B0%E6%8D%AE.html</url>
    <content><![CDATA[<h1 id="分析线虫数据"><a href="#分析线虫数据" class="headerlink" title="分析线虫数据"></a>分析线虫数据</h1><span id="more"></span>]]></content>
      <categories>
        <category>实验分析</category>
        <category>线虫</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>Python</tag>
        <tag>实验分析</tag>
        <tag>线虫</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-NexT主题添加相册</title>
    <url>//post/buildblog/add-photo-album.html</url>
    <content><![CDATA[<p>相册期待实现效果<br>对于相册，在自己 基于Hexo NexT搭建 的博客上期待实现与豆瓣相册类似的效果，具体如下</p>
<ul>
<li>主界面<ul>
<li>分类相册</li>
<li>自定义相册名</li>
<li>自定义封面</li>
</ul>
</li>
<li>分类相册界面<ul>
<li>三等分列</li>
<li>点击看大图</li>
<li>本地图片源/图床外链均可</li>
<li>与文章插图格式保持统一</li>
</ul>
</li>
<li>其他<ul>
<li>每张图片都可以有对应的文字描述</li>
<li>游客可以为图片添加评论</li>
<li>相册里面也可以插入视频</li>
</ul>
</li>
</ul>
<span id="more"></span>
<h1 id="Hexo-NexT博客搭建相册功能"><a href="#Hexo-NexT博客搭建相册功能" class="headerlink" title="Hexo+NexT博客搭建相册功能"></a>Hexo+NexT博客搭建相册功能</h1><h2 id="创建相册目录"><a href="#创建相册目录" class="headerlink" title="创建相册目录"></a>创建相册目录</h2><ul>
<li>在 <code>git bash</code> 中输入命令 <pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new page gallery</code></pre></li>
<li>在 <code>hexo/sourse/gallery</code> 目录下建立你需要的分类相册文件夹；</li>
<li>进入 <code>hexo/sourse/gallery</code> 目录，新建 <code>img</code> 文件夹用来存放相册封面；<br>在每个相册文件夹中创建 <code>img</code> 文件夹用来存放大图，以及 img/s 文件夹用来存放缩略图。<br>注意：<code>img/s</code> 文件夹可以省略不建，用<code>文件名-s.jpg</code> 的格式重命名缩略图即可。</li>
</ul>
<h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><h3 id="原图处理"><a href="#原图处理" class="headerlink" title="原图处理"></a>原图处理</h3><p>将需要上传的图片放入 <code>gallery/相册名/img</code> 文件夹中，为了加载速度建议压缩至 <code>1mb</code> 以下，使用 <code>jpg</code> 格式保存；<br>除了文件大小以外没有其它要求，但是为了方便后续页面编辑，建议将文件以容易辨识的方式重命名，例如<code>日期-图片名.jpg</code>。</p>
<p>ps：可以写一个python的gui来搭配使用</p>
<p><a href="https://tding.top/archives/607c3b85.html">https://tding.top/archives/607c3b85.html</a></p>
]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>配置博客过程中的各种问题</title>
    <url>//post/question-blog.html</url>
    <content><![CDATA[<p>配置blog过程中遇到的一些问题</p>
<span id="more"></span>

<h1 id="点击标签和分类进去发现是空白"><a href="#点击标签和分类进去发现是空白" class="headerlink" title="点击标签和分类进去发现是空白"></a>点击<code>标签</code>和<code>分类</code>进去发现是空白</h1><p>这时候需要打开主题配置文件<code>_config.yml</code></p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:
  home: &#x2F; || fa fa-home                      #首页
  about: &#x2F;about&#x2F; || fa fa-user               #关于
  #tags: &#x2F;tags&#x2F; || fa fa-tags                 #标签
  #categories: &#x2F;categories&#x2F; || fa fa-th       #分类</code></pre>

<p>将<code>tags</code>和<code>categories</code>给注释取消，然后用</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new page tags</code></pre>

<p>打开生成的tags文件夹下的<code>index.md</code>修改里面的内容添加一行`type:</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">---
title: categories
date: 2021-11-10 23:11:21
type: &quot;tags&quot;  #新加的
---</code></pre>

<p>分类<code>categories</code>同理</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">---
title: categories
date: 2021-11-10 23:11:21
type: &quot;categories&quot;
---</code></pre>
]]></content>
      <categories>
        <category>个人博客</category>
        <category>问题</category>
      </categories>
      <tags>
        <tag>个人博客</tag>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>addcount_number</title>
    <url>//post/buildblog/addcount-number.html</url>
    <content><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>Next 主题已经合并<br>在NexT主题配置文件中找到</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md"># Post wordcount display settings
# Dependencies: https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-word-counter
symbols_count_time:
  symbols: true
  time: true
  total_symbols: true
  total_time: true
  exclude_codeblock: false  #允许排出代码块内所有内容，以便进行准确的单词计数
  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）
  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）
  item_text_total: true   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）
  awl: 2                   # Average Word Length
  wpm: 275                 # Words Per Minute（每分钟阅读词数）
  suffix: &quot;mins.&quot;</code></pre>

<h1 id="busuanzi统计"><a href="#busuanzi统计" class="headerlink" title="busuanzi统计"></a>busuanzi统计</h1><p>NexT已经集成了busuanzi统计功能，只需要在主题配置文件<code>_config.yml</code>文件中将如下代码中的<br><code>enable: flase</code>改为<code>enable: true</code>即可</p>
<pre class="line-numbers language-njk" data-language="njk"><code class="language-njk"># Show Views &#x2F; Visitors of the website &#x2F; page with busuanzi.
# For more information: http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi&#x2F;
busuanzi_count:
  enable: true
  total_visitors: true
  total_visitors_icon: fa fa-user
  total_views: true
  total_views_icon: fa fa-eye
  post_views: true
  post_views_icon: far fa-eye</code></pre>
<p>然后</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo clean
hexo g
hexo d</code></pre>
<p>输入密码部署上去可能要等待十分钟左右就可以显示了</p>
<span id="more"></span>]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
        <tag>访客统计</tag>
        <tag>阅读统计</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>//post/mynotes/math/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%86.html</url>
    <content><![CDATA[<blockquote>
<p>柯西定理：</p>
<p>​    如果函数$f(z)$在一个单连通区域$D$内是解析的，那么对于所有在这个区域内且具有两个公共端点的那些曲线$C$来说，积分$\int_{C}f(z)dz$ 的值是相同的</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>//post/SoftwareUsage/%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AEGitHub.html</url>
    <content><![CDATA[<p>参考链接</p>
<pre><code>- [快速访问github](https://blog.csdn.net/qq_38048756/article/details/108346492)
- [dns服务器的设置](https://blog.csdn.net/qq_38048756/article/details/108347564)
- [Github ip地址查询](https://websites.ipaddress.com/github.com)
</code></pre>
<p>​    </p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>//post/mynotes/ImageProcessing/Untitled.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>//post/mynotes/ImageProcessing/%E9%A2%91%E5%9F%9F%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86.html</url>
    <content><![CDATA[<h1 id="一维信号"><a href="#一维信号" class="headerlink" title="一维信号"></a>一维信号</h1><p>连续时间信号，周期为T，可以傅里叶分解为<br>$$<br>f(t) =\sum_{n=-\infty}^{\infty} c_n e^{j\frac{2\pi n}{T}t}<br>$$<br>其中<br>$$<br>c_n=\frac{1}{T} \int_{T/2}^{T/2} f(t) e^{-j\frac{2\pi n}{T}t} dt, n=0,\pm1,\pm2,…<br>$$<br>连续函数 $f(t)$ 的傅里叶变换<br>$$<br>\mathcal{F}{f(t)} = \int_{-\infty}^{\infty} f(t)e^{-j 2\pi \mu t}dt<br>$$</p>
<p>冲击信号和筛选性</p>
<p>$$</p>
<p>$$</p>
<h2 id="采样"><a href="#采样" class="headerlink" title="采样"></a>采样</h2><h2 id="傅里叶谱和功率谱"><a href="#傅里叶谱和功率谱" class="headerlink" title="傅里叶谱和功率谱"></a>傅里叶谱和功率谱</h2><p>$$<br>F(u)= \mid F(u)\mid e^{j\phi(u)} \<br>$$</p>
<blockquote>
<p>傅里叶谱<br>$$<br>\mid F(u) \mid = [R^2(u)+I^2(u)]^{1/2}<br>$$</p>
</blockquote>
<blockquote>
<p>相角<br>$$<br>\phi(u) = arctan[\frac{I(u)}{R(u)}]<br>$$</p>
</blockquote>
<blockquote>
<p>功率谱<br>$$<br>\begin{align}<br>P(u) &amp;= \mid F(u) \mid^2 \<br>&amp;=R^2(u)+I^2(u)<br>\end{align}<br>$$</p>
</blockquote>
<blockquote>
<p>直流分量 $F(0)$<br>$$<br>\begin{align}<br>F(0) &amp;= \sum_{x=0}^{M-1} f(x) \<br>&amp; = M \bar{f}(x) \<br>\mid F(0)\mid &amp;= M \mid \bar{f}(x) \mid \<br>\end{align}<br>$$</p>
</blockquote>
<h1 id="二维信号"><a href="#二维信号" class="headerlink" title="二维信号"></a>二维信号</h1><p>$$<br>\delta(t,z) = \left{ \begin{array}{rcl}<br>1,\quad t=z=0 \<br>0,\quad otherwise<br>\end{array}\right.\<br>\int_{-\infty}^{\infty}\int_{-\infty}^{\infty}\delta(t,z)dtdz =1\<br>\int_{-\infty}^{\infty}\int_{-\infty}^{\infty}f(t,z)\delta(t,z)dtdz =f(0,0)\<br>\int_{-\infty}^{\infty}\int_{-\infty}^{\infty}f(t-t_0,z-z_0)\delta(t,z)dedz =f(t_0,z_0)\<br>$$</p>
<p>离散变量：<br>$$<br>\delta(x,y) = \left{ \begin{array}{rcl}<br>1,\quad x=y=0 \<br>0,\quad otherwise<br>\end{array}\right.\<br>\sum_{x=-\infty}^{\infty}\sum_{y=-\infty}^{\infty}\delta(x,y)dxdy =1\<br>\sum_{x=-\infty}^{\infty}\sum_{y=-\infty}^{\infty}f(x,y)\delta(x,y)dxdy =f(0,0)\<br>\sum_{x=-\infty}^{\infty}\sum_{y=-\infty}^{\infty}f(x-x_0,y-y_0)\delta(x,y)dxdy =f(x_0,y_0)\<br>$$<br>Fourier变换<br>$$<br>F(\mu,\nu) = \int_{-\infty}^{\infty}\int_{-\infty}^{\infty}f(t,z)e^{-j2\pi(\mu t+\nu z)}dtdz \<br>$$</p>
]]></content>
  </entry>
  <entry>
    <title>菜单栏定制</title>
    <url>//post/buildblog/%E8%8F%9C%E5%8D%95%E6%A0%8F%E5%AE%9A%E5%88%B6.html</url>
    <content><![CDATA[<h1 id="为Hexo的Next主题增加自定义menu菜单"><a href="#为Hexo的Next主题增加自定义menu菜单" class="headerlink" title="为Hexo的Next主题增加自定义menu菜单"></a>为Hexo的Next主题增加自定义menu菜单</h1><p>现在Hexo使用的主题当中，Next主题是比较流行的，查看Next主题的_config.yml，其中有8个默认定义的menu菜单，分别是home、about、tags、categories、archives、schedule、sitemap、commonweal 。通过参考tags、categories两个菜单，可以实现菜单的定制化。</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:
  home: &#x2F; || fa fa-home                      #首页
  about: &#x2F;about&#x2F; || fa fa-user               #关于
  tags: &#x2F;tags&#x2F; || fa fa-tags                 #标签
  categories: &#x2F;categories&#x2F; || fa fa-th       #分类
  read: &#x2F;categories&#x2F;read || fa fa-book       #读书
  archives: &#x2F;archives&#x2F; || fa fa-archive      #归档
  mynotes: &#x2F;mynotes&#x2F; || fa fa-sticky-note    #我的笔记
  #schedule: &#x2F;schedule&#x2F; || fa fa-calendar    #日历
  sitemap: &#x2F;sitemap.xml || fa fa-sitemap     #站点地图，供搜索引擎爬取
  #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat      #腾讯公益404
  # &quot;||&quot; 前面是目标链接，后面是图标名称，图标库http:&#x2F;&#x2F;www.fontawesome.com.cn&#x2F;faicons&#x2F;#web-application</code></pre>

]]></content>
      <tags>
        <tag>个人博客</tag>
        <tag>菜单</tag>
      </tags>
  </entry>
  <entry>
    <title>Theory JC Notes</title>
    <url>//post/mynotes/Theory.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>如何用Markdown书写博客</title>
    <url>//post/writeblog.html</url>
    <content><![CDATA[<h1 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h1><p><code>git</code> 中进入根目录输入 <code>hexo new &lt;模板&gt; &lt;文章名&gt;</code> 新建文章<br>其中<code>&lt;模板&gt;</code>在<code>source</code>文件夹下面，默认有三个模板 <code>post</code>,<code>draft</code>,<code>page</code></p>
<p>命令行输入</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new post aiticle_title</code></pre>

<p>此时会在 <code>source/_posts/</code> 文件夹中多了一个 <code>aiticle_title.md</code> 文件<br>打开后可以看到 <code>---</code>之间的内容为文章的配置内容</p>
<p>模板配置文件可以在<code>/scaffolds/post.md</code>修改<code>post.md</code>模板</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">---
title: &#123;&#123; title &#125;&#125;
author: 爱养虫的小熊
date: &#123;&#123; date &#125;&#125;
tags: []
categories:
    - [个人博客,Hexo]
top: 1
feature: true
mathjx: true  #是否开启数学公式支持
comment: true
---</code></pre>

<h1 id="如何插入图片"><a href="#如何插入图片" class="headerlink" title="如何插入图片"></a>如何插入图片</h1><p>HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用</p>
<p>Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片</p>
<p>在<code>source</code>中新建一个<code>images</code>目录用于存放图片，将图片放在该目录下，示例:</p>
<p>例1. 如在<code>myblog/source/images/notecover/Firstblog.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">![](images&#x2F;notecover&#x2F;..&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)
或者
![](images&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre>

<p>如果使用格式以下格式</p>
<h2 id="网页端看不到的格式-VScode能看到"><a href="#网页端看不到的格式-VScode能看到" class="headerlink" title="网页端看不到的格式|VScode能看到"></a>网页端看不到的格式|VScode能看到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)
![ceshi](&#x2F;source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)
</code></pre>

<h2 id="VsCode看不到的格式-网页端能看到"><a href="#VsCode看不到的格式-网页端能看到" class="headerlink" title="VsCode看不到的格式|网页端能看到"></a>VsCode看不到的格式|网页端能看到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)</code></pre>

<h2 id="网页端和VsCode都看不到的格式"><a href="#网页端和VsCode都看不到的格式" class="headerlink" title="网页端和VsCode都看不到的格式"></a>网页端和VsCode都看不到的格式</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)
![ceshi](&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre>

<p>例2.  如在<code>myblog/source/_post/Linux常用命令.md</code>文件中插入<code>myblog/source/_post/Linux常用命令/cup进程.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)
![ceshi](_post&#x2F;Linux常用命令&#x2F;..&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre>

<p>下面的方法只能在文章<code>Linux常用命令.md</code>中插入同文件夹路径下的图片<code>Linux常用命令/tupian.png</code></p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](Linux常用命令&#x2F;GUP进程.png)</code></pre>

<h2 id="VScode能看到的格式-网页端看不到"><a href="#VScode能看到的格式-网页端看不到" class="headerlink" title="VScode能看到的格式|网页端看不到"></a>VScode能看到的格式|网页端看不到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre>

<h2 id="网页端能看到的格式-VScode看不到"><a href="#网页端能看到的格式-VScode看不到" class="headerlink" title="网页端能看到的格式|VScode看不到"></a>网页端能看到的格式|VScode看不到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;_post&#x2F;_Linux常用命令&#x2F;GUP进程.png)
![ceshi](&#x2F;GUP进程.png)
![ceshi](GUP进程.png)</code></pre>

<h2 id="网页端和VScode都不能看到"><a href="#网页端和VScode都不能看到" class="headerlink" title="网页端和VScode都不能看到"></a>网页端和VScode都不能看到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;Linux常用命令&#x2F;GUP进程.png)
![ceshi](&#x2F;_post&#x2F;Linux常用命令&#x2F;GUP进程.png)
![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre>

<h1 id="如何插入链接"><a href="#如何插入链接" class="headerlink" title="如何插入链接"></a>如何插入链接</h1><p>格式:</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">[](链接)</code></pre>

<span id="more"></span>

<h1 id="hexo-admin插件管理博客写作"><a href="#hexo-admin插件管理博客写作" class="headerlink" title="hexo-admin插件管理博客写作"></a>hexo-admin插件管理博客写作</h1><p>每次新建文章和写作文章都在<code>git</code>命令行中，很不方便，于是可以安装这款插件<br><a href="https://github.com/jaredly/hexo-admin">参考hexo-admin官方页面</a></p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">
npm install --save hexo-admin
hexo g
hexo s
open &lt;http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;&gt;
</code></pre>

<p>然后浏览器输入<code>http://localhost:4000/admin/</code>进入管理界面<code>setting</code><br><img src="_post/../writeblog/writeblog_setup.png" alt="设置"><br><img src="post/../writeblog/writeblog_pass.png" alt="登陆"></p>
<p><a href="/mynotes/math/common_dstribute.html">我的笔记</a></p>
<p>复制下面生成的 <code>Admin Config Section</code>内容到 <code>/blog/_config.yml</code>粘贴在最后即可<br>之后登陆需要输入账户密码</p>
<p>在Deploy之前，还要编辑网站配置文件<code>_config.yml</code> （否则会出现<code>Error: Config value &quot;admin.deployCommand&quot; not found</code>)报错<br>如果实在<code>Windows系统</code>，这在末尾加上</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">deployCommand:&#39;hexo-generate.bat&#39;</code></pre>
]]></content>
      <categories>
        <category>个人博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo的Next主题配置Utterances评论系统</title>
    <url>//post/buildblog/addcomment.html</url>
    <content><![CDATA[<p>写作前面<br>最新版本的NexT默认不内置gitment评论系统<br>选用目前NexT 8+版本的内置Utterances</p>
<h1 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h1><p>在自己的github账号下创建一个仓库来存放评论，仓库名最好为<code>utterances</code>，方便后续自己识别，仓库设置为public<br>设置一个readme文件</p>
<h2 id="安装Utterances"><a href="#安装Utterances" class="headerlink" title="安装Utterances"></a>安装Utterances</h2><p>安装地址：<a href="https://github.com/apps/utterances">https://github.com/apps/utterances</a><br>访问安装地址，进入安装页面，点击<code>Install</code>按钮<br>权限选择，可以选择访问全部仓库，或者刚才指定仓库</p>
<h2 id="配置Utterances"><a href="#配置Utterances" class="headerlink" title="配置Utterances"></a>配置Utterances</h2><p>打开/blog/themes/next/_config.yml<br>查找<code>utterances</code>字段并修改如下</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># Utterances
# For more information: https:&#x2F;&#x2F;utteranc.es
utterances:
  enable: true
  repo: SantaJiang&#x2F;utterances	#格式是 user_name&#x2F;repo_name
  # Available values: pathname | url | title | og:title
  issue_term: pathname
  # Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light
  theme: github-light</code></pre>
<p>完成后重新部署:</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo clean
hexo g
hexo d</code></pre>
<p>一个一个运行，不然可能部署会报错</p>
<p>参考链接:<br>    <a href="https://utteranc.es/?installation_id=20644453&setup_action=install">utterance</a><br>    <a href="https://santajiang.github.io/2021/08/18/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEUtterances%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#more">Santa的个人博客</a></p>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
        <tag>NexT</tag>
        <tag>评论系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Next配置</title>
    <url>//post/buildblog/config-next.html</url>
    <content><![CDATA[<p><span id="begin">写在开头</span><br><a href="#end">点击跳转到文末</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/33616481">Hexo搭建的GitHub博客之优化大全https://zhuanlan.zhihu.com/p/33616481</a><br><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373">背景动画</a></p>
<h1 id="新建文章时，在相同目录下创建同名文件夹（便于图片管理）"><a href="#新建文章时，在相同目录下创建同名文件夹（便于图片管理）" class="headerlink" title="新建文章时，在相同目录下创建同名文件夹（便于图片管理）"></a>新建文章时，在相同目录下创建同名文件夹（便于图片管理）</h1><ul>
<li>打开站点配置文件_config.yml，搜索post_asset_folder字段，设置其值为true</li>
<li>安装hexo-asset-image：npm install hexo-asset-image –save</li>
<li>此时hexo new “fileName”会在/source/_posts目录下创建同名的文件夹</li>
<li>只需在 md 文件里使用</li>
</ul>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">![title](图片名.jpg)</code></pre>

<p>  无需路径名就可以插入图片。<br>ps: 发现这样就不能启用创建文件自动打开编辑器功能<br>自己创建文件夹即可</p>
<span id="more"></span>

<h1 id="启用预览功能"><a href="#启用预览功能" class="headerlink" title="启用预览功能"></a>启用预览功能</h1><p>直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能显示</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;!--more--&gt;</code></pre>

<h1 id="文章内部锚点跳转"><a href="#文章内部锚点跳转" class="headerlink" title="文章内部锚点跳转"></a>文章内部锚点跳转</h1><p>这个方式是由John Tsai给出的，分成两步：</p>
<ol>
<li>定义一个锚(id)：</li>
</ol>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;span id&#x3D;&quot;jump&quot;&gt;跳转到的地方&lt;&#x2F;span&gt;</code></pre>

<ol start="2">
<li>使用markdown语法：</li>
</ol>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">[点击跳转](#jump)</code></pre>

<h1 id="自己写的文章的跳转"><a href="#自己写的文章的跳转" class="headerlink" title="自己写的文章的跳转"></a>自己写的文章的跳转</h1><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](&#x2F;forder-to-you-file)</code></pre>

<p>在 /mynotes/math 下的 common_dstribute.md文件可以通过一下代码实现跳转<br><a href="/mynotes/math/common_dstribute.html">常用概率分布</a></p>
<p><a href="/mynotes/index.html">mynotes</a></p>
<p>在 /mynotes/ 下的 index.md文件可以通过跳转</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">[mynotes](&#x2F;mynotes&#x2F;index.html)</code></pre>

<p><a href="introduction.html">Introduction</a><br>在/source/_post/ 文件夹下面(和本文件同文件夹)的introduction.md的文件可以通过来跳转</p>
<pre class="line-numbers language-md" data-language="md"><code class="language-md">[Introduction](introduction.html) </code></pre>

<h1 id="站点文章置顶"><a href="#站点文章置顶" class="headerlink" title="站点文章置顶"></a>站点文章置顶</h1><p>打开Myblog站点下node_modules/hexo-generator-index/lib/generator.js文件。代码全部替换为</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#39;use strict&#39;;
var pagination &#x3D; require(&#39;hexo-pagination&#39;);
module.exports &#x3D; function(locals)&#123;
  var config &#x3D; this.config;
  var posts &#x3D; locals.posts;
    posts.data &#x3D; posts.data.sort(function(a, b) &#123;
        if(a.top &amp;&amp; b.top) &#123; &#x2F;&#x2F; 两篇文章top都有定义
            if(a.top &#x3D;&#x3D; b.top) return b.date - a.date; &#x2F;&#x2F; 若top值一样则按照文章日期降序排
            else return b.top - a.top; &#x2F;&#x2F; 否则按照top值降序排
        &#125;
        else if(a.top &amp;&amp; !b.top) &#123; &#x2F;&#x2F; 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）
            return -1;
        &#125;
        else if(!a.top &amp;&amp; b.top) &#123;
            return 1;
        &#125;
        else return b.date - a.date; &#x2F;&#x2F; 都没定义按照文章日期降序排
    &#125;);
  var paginationDir &#x3D; config.pagination_dir || &#39;page&#39;;
  return pagination(&#39;&#39;, posts, &#123;
    perPage: config.index_generator.per_page,
    layout: [&#39;index&#39;, &#39;archive&#39;],
    format: paginationDir + &#39;&#x2F;%d&#x2F;&#39;,
    data: &#123;
      __index: true
    &#125;
  &#125;);
&#125;;</code></pre>

<ul>
<li>打开文章添加top字段,设置数值，数值越大文章越靠前</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">---
layout: layout
title: 标签1
date: 2017-08-18 15:41:18
tags: 标签1
top: 100
---</code></pre>

<p><a href="https://www.jianshu.com/p/d23d67d318c7">参考链接https://www.jianshu.com/p/d23d67d318c7</a></p>
<h1 id="Hexo博客NexT主题下添加字数统计和阅读时长"><a href="#Hexo博客NexT主题下添加字数统计和阅读时长" class="headerlink" title="Hexo博客NexT主题下添加字数统计和阅读时长"></a>Hexo博客NexT主题下添加字数统计和阅读时长</h1><ul>
<li><p>安装hexo-symbols-count-time</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">npm install hexo-symbols-count-time --save</code></pre></li>
<li><p>如果安装完报如下提醒，还需安装eslint</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">npm install eslint --save</code></pre></li>
<li><p>站点/_config.yml配置</p>
</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">symbols_count_time:
  symbols: true                # 文章字数统计
  time: true                   # 文章阅读时长
  total_symbols: true          # 站点总字数统计
  total_time: true             # 站点总阅读时长
  exclude_codeblock: false     # 排除代码字数统计</code></pre>

<ul>
<li>Next主题文件 <strong>themes/next/_config.yml</strong></li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># Post wordcount display settings
# Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time
symbols_count_time:
  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）
  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）
  item_text_total: false   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）
  awl: 4                   # Average Word Length
  wpm: 275                 # Words Per Minute（每分钟阅读词数）
  suffix: mins.</code></pre>

<p><a href="https://github.com/RongkangXiong/hexo-symbols-count-time">参考链接https://github.com/RongkangXiong/hexo-symbols-count-time</a></p>
<h1 id="Hexo博客NexT主题下代码块复制功能"><a href="#Hexo博客NexT主题下代码块复制功能" class="headerlink" title="Hexo博客NexT主题下代码块复制功能"></a>Hexo博客NexT主题下代码块复制功能</h1><p>为了提高博客代码块的用户体验，仅仅代码高亮还不行，最好还能一键复制代码。故此文将讲述Hexo NexT主题博客的代码块复制功能配置。</p>
<ul>
<li>在themes/next/layout/_third-party/下新建文件copy-code.swig，写入下面的内容：</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#123;% if theme.codeblock.copy_button.enable %&#125;
  &lt;style&gt;
    .copy-btn &#123;
      display: inline-block;
      padding: 6px 12px;
      font-size: 13px;
      font-weight: 700;
      line-height: 20px;
      color: #333;
      white-space: nowrap;
      vertical-align: middle;
      cursor: pointer;
      background-color: #eee;
      background-image: linear-gradient(#fcfcfc, #eee);
      border: 1px solid #d5d5d5;
      border-radius: 3px;
      user-select: none;
      outline: 0;
    &#125;

    .highlight-wrap .copy-btn &#123;
      transition: opacity .3s ease-in-out;
      opacity: 0;
      padding: 2px 6px;
      position: absolute;
      right: 4px;
      top: 8px;
    &#125;

    .highlight-wrap:hover .copy-btn,
    .highlight-wrap .copy-btn:focus &#123;
      opacity: 1
    &#125;

    .highlight-wrap &#123;
      position: relative;
    &#125;
  &lt;&#x2F;style&gt;
  
  &lt;script&gt;
    $(&#39;.highlight&#39;).each(function (i, e) &#123;
      var $wrap &#x3D; $(&#39;&lt;div&gt;&#39;).addClass(&#39;highlight-wrap&#39;)
      $(e).after($wrap)
      $wrap.append($(&#39;&lt;button&gt;&#39;).addClass(&#39;copy-btn&#39;).append(&#39;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#39;).on(&#39;click&#39;, function (e) &#123;
        var code &#x3D; $(this).parent().find(&#39;.code&#39;).find(&#39;.line&#39;).map(function (i, e) &#123;
          return $(e).text()
        &#125;).toArray().join(&#39;\n&#39;)
        var ta &#x3D; document.createElement(&#39;textarea&#39;)
        document.body.appendChild(ta)
        ta.style.position &#x3D; &#39;absolute&#39;
        ta.style.top &#x3D; &#39;0px&#39;
        ta.style.left &#x3D; &#39;0px&#39;
        ta.value &#x3D; code
        ta.select()
        ta.focus()
        var result &#x3D; document.execCommand(&#39;copy&#39;)
        document.body.removeChild(ta)
        &#123;% if theme.codeblock.copy_button.show_result %&#125;
          if(result)$(this).text(&#39;&#123;&#123;__(&quot;post.copy_success&quot;)&#125;&#125;&#39;)
          else $(this).text(&#39;&#123;&#123;__(&quot;post.copy_failure&quot;)&#125;&#125;&#39;)
        &#123;% endif %&#125;
        $(this).blur()
      &#125;)).on(&#39;mouseleave&#39;, function (e) &#123;
        var $b &#x3D; $(this).find(&#39;.copy-btn&#39;)
        setTimeout(function () &#123;
          $b.text(&#39;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#39;)
        &#125;, 300)
      &#125;).append(e)
    &#125;)
  &lt;&#x2F;script&gt;
&#123;% endif %&#125;</code></pre>

<ul>
<li><p>编辑themes/next/layout/_layout.njk文件，在文件末尾</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;&#123;- next_inject(&#39;bodyEnd&#39;) &#125;&#125;</code></pre></li>
</ul>
<p>前面对齐添加一行代码：</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#123;% include &#39;_third-party&#x2F;copy-code.swig&#39; -%&#125;</code></pre>

<ul>
<li>添加按钮上显示的语言 在themes/next/languages/zh-CN.yml文件的post板块中添加下列代码：</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">copy_button: 复制
copy_success: 复制成功
copy_failure: 复制失败</code></pre>

<ul>
<li>在主题配置文件themes/next/_config.yml中添加开关<br>搜索codeblock</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">codeblock:
  border_radius:
  copy_button:
    enable: true
    # Show text copy result
    show_result: true</code></pre>

<p>重新生成</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">hexo clean &amp; hexo g</code></pre>

<p><a href="https://blog.csdn.net/Awt_FuDongLai/article/details/107466848">参考链接https://blog.csdn.net/Awt_FuDongLai/article/details/107466848</a></p>
<h1 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h1><ul>
<li>安装插件</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">npm install hexo-generator-search</code></pre>

<ul>
<li>查找主题配置文件themes/next/_config.yml中的local_search ：</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">local_search:
  enable: true
  # If auto, trigger search by changing input.
  # If manual, trigger search by pressing enter key or search button.
  trigger: manual  #手动，按回车键或搜索按钮触发搜索
  # Show top n results per article, show all results by setting to -1
  top_n_per_article: 1
  # Unescape html strings to the readable one.
  unescape: false
  # Preload the search data when the page loads.
  preload: false</code></pre>

<h1 id="Hexo添加文章时自动打开编辑器"><a href="#Hexo添加文章时自动打开编辑器" class="headerlink" title="Hexo添加文章时自动打开编辑器"></a>Hexo添加文章时自动打开编辑器</h1><ul>
<li>首先在Hexo目录下的scripts目录中创建一个JavaScript脚本文件(name.js)</li>
<li>如果没有这个scripts目录，则新建一个scripts目录</li>
<li>新建的JavaScript脚本文件可以任意取名<br>通过这个脚本，我们用其来监听hexo new这个动作，并在检测到hexo new之后，执行编辑器打开的命令</li>
<li>如果你是windows平台的Hexo用户，则将下列内容写入你的脚本：</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">var spawn &#x3D; require(&#39;child_process&#39;).exec;
hexo.on(&#39;new&#39;, function(data)&#123;
  spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39; + data.path);
&#125;);</code></pre>

<ul>
<li>如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：</li>
</ul>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">var exec &#x3D; require(&#39;child_process&#39;).exec;
hexo.on(&#39;new&#39;, function(data)&#123;
    exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39; + data.path);
&#125;);</code></pre>

<p><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373">参考链接https://blog.csdn.net/weixin_39345384/article/details/80785373</a></p>
<h1 id="多台电脑Hexo写作Blog同步"><a href="#多台电脑Hexo写作Blog同步" class="headerlink" title="多台电脑Hexo写作Blog同步"></a>多台电脑Hexo写作Blog同步</h1><p>新建一个分支。通过在GitHub上新建一个分支，来保存本地的原始文件，另一个分支来保存hexo生成的静态网页。这里详细介绍以下步骤。</p>
<h2 id="在原始电脑上"><a href="#在原始电脑上" class="headerlink" title="在原始电脑上"></a>在原始电脑上</h2><p>新建一个分支hexo，设置为默认分支，保存本地原始文件<br>在</p>
<h1 id="点击侧栏头像回到首页"><a href="#点击侧栏头像回到首页" class="headerlink" title="点击侧栏头像回到首页"></a>点击侧栏头像回到首页</h1><p><span id="end">文末</span></p>
<p><a href="#begin">点击跳转到开头</a></p>
]]></content>
      <categories>
        <category>个人博客</category>
        <category>Hexo</category>
        <category>NexT</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客图床资源获取</title>
    <url>//post/buildblog/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A%E5%88%B6%E4%BD%9C.html</url>
    <content><![CDATA[<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1>]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>资源</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言常用代码</title>
    <url>//post/programming/R/Rquery.html</url>
    <content><![CDATA[<h2 id="tabel输出"><a href="#tabel输出" class="headerlink" title="tabel输出"></a>tabel输出</h2><pre class="line-numbers language-r" data-language="r"><code class="language-r">library(knitr)
result &lt;- cbind(theta.hat, boot.theta.hat, bias,standard.error)  #合并计算结果,theta.hat,bott.theta.hat等都要是同等维度的向量
dimnames(result)[[2]] &lt;- c(&quot;theta&quot;, &quot;Bootstrap theta.hat&quot;, &quot;bias&quot;, &quot;standard error&quot;) #重命名各列
kable(result, caption &#x3D; &quot;表1：用bootstrap估计theta.hat的bias和standard error&quot;)</code></pre>

<p>表1.1：用bootstrap估计theta.hat的bias和standard error<br>|theta| Bootstrap | theta.hat | bias standard error |<br>| - | :-: | -: | -: |<br>|0.619115| 0.6199636| 0.0008486| 0.0477611|</p>
]]></content>
      <categories>
        <category>常用</category>
        <category>R</category>
        <category>Code</category>
      </categories>
      <tags>
        <tag>常用</tag>
        <tag>R</tag>
        <tag>Code</tag>
      </tags>
  </entry>
  <entry>
    <title>如何制作输出电子笔记</title>
    <url>//post/HowtoWriteNotes.html</url>
    <content><![CDATA[<h1 id="How-to-Write-MyNotes"><a href="#How-to-Write-MyNotes" class="headerlink" title="How to Write MyNotes"></a>How to Write MyNotes</h1><p>通过 plantuml绘制流程图</p>
<h3 id="支持类型"><a href="#支持类型" class="headerlink" title="支持类型"></a>支持类型</h3><p><a href="">MindMap diagram</a><br><a href="">Sequence diagram</a><br><a href="">Usecase diagram</a><br><a href="">Class diagram</a>  </p>
<h3 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h3><h4 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a>Python代码</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">删去&#96; &#96; &#96;之间的空格
&#96; &#96; &#96;python
def helloworld():
    print(&quot;helloworld&quot;)
&#96; &#96; &#96;</code></pre>

<p>得到效果</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">def helloworld():
    print(&quot;hello world&quot;)</code></pre>]]></content>
      <categories>
        <category>个人博客制作</category>
      </categories>
      <tags>
        <tag>个人博客</tag>
        <tag>笔记</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>First Blog-制作个人博客</title>
    <url>//post/buildblog/Firstblog.html</url>
    <content><![CDATA[<p>自己购买域名和服务器，搭建博客的成本比较高，光是搭建和维护，就对大多数人来说，没有这样的精力和时间。<br>直接在github平台上托管我们的博客，就可以安心写作，而不需要定期维护。</p>
<h1 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少，易于安装使用，可以方便生成静态网页托管在GitHub或者Coding上。</p>
<h1 id="HEXO搭建步骤"><a href="#HEXO搭建步骤" class="headerlink" title="HEXO搭建步骤"></a>HEXO搭建步骤</h1><ol>
<li>安装<a href="https://git-scm.com/download/win">git</a></li>
<li>安装<a href="https://nodejs.org/en/download/">Node.js</a>，选择LTS版本就行</li>
<li>安装Hexo</li>
<li>Github建立个人仓库</li>
<li>生成SSH添加到GitHub</li>
<li>将Hexo部署到GitHub</li>
<li>设置个人域名</li>
<li>发布文章</li>
</ol>
<span id="more"></span>
<h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><h3 id="Windows检查安装是否成功"><a href="#Windows检查安装是否成功" class="headerlink" title="Windows检查安装是否成功"></a>Windows检查安装是否成功</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">node -v
npm -v</code></pre>

<p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下(或者在这个文件夹下直接右键git bash打开)</p>
<h3 id="开始安装Hexo"><a href="#开始安装Hexo" class="headerlink" title="开始安装Hexo"></a>开始安装Hexo</h3><p>输入命令</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g hexo-cli</code></pre>

<p>你会发现出现</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">
changed 57 packages in 6s

1 package is looking for funding
  run &#96;npm fund&#96; for details
</code></pre>

<p>这不是报错，只是开发者寻求捐赠支持<br>翻译：1个包正在寻找资金，运行<font color='red'> npm fund</font>了解详细信息</p>
<h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo init myblog</code></pre>

<h4 id="当下载很慢的时候可以更换源"><a href="#当下载很慢的时候可以更换源" class="headerlink" title="当下载很慢的时候可以更换源"></a>当下载很慢的时候可以更换源</h4><ul>
<li><p>淘宝npm镜像</p>
  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npmmirror.com</code></pre></li>
<li><p>阿里源</p>
  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org
npm config list</code></pre></li>
<li><p>输入代码检查换源是否成功过</p>
  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm config list</code></pre></li>
</ul>
<p>然后</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">cd myblog &#x2F;&#x2F;进入这个myblog文件夹
npm install
hexo g</code></pre>

<p>新建完成后，指定文件夹目录下有：</p>
<ul>
<li>node_modules: 依赖包</li>
<li>public: 存放生成的页面</li>
<li>scaffolds：生成文章的一些模板</li>
<li>source：用来存放你的文章</li>
<li>themes：主题</li>
<li><strong>_config.yml: 博客的配置文件</strong></li>
</ul>
<p>继续输入</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo g
hexo server</code></pre>

<p>打开hexo的服务，在浏览器输入<a href="localhost:4000">localhost:4000</a>就可以在本地看到你生成的博客</p>
<h3 id="修改配置文件-config-yml"><a href="#修改配置文件-config-yml" class="headerlink" title="修改配置文件 _config.yml"></a>修改配置文件 <strong>_config.yml</strong></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">deploy:
    type: git
    repo: https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io.git
    branch: main</code></pre>

<p>注意空格还有对齐</p>
<h3 id="安装deploy-git"><a href="#安装deploy-git" class="headerlink" title="安装deploy-git"></a>安装deploy-git</h3><p>也就是部署的命令,这样你才能用命令部署到GitHub</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install hexo-deployer-git --save</code></pre>

<p>然后确认是否连接成功</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">ssh -T git@github.com</code></pre>

<p>会出现让你确认密码</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo clean
hexo generate
hexo deploy</code></pre>

<p>其中<strong>hexo clean</strong>清除了你之前生成的东西，也可以不加。<br><strong>hexo generate</strong> 顾名思义，生成静态文章，可以用<strong>hexo g</strong>缩写<br><strong>hexo deploy</strong> 部署文章，可以用<strong>hexo d</strong>缩写</p>
<p>出现一下信息表示部署成功</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">Branch &#39;master&#39; set up to track remote branch &#39;main&#39; from &#39;https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io&#39;.
INFO  Deploy done: git</code></pre>

<p>过一会儿就可以在 <a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="出现 OpenSSL SSL_read: Connection was reset, errno 10054"></a>出现 <em><strong>OpenSSL SSL_read: Connection was reset, errno 10054</strong></em></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">    git config --global http.sslVerify &quot;false&quot;
&#96;&#96;&#96;自己购买域名和服务器，搭建博客的成本比较高，光是搭建和维护，就对大多数人来说，没有这样的精力和时间。
直接在github平台上托管我们的博客，就可以安心写作，而不需要定期维护。

# Hexo简介

Hexo是一款基于Node.js的静态博客框架，依赖少，易于安装使用，可以方便生成静态网页托管在GitHub或者Coding上。

# HEXO搭建步骤

1. 安装[git](https:&#x2F;&#x2F;git-scm.com&#x2F;download&#x2F;win)
2. 安装[Node.js](https:&#x2F;&#x2F;nodejs.org&#x2F;en&#x2F;download&#x2F;)，选择LTS版本就行
3. 安装Hexo
4. Github建立个人仓库
5. 生成SSH添加到GitHub
6. 将Hexo部署到GitHub
7. 设置个人域名
8. 发布文章

# 安装hexo

### Windows检查安装是否成功

&#96;&#96;&#96;git
node -v
npm -v</code></pre>

<p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下(或者在这个文件夹下直接右键git bash打开)</p>
<h3 id="开始安装Hexo-1"><a href="#开始安装Hexo-1" class="headerlink" title="开始安装Hexo"></a>开始安装Hexo</h3><p>输入命令</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g hexo-cli</code></pre>

<p>你会发现出现</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">
changed 57 packages in 6s

1 package is looking for funding
  run &#96;npm fund&#96; for details
</code></pre>

<p>这不是报错，只是开发者寻求捐赠支持<br>翻译：1个包正在寻找资金，运行<font color='red'> npm fund</font>了解详细信息</p>
<h3 id="初始化Hexo-1"><a href="#初始化Hexo-1" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo init myblog</code></pre>

<h4 id="当下载很慢的时候可以更换源-1"><a href="#当下载很慢的时候可以更换源-1" class="headerlink" title="当下载很慢的时候可以更换源"></a>当下载很慢的时候可以更换源</h4><ul>
<li><p>淘宝npm镜像</p>
  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npmmirror.com</code></pre></li>
<li><p>阿里源</p>
  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org
npm config list</code></pre></li>
<li><p>输入代码检查换源是否成功过</p>
  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm config list</code></pre></li>
</ul>
<p>然后</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">cd myblog &#x2F;&#x2F;进入这个myblog文件夹
npm install
hexo g</code></pre>

<p>新建完成后，指定文件夹目录下有：</p>
<ul>
<li>node_modules: 依赖包</li>
<li>public: 存放生成的页面</li>
<li>scaffolds：生成文章的一些模板</li>
<li>source：用来存放你的文章</li>
<li>themes：主题</li>
<li><strong>_config.yml: 博客的配置文件</strong></li>
</ul>
<p>继续输入</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo g
hexo server</code></pre>

<p>打开hexo的服务，在浏览器输入<a href="localhost:4000">localhost:4000</a>就可以在本地看到你生成的博客</p>
<h3 id="修改配置文件-config-yml-1"><a href="#修改配置文件-config-yml-1" class="headerlink" title="修改配置文件 _config.yml"></a>修改配置文件 <strong>_config.yml</strong></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">deploy:
    type: git
    repo: https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io.git
    branch: main</code></pre>

<p>这里 repo内容可以换为：</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">git@github.com:RongkangXiong&#x2F;RongkangXiong.github.io.git</code></pre>

<p>从而避免每次都要输入密码</p>
<p>注意空格还有对齐</p>
<h3 id="安装deploy-git-1"><a href="#安装deploy-git-1" class="headerlink" title="安装deploy-git"></a>安装deploy-git</h3><p>也就是部署的命令,这样你才能用命令部署到GitHub</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install hexo-deployer-git --save</code></pre>

<p>然后确认是否连接成功</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">ssh -T git@github.com</code></pre>

<p>会出现让你确认密码</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo clean
hexo generate
hexo deploy</code></pre>

<p>其中<strong>hexo clean</strong>清除了你之前生成的东西，也可以不加。<br><strong>hexo generate</strong> 顾名思义，生成静态文章，可以用<strong>hexo g</strong>缩写<br><strong>hexo deploy</strong> 部署文章，可以用<strong>hexo d</strong>缩写</p>
<p>快速代码为:</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo clean &amp; hexo g &amp; hexo d</code></pre>


<p>出现一下信息表示部署成功</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">Branch &#39;master&#39; set up to track remote branch &#39;main&#39; from &#39;https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io&#39;.
INFO  Deploy done: git</code></pre>

<p>过一会儿就可以在 <a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了</p>
<h2 id="hexo基本配置"><a href="#hexo基本配置" class="headerlink" title="hexo基本配置"></a>hexo基本配置</h2><p>在文件根目录下的 <em>_config.yml</em>，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。</p>
<h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><p>| 参数 | 描述 |  作用<br>| - | :-: | -: | -: |<br>| title | 网站标题 | |<br>|subtitle|网站副标题| |<br>|description| 网站描述| 主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词 |<br>|author |您的名字| 显示文章的作者 |<br>|language |网站使用的语言| |<br>|timezone |网站时区Hexo，比如说：America/New_York, Japan和 UTC| 默认使用您电脑的时区 |</p>
<h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><p>| 参数 | 描述 | 操作 |<br>| - | :-: | :-: | :-: |<br>|url|网址| url改成你的网站域名|<br>|root|网站根目录| |<br>|permalink |文章的 永久链接 格式| 生成某个文章时候的链接格式，官方给出的<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接变量</a>很多 |<br>|permalink_defaults |永久链接中各部分的默认值|</p>
<h3 id="运行Hexo服务器"><a href="#运行Hexo服务器" class="headerlink" title="运行Hexo服务器"></a>运行Hexo服务器</h3><p>在127.0.0.1::8080 上启动服务器</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo server -i 127.0.0.1 -p 8080</code></pre>

<h2 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h2><h3 id="出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054-1"><a href="#出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054-1" class="headerlink" title="出现 OpenSSL SSL_read: Connection was reset, errno 10054"></a>出现 <em><strong>OpenSSL SSL_read: Connection was reset, errno 10054</strong></em></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git config --global http.sslVerify &quot;false&quot;</code></pre>

<h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>觉得默认的landscape主题不好看，那么可以在<a href="https://hexo.io/themes/">官网的主题</a>中，选择你喜欢的一个主题进行修改就可以啦</p>
<h2 id="Hexo主题安装教程"><a href="#Hexo主题安装教程" class="headerlink" title="Hexo主题安装教程"></a>Hexo主题安装教程</h2><p>进入<a href="https://hexo.io/themes/">官网的主题</a>，选择喜欢主题，点击链接进入github界面<br>然后复制 <strong>Code</strong> 的 <strong>HTTPS</strong> 或者 <strong>Github CLI</strong>链接</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">git clone https:&#x2F;&#x2F;github.com&#x2F;ppoffice&#x2F;hexo-theme-hueman.git themes&#x2F;hueman</code></pre>
<p>如果下载不了可以下载zip解压到 themes/hueman 下面<br>也可以用GitHub桌面端进行Clone</p>
<h3 id="安装搜索系统"><a href="#安装搜索系统" class="headerlink" title="安装搜索系统"></a>安装搜索系统</h3><h3 id="安装评论系统"><a href="#安装评论系统" class="headerlink" title="安装评论系统"></a>安装评论系统</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install valine --save</code></pre>


<p>参考链接：</p>
<ul>
<li><a href="https://www.jianshu.com/p/ec4e678f6cef">Hexo 更换主题</a></li>
<li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?utm_source=wechat_session&utm_medium=social&utm_oi=1018674094685900800">hexo史上最全搭建教程</a></li>
<li><a href="https://aurora.tridiamond.tech/zh/">aurora主题</a></li>
<li><a href="https://blog.meerost.com/post/AuroraMagicChangeFirst">魔改aurora主题</a></li>
<li><a href="https://github.com/vuepress-aurora/vuepress-theme-aurora">vuepress-theme-aurora主题</a></li>
</ul>
]]></content>
      <categories>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
        <tag>网站</tag>
        <tag>Github</tag>
      </tags>
  </entry>
</search>
