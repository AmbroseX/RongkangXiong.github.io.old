<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rongkang&#39;s Blog</title>
  
  
  <link href="https://rongkangxiong.top/atom.xml" rel="self"/>
  
  <link href="https://rongkangxiong.top/"/>
  <updated>2021-11-12T07:45:10.788Z</updated>
  <id>https://rongkangxiong.top/</id>
  
  <author>
    <name>Rongkang Xiong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用Pycharm跑Jupyter在远程服务器上运行</title>
    <link href="https://rongkangxiong.top/post/%E7%94%A8Pycharm%E8%B7%91Jupyter%E5%9C%A8%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8C.html"/>
    <id>https://rongkangxiong.top/post/%E7%94%A8Pycharm%E8%B7%91Jupyter%E5%9C%A8%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8C.html</id>
    <published>2021-11-12T07:44:28.000Z</published>
    <updated>2021-11-12T07:45:10.788Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
      
    
    
    
    <category term="Python" scheme="https://rongkangxiong.top/categories/Python/"/>
    
    <category term="Jupyter notebook" scheme="https://rongkangxiong.top/categories/Python/Jupyter-notebook/"/>
    
    
    <category term="Pycharm" scheme="https://rongkangxiong.top/tags/Pycharm/"/>
    
    <category term="Jupyter notebook" scheme="https://rongkangxiong.top/tags/Jupyter-notebook/"/>
    
    <category term="服务器" scheme="https://rongkangxiong.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="https://rongkangxiong.top/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <id>https://rongkangxiong.top/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</id>
    <published>2021-11-12T05:34:35.000Z</published>
    <updated>2021-11-12T14:05:11.907Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux进程管理"><a href="#Linux进程管理" class="headerlink" title="Linux进程管理"></a>Linux进程管理</h1><h2 id="清除Terminal界面"><a href="#清除Terminal界面" class="headerlink" title="清除Terminal界面"></a>清除Terminal界面</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">clear</code></pre><h2 id="显示正在运行的CPU进程"><a href="#显示正在运行的CPU进程" class="headerlink" title="显示正在运行的CPU进程"></a>显示正在运行的CPU进程</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">htop</code></pre><p><img src="/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/../Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/GUP%E8%BF%9B%E7%A8%8B.png" alt="GPU进程"></p><h2 id="显示正在运行的GPU进程"><a href="#显示正在运行的GPU进程" class="headerlink" title="显示正在运行的GPU进程"></a>显示正在运行的GPU进程</h2><p>显示正在运行的GPU进程</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">nvidia-smi</code></pre><p><img src="/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/../Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/GUP%E8%BF%9B%E7%A8%8B.png" alt="GPU进程"></p><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="统计文件夹下面文件个数"><a href="#统计文件夹下面文件个数" class="headerlink" title="统计文件夹下面文件个数"></a>统计文件夹下面文件个数</h2><p>长列表输出该目录下文件信息(注意这里的文件是指目录、链接、设备文件等)，每一行对应一个文件或目录</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">ls -l</code></pre><p>统计当前目录下文件的个数包括子目录</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">ls -lR</code></pre><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Linux进程管理&quot;&gt;&lt;a href=&quot;#Linux进程管理&quot; class=&quot;headerlink&quot; title=&quot;Linux进程管理&quot;&gt;&lt;/a&gt;Linux进程管理&lt;/h1&gt;&lt;h2 id=&quot;清除Terminal界面&quot;&gt;&lt;a href=&quot;#清除Terminal界面&quot; class=&quot;headerlink&quot; title=&quot;清除Terminal界面&quot;&gt;&lt;/a&gt;清除Terminal界面&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;clear&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;显示正在运行的CPU进程&quot;&gt;&lt;a href=&quot;#显示正在运行的CPU进程&quot; class=&quot;headerlink&quot; title=&quot;显示正在运行的CPU进程&quot;&gt;&lt;/a&gt;显示正在运行的CPU进程&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;htop&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/../Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/GUP%E8%BF%9B%E7%A8%8B.png&quot; alt=&quot;GPU进程&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;显示正在运行的GPU进程&quot;&gt;&lt;a href=&quot;#显示正在运行的GPU进程&quot; class=&quot;headerlink&quot; title=&quot;显示正在运行的GPU进程&quot;&gt;&lt;/a&gt;显示正在运行的GPU进程&lt;/h2&gt;&lt;p&gt;显示正在运行的GPU进程&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;nvidia-smi&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/../Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/GUP%E8%BF%9B%E7%A8%8B.png&quot; alt=&quot;GPU进程&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;headerlink&quot; title=&quot;文件操作&quot;&gt;&lt;/a&gt;文件操作&lt;/h1&gt;&lt;h2 id=&quot;统计文件夹下面文件个数&quot;&gt;&lt;a href=&quot;#统计文件夹下面文件个数&quot; class=&quot;headerlink&quot; title=&quot;统计文件夹下面文件个数&quot;&gt;&lt;/a&gt;统计文件夹下面文件个数&lt;/h2&gt;&lt;p&gt;长列表输出该目录下文件信息(注意这里的文件是指目录、链接、设备文件等)，每一行对应一个文件或目录&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-linux&quot; data-language=&quot;linux&quot;&gt;&lt;code class=&quot;language-linux&quot;&gt;ls -l&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;统计当前目录下文件的个数包括子目录&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-linux&quot; data-language=&quot;linux&quot;&gt;&lt;code class=&quot;language-linux&quot;&gt;ls -lR&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="常用" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/"/>
    
    <category term="Linux" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/Linux/"/>
    
    
    <category term="Linux" scheme="https://rongkangxiong.top/tags/Linux/"/>
    
    <category term="命令" scheme="https://rongkangxiong.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="常用" scheme="https://rongkangxiong.top/tags/%E5%B8%B8%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Markdown常用语法</title>
    <link href="https://rongkangxiong.top/post/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html"/>
    <id>https://rongkangxiong.top/post/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html</id>
    <published>2021-11-12T05:02:59.000Z</published>
    <updated>2021-11-12T12:17:35.134Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.typora.io/#windows">Typora下载</a></p><h2 id="小功能"><a href="#小功能" class="headerlink" title="小功能"></a>小功能</h2><h2 id="启用预览功能"><a href="#启用预览功能" class="headerlink" title="启用预览功能"></a>启用预览功能</h2><p>直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能此代码下面的内容</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;!--more--&gt;</code></pre><h2 id="文章内部锚点跳转"><a href="#文章内部锚点跳转" class="headerlink" title="文章内部锚点跳转"></a>文章内部锚点跳转</h2><p>这个方式是由John Tsai给出的，分成两步：</p><ul><li>定义一个锚(id)：</li></ul><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;span id&#x3D;&quot;jump&quot;&gt;跳转到的地方&lt;&#x2F;span&gt;</code></pre><ul><li>使用markdown语法：</li></ul><pre class="line-numbers language-md" data-language="md"><code class="language-md">[点击跳转](#jump)</code></pre><h2 id="自己写的文章的跳转"><a href="#自己写的文章的跳转" class="headerlink" title="自己写的文章的跳转"></a>自己写的文章的跳转</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](&#x2F;forder-to-you-file)</code></pre><p>例子:</p><ul><li><p>跳转到<a href="/post/Firstblog.html">我的第一篇博客</a></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[我的第一篇博客](&#x2F;post&#x2F;Firstblog.html)</code></pre></li><li><p>跳转到<a href="/mynotes/math/common_dstribute.html">我的笔记</a><br>  在内部的位置是<code>myblog/source/mynotes/math/common_dstribute.html</code></p>  <pre class="line-numbers language-md" data-language="md"><code class="language-md">[我的笔记](&#x2F;mynotes&#x2F;math&#x2F;common_dstribute.html)</code></pre></li></ul><h2 id="链接跳转"><a href="#链接跳转" class="headerlink" title="链接跳转"></a>链接跳转</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](链接)</code></pre><h1 id="显示图片"><a href="#显示图片" class="headerlink" title="显示图片"></a>显示图片</h1><span id="more"></span><h1 id="VSCode快捷键"><a href="#VSCode快捷键" class="headerlink" title="VSCode快捷键"></a>VSCode快捷键</h1><h2 id="快速修复"><a href="#快速修复" class="headerlink" title="快速修复"></a>快速修复</h2><p><code>Windows</code> 上是 <code>Ctrl + .</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.typora.io/#windows&quot;&gt;Typora下载&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;小功能&quot;&gt;&lt;a href=&quot;#小功能&quot; class=&quot;headerlink&quot; title=&quot;小功能&quot;&gt;&lt;/a&gt;小功能&lt;/h2&gt;&lt;h2 id=&quot;启用预览功能&quot;&gt;&lt;a href=&quot;#启用预览功能&quot; class=&quot;headerlink&quot; title=&quot;启用预览功能&quot;&gt;&lt;/a&gt;启用预览功能&lt;/h2&gt;&lt;p&gt;直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能此代码下面的内容&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;文章内部锚点跳转&quot;&gt;&lt;a href=&quot;#文章内部锚点跳转&quot; class=&quot;headerlink&quot; title=&quot;文章内部锚点跳转&quot;&gt;&lt;/a&gt;文章内部锚点跳转&lt;/h2&gt;&lt;p&gt;这个方式是由John Tsai给出的，分成两步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义一个锚(id)：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;&amp;lt;span id&amp;#x3D;&amp;quot;jump&amp;quot;&amp;gt;跳转到的地方&amp;lt;&amp;#x2F;span&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;使用markdown语法：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[点击跳转](#jump)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;自己写的文章的跳转&quot;&gt;&lt;a href=&quot;#自己写的文章的跳转&quot; class=&quot;headerlink&quot; title=&quot;自己写的文章的跳转&quot;&gt;&lt;/a&gt;自己写的文章的跳转&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[名称](&amp;#x2F;forder-to-you-file)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例子:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;跳转到&lt;a href=&quot;/post/Firstblog.html&quot;&gt;我的第一篇博客&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[我的第一篇博客](&amp;#x2F;post&amp;#x2F;Firstblog.html)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;跳转到&lt;a href=&quot;/mynotes/math/common_dstribute.html&quot;&gt;我的笔记&lt;/a&gt;&lt;br&gt;  在内部的位置是&lt;code&gt;myblog/source/mynotes/math/common_dstribute.html&lt;/code&gt;&lt;/p&gt;
  &lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[我的笔记](&amp;#x2F;mynotes&amp;#x2F;math&amp;#x2F;common_dstribute.html)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;链接跳转&quot;&gt;&lt;a href=&quot;#链接跳转&quot; class=&quot;headerlink&quot; title=&quot;链接跳转&quot;&gt;&lt;/a&gt;链接跳转&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[名称](链接)&lt;/code&gt;&lt;/pre&gt;


&lt;h1 id=&quot;显示图片&quot;&gt;&lt;a href=&quot;#显示图片&quot; class=&quot;headerlink&quot; title=&quot;显示图片&quot;&gt;&lt;/a&gt;显示图片&lt;/h1&gt;</summary>
    
    
    
    <category term="常用" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/"/>
    
    <category term="Markdown" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://rongkangxiong.top/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://rongkangxiong.top/post/test.html"/>
    <id>https://rongkangxiong.top/post/test.html</id>
    <published>2021-11-11T14:16:13.000Z</published>
    <updated>2021-11-11T14:16:13.422Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
      
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo-NexT主题添加相册</title>
    <link href="https://rongkangxiong.top/post/add-photo-album.html"/>
    <id>https://rongkangxiong.top/post/add-photo-album.html</id>
    <published>2021-11-11T14:09:55.000Z</published>
    <updated>2021-11-12T04:58:19.995Z</updated>
    
    <content type="html"><![CDATA[<p>相册期待实现效果<br>对于相册，在自己 基于Hexo NexT搭建 的博客上期待实现与豆瓣相册类似的效果，具体如下</p><ul><li>主界面<ul><li>分类相册</li><li>自定义相册名</li><li>自定义封面</li></ul></li><li>分类相册界面<ul><li>三等分列</li><li>点击看大图</li><li>本地图片源/图床外链均可</li><li>与文章插图格式保持统一</li></ul></li><li>其他<ul><li>每张图片都可以有对应的文字描述</li><li>游客可以为图片添加评论</li><li>相册里面也可以插入视频</li></ul></li></ul><span id="more"></span><h1 id="Hexo-NexT博客搭建相册功能"><a href="#Hexo-NexT博客搭建相册功能" class="headerlink" title="Hexo+NexT博客搭建相册功能"></a>Hexo+NexT博客搭建相册功能</h1><h2 id="创建相册目录"><a href="#创建相册目录" class="headerlink" title="创建相册目录"></a>创建相册目录</h2><ul><li>在 <code>git bash</code> 中输入命令 <pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new page gallery</code></pre></li><li>在 <code>hexo/sourse/gallery</code> 目录下建立你需要的分类相册文件夹；</li><li>进入 <code>hexo/sourse/gallery</code> 目录，新建 <code>img</code> 文件夹用来存放相册封面；<br>在每个相册文件夹中创建 <code>img</code> 文件夹用来存放大图，以及 img/s 文件夹用来存放缩略图。<br>注意：<code>img/s</code> 文件夹可以省略不建，用<code>文件名-s.jpg</code> 的格式重命名缩略图即可。</li></ul><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><h3 id="原图处理"><a href="#原图处理" class="headerlink" title="原图处理"></a>原图处理</h3><p>将需要上传的图片放入 <code>gallery/相册名/img</code> 文件夹中，为了加载速度建议压缩至 <code>1mb</code> 以下，使用 <code>jpg</code> 格式保存；<br>除了文件大小以外没有其它要求，但是为了方便后续页面编辑，建议将文件以容易辨识的方式重命名，例如<code>日期-图片名.jpg</code>。</p><p>ps：可以写一个python的gui来搭配使用</p><p><a href="https://tding.top/archives/607c3b85.html">https://tding.top/archives/607c3b85.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;相册期待实现效果&lt;br&gt;对于相册，在自己 基于Hexo NexT搭建 的博客上期待实现与豆瓣相册类似的效果，具体如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主界面&lt;ul&gt;
&lt;li&gt;分类相册&lt;/li&gt;
&lt;li&gt;自定义相册名&lt;/li&gt;
&lt;li&gt;自定义封面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分类相册界面&lt;ul&gt;
&lt;li&gt;三等分列&lt;/li&gt;
&lt;li&gt;点击看大图&lt;/li&gt;
&lt;li&gt;本地图片源/图床外链均可&lt;/li&gt;
&lt;li&gt;与文章插图格式保持统一&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他&lt;ul&gt;
&lt;li&gt;每张图片都可以有对应的文字描述&lt;/li&gt;
&lt;li&gt;游客可以为图片添加评论&lt;/li&gt;
&lt;li&gt;相册里面也可以插入视频&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="NexT" scheme="https://rongkangxiong.top/tags/NexT/"/>
    
    <category term="Hexo" scheme="https://rongkangxiong.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>配置博客过程中的各种问题</title>
    <link href="https://rongkangxiong.top/post/question-blog.html"/>
    <id>https://rongkangxiong.top/post/question-blog.html</id>
    <published>2021-11-11T13:53:09.000Z</published>
    <updated>2021-11-11T14:10:32.278Z</updated>
    
    <content type="html"><![CDATA[<p>配置blog过程中遇到的一些问题</p><span id="more"></span><h1 id="点击标签和分类进去发现是空白"><a href="#点击标签和分类进去发现是空白" class="headerlink" title="点击标签和分类进去发现是空白"></a>点击<code>标签</code>和<code>分类</code>进去发现是空白</h1><p>这时候需要打开主题配置文件<code>_config.yml</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:  home: &#x2F; || fa fa-home                      #首页  about: &#x2F;about&#x2F; || fa fa-user               #关于  #tags: &#x2F;tags&#x2F; || fa fa-tags                 #标签  #categories: &#x2F;categories&#x2F; || fa fa-th       #分类</code></pre><p>将<code>tags</code>和<code>categories</code>给注释取消，然后用</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new page tags</code></pre><p>打开生成的tags文件夹下的<code>index.md</code>修改里面的内容添加一行`type:</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: categoriesdate: 2021-11-10 23:11:21type: &quot;tags&quot;  #新加的---</code></pre><p>分类<code>categories</code>同理</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: categoriesdate: 2021-11-10 23:11:21type: &quot;categories&quot;---</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;配置blog过程中遇到的一些问题&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="问题" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="问题" scheme="https://rongkangxiong.top/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>addcount_number</title>
    <link href="https://rongkangxiong.top/post/addcount-number.html"/>
    <id>https://rongkangxiong.top/post/addcount-number.html</id>
    <published>2021-11-11T12:02:48.000Z</published>
    <updated>2021-11-11T13:45:37.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title></a></h2><p>Next 主题已经合并<br>在NexT主题配置文件中找到</p><pre class="line-numbers language-md" data-language="md"><code class="language-md"># Post wordcount display settings# Dependencies: https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-word-countersymbols_count_time:  symbols: true  time: true  total_symbols: true  total_time: true  exclude_codeblock: false  #允许排出代码块内所有内容，以便进行准确的单词计数  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）  item_text_total: true   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）  awl: 2                   # Average Word Length  wpm: 275                 # Words Per Minute（每分钟阅读词数）  suffix: &quot;mins.&quot;</code></pre><h1 id="busuanzi统计"><a href="#busuanzi统计" class="headerlink" title="busuanzi统计"></a>busuanzi统计</h1><p>NexT已经集成了busuanzi统计功能，只需要在主题配置文件<code>_config.yml</code>文件中将如下代码中的<br><code>enable: flase</code>改为<code>enable: true</code>即可</p><pre class="line-numbers language-njk" data-language="njk"><code class="language-njk"># Show Views &#x2F; Visitors of the website &#x2F; page with busuanzi.# For more information: http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi&#x2F;busuanzi_count:  enable: true  total_visitors: true  total_visitors_icon: fa fa-user  total_views: true  total_views_icon: fa fa-eye  post_views: true  post_views_icon: far fa-eye</code></pre><p>然后</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo cleanhexo ghexo d</code></pre><p>输入密码部署上去可能要等待十分钟左右就可以显示了</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Next 主题已经合并&lt;br&gt;在NexT主题配置文件中找到&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;# Post wordcount display settings
# Dependencies: https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;next-theme&amp;#x2F;hexo-word-counter
symbols_count_time:
  symbols: true
  time: true
  total_symbols: true
  total_time: true
  exclude_codeblock: false  #允许排出代码块内所有内容，以便进行准确的单词计数
  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）
  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）
  item_text_total: true   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）
  awl: 2                   # Average Word Length
  wpm: 275                 # Words Per Minute（每分钟阅读词数）
  suffix: &amp;quot;mins.&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;busuanzi统计&quot;&gt;&lt;a href=&quot;#busuanzi统计&quot; class=&quot;headerlink&quot; title=&quot;busuanzi统计&quot;&gt;&lt;/a&gt;busuanzi统计&lt;/h1&gt;&lt;p&gt;NexT已经集成了busuanzi统计功能，只需要在主题配置文件&lt;code&gt;_config.yml&lt;/code&gt;文件中将如下代码中的&lt;br&gt;&lt;code&gt;enable: flase&lt;/code&gt;改为&lt;code&gt;enable: true&lt;/code&gt;即可&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-njk&quot; data-language=&quot;njk&quot;&gt;&lt;code class=&quot;language-njk&quot;&gt;# Show Views &amp;#x2F; Visitors of the website &amp;#x2F; page with busuanzi.
# For more information: http:&amp;#x2F;&amp;#x2F;ibruce.info&amp;#x2F;2015&amp;#x2F;04&amp;#x2F;04&amp;#x2F;busuanzi&amp;#x2F;
busuanzi_count:
  enable: true
  total_visitors: true
  total_visitors_icon: fa fa-user
  total_views: true
  total_views_icon: fa fa-eye
  post_views: true
  post_views_icon: far fa-eye&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;hexo clean
hexo g
hexo d&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输入密码部署上去可能要等待十分钟左右就可以显示了&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://rongkangxiong.top/tags/hexo/"/>
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="访客统计" scheme="https://rongkangxiong.top/tags/%E8%AE%BF%E5%AE%A2%E7%BB%9F%E8%AE%A1/"/>
    
    <category term="阅读统计" scheme="https://rongkangxiong.top/tags/%E9%98%85%E8%AF%BB%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>如何用Markdown书写博客</title>
    <link href="https://rongkangxiong.top/post/writeblog.html"/>
    <id>https://rongkangxiong.top/post/writeblog.html</id>
    <published>2021-11-11T09:08:25.000Z</published>
    <updated>2021-11-12T14:06:32.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h1><p><code>git</code> 中进入根目录输入 <code>hexo new &lt;模板&gt; &lt;文章名&gt;</code> 新建文章<br>其中<code>&lt;模板&gt;</code>在<code>source</code>文件夹下面，默认有三个模板 <code>post</code>,<code>draft</code>,<code>page</code></p><p>命令行输入</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new post aiticle_title</code></pre><p>此时会在 <code>source/_posts/</code> 文件夹中多了一个 <code>aiticle_title.md</code> 文件<br>打开后可以看到 <code>---</code>之间的内容为文章的配置内容</p><p>模板配置文件可以在<code>/scaffolds/post.md</code>修改<code>post.md</code>模板</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: &#123;&#123; title &#125;&#125;author: 爱养虫的小熊date: &#123;&#123; date &#125;&#125;tags: []categories:    - [个人博客,Hexo]top: 1feature: truemathjx: true  #是否开启数学公式支持comment: true---</code></pre><h1 id="如何插入图片"><a href="#如何插入图片" class="headerlink" title="如何插入图片"></a>如何插入图片</h1><p>HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用</p><p>Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片</p><p>在<code>source</code>中新建一个<code>images</code>目录用于存放图片，将图片放在该目录下，示例:</p><p>例1. 如在<code>myblog/source/images/notecover/Firstblog.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![](images&#x2F;notecover&#x2F;..&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)或者![](images&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><p>如果使用格式</p><h3 id="网页端看不到的格式-VScode能看到"><a href="#网页端看不到的格式-VScode能看到" class="headerlink" title="网页端看不到的格式|VScode能看到"></a>网页端看不到的格式|VScode能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)![ceshi](&#x2F;source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><h3 id="VsCode看不到的格式-网页端能看到"><a href="#VsCode看不到的格式-网页端能看到" class="headerlink" title="VsCode看不到的格式|网页端能看到"></a>VsCode看不到的格式|网页端能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><h3 id="网页端和VsCode都看不到的格式"><a href="#网页端和VsCode都看不到的格式" class="headerlink" title="网页端和VsCode都看不到的格式"></a>网页端和VsCode都看不到的格式</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)![ceshi](&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><p>例2.  如在<code>myblog/source/_post/Linux常用命令.md</code>文件中插入<code>myblog/source/_post/Linux常用命令/cup进程.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](_post&#x2F;Linux常用命令&#x2F;..&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><p>下面的方法只能在文章<code>Linux常用命令.md</code>中插入同文件夹路径下的图片<code>Linux常用命令/tupian.png</code></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](Linux常用命令&#x2F;GUP进程.png)</code></pre><h3 id="VScode能看到的格式-网页端看不到"><a href="#VScode能看到的格式-网页端看不到" class="headerlink" title="VScode能看到的格式|网页端看不到"></a>VScode能看到的格式|网页端看不到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><h3 id="网页端能看到的格式-VScode看不到"><a href="#网页端能看到的格式-VScode看不到" class="headerlink" title="网页端能看到的格式|VScode看不到"></a>网页端能看到的格式|VScode看不到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;_post&#x2F;_Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;GUP进程.png)![ceshi](GUP进程.png)</code></pre><h3 id="网页端和VScode都不能看到"><a href="#网页端和VScode都不能看到" class="headerlink" title="网页端和VScode都不能看到"></a>网页端和VScode都不能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;_post&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><h1 id="如何插入链接"><a href="#如何插入链接" class="headerlink" title="如何插入链接"></a>如何插入链接</h1><span id="more"></span><h1 id="hexo-admin插件管理博客写作"><a href="#hexo-admin插件管理博客写作" class="headerlink" title="hexo-admin插件管理博客写作"></a>hexo-admin插件管理博客写作</h1><p>每次新建文章和写作文章都在<code>git</code>命令行中，很不方便，于是可以安装这款插件<br><a href="https://github.com/jaredly/hexo-admin">参考hexo-admin官方页面</a></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">npm install --save hexo-adminhexo ghexo sopen &lt;http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;&gt;</code></pre><p>然后浏览器输入<code>http://localhost:4000/admin/</code>进入管理界面<code>setting</code><br><img src="/post/writeblog/../writeblog/writeblog_setup.png" alt="设置"><br><img src="/post/writeblog/../writeblog/writeblog_pass.png" alt="登陆"></p><p><a href="/mynotes/math/common_dstribute.html">我的笔记</a></p><p>复制下面生成的 <code>Admin Config Section</code>内容到 <code>/blog/_config.yml</code>粘贴在最后即可<br>之后登陆需要输入账户密码</p><p>在Deploy之前，还要编辑网站配置文件<code>_config.yml</code> （否则会出现<code>Error: Config value &quot;admin.deployCommand&quot; not found</code>)报错<br>如果实在<code>Windows系统</code>，这在末尾加上</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">deployCommand:&#39;hexo-generate.bat&#39;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;创建新文章&quot;&gt;&lt;a href=&quot;#创建新文章&quot; class=&quot;headerlink&quot; title=&quot;创建新文章&quot;&gt;&lt;/a&gt;创建新文章&lt;/h1&gt;&lt;p&gt;&lt;code&gt;git&lt;/code&gt; 中进入根目录输入 &lt;code&gt;hexo new &amp;lt;模板&amp;gt; &amp;lt;文章名&amp;gt;&lt;/code&gt; 新建文章&lt;br&gt;其中&lt;code&gt;&amp;lt;模板&amp;gt;&lt;/code&gt;在&lt;code&gt;source&lt;/code&gt;文件夹下面，默认有三个模板 &lt;code&gt;post&lt;/code&gt;,&lt;code&gt;draft&lt;/code&gt;,&lt;code&gt;page&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;命令行输入&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;hexo new post aiticle_title&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时会在 &lt;code&gt;source/_posts/&lt;/code&gt; 文件夹中多了一个 &lt;code&gt;aiticle_title.md&lt;/code&gt; 文件&lt;br&gt;打开后可以看到 &lt;code&gt;---&lt;/code&gt;之间的内容为文章的配置内容&lt;/p&gt;
&lt;p&gt;模板配置文件可以在&lt;code&gt;/scaffolds/post.md&lt;/code&gt;修改&lt;code&gt;post.md&lt;/code&gt;模板&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;---
title: &amp;#123;&amp;#123; title &amp;#125;&amp;#125;
author: 爱养虫的小熊
date: &amp;#123;&amp;#123; date &amp;#125;&amp;#125;
tags: []
categories:
    - [个人博客,Hexo]
top: 1
feature: true
mathjx: true  #是否开启数学公式支持
comment: true
---&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;如何插入图片&quot;&gt;&lt;a href=&quot;#如何插入图片&quot; class=&quot;headerlink&quot; title=&quot;如何插入图片&quot;&gt;&lt;/a&gt;如何插入图片&lt;/h1&gt;&lt;p&gt;HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用&lt;/p&gt;
&lt;p&gt;Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;source&lt;/code&gt;中新建一个&lt;code&gt;images&lt;/code&gt;目录用于存放图片，将图片放在该目录下，示例:&lt;/p&gt;
&lt;p&gt;例1. 如在&lt;code&gt;myblog/source/images/notecover/Firstblog.png&lt;/code&gt;的这张图片想引用的时候VScode和网页都能看到要用如下格式&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![](images&amp;#x2F;notecover&amp;#x2F;..&amp;#x2F;..&amp;#x2F;..&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
或者
![](images&amp;#x2F;..&amp;#x2F;..&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果使用格式&lt;/p&gt;
&lt;h3 id=&quot;网页端看不到的格式-VScode能看到&quot;&gt;&lt;a href=&quot;#网页端看不到的格式-VScode能看到&quot; class=&quot;headerlink&quot; title=&quot;网页端看不到的格式|VScode能看到&quot;&gt;&lt;/a&gt;网页端看不到的格式|VScode能看到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
![ceshi](&amp;#x2F;source&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;VsCode看不到的格式-网页端能看到&quot;&gt;&lt;a href=&quot;#VsCode看不到的格式-网页端能看到&quot; class=&quot;headerlink&quot; title=&quot;VsCode看不到的格式|网页端能看到&quot;&gt;&lt;/a&gt;VsCode看不到的格式|网页端能看到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;网页端和VsCode都看不到的格式&quot;&gt;&lt;a href=&quot;#网页端和VsCode都看不到的格式&quot; class=&quot;headerlink&quot; title=&quot;网页端和VsCode都看不到的格式&quot;&gt;&lt;/a&gt;网页端和VsCode都看不到的格式&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](source&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
![ceshi](&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例2.  如在&lt;code&gt;myblog/source/_post/Linux常用命令.md&lt;/code&gt;文件中插入&lt;code&gt;myblog/source/_post/Linux常用命令/cup进程.png&lt;/code&gt;的这张图片想引用的时候VScode和网页都能看到要用如下格式&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](_post&amp;#x2F;..&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](_post&amp;#x2F;Linux常用命令&amp;#x2F;..&amp;#x2F;..&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面的方法只能在文章&lt;code&gt;Linux常用命令.md&lt;/code&gt;中插入同文件夹路径下的图片&lt;code&gt;Linux常用命令/tupian.png&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;VScode能看到的格式-网页端看不到&quot;&gt;&lt;a href=&quot;#VScode能看到的格式-网页端看不到&quot; class=&quot;headerlink&quot; title=&quot;VScode能看到的格式|网页端看不到&quot;&gt;&lt;/a&gt;VScode能看到的格式|网页端看不到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;网页端能看到的格式-VScode看不到&quot;&gt;&lt;a href=&quot;#网页端能看到的格式-VScode看不到&quot; class=&quot;headerlink&quot; title=&quot;网页端能看到的格式|VScode看不到&quot;&gt;&lt;/a&gt;网页端能看到的格式|VScode看不到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](&amp;#x2F;_post&amp;#x2F;_Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;GUP进程.png)
![ceshi](GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;网页端和VScode都不能看到&quot;&gt;&lt;a href=&quot;#网页端和VScode都不能看到&quot; class=&quot;headerlink&quot; title=&quot;网页端和VScode都不能看到&quot;&gt;&lt;/a&gt;网页端和VScode都不能看到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](_post&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;_post&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;如何插入链接&quot;&gt;&lt;a href=&quot;#如何插入链接&quot; class=&quot;headerlink&quot; title=&quot;如何插入链接&quot;&gt;&lt;/a&gt;如何插入链接&lt;/h1&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo/"/>
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Next配置</title>
    <link href="https://rongkangxiong.top/post/config-next.html"/>
    <id>https://rongkangxiong.top/post/config-next.html</id>
    <published>2021-11-11T03:14:00.000Z</published>
    <updated>2021-11-11T08:23:04.582Z</updated>
    
    <content type="html"><![CDATA[<p><span id="begin">写在开头</span><br><a href="#end">点击跳转到文末</a></p><p><a href="https://zhuanlan.zhihu.com/p/33616481">Hexo搭建的GitHub博客之优化大全https://zhuanlan.zhihu.com/p/33616481</a><br><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373">背景动画</a></p><h1 id="新建文章时，在相同目录下创建同名文件夹（便于图片管理）"><a href="#新建文章时，在相同目录下创建同名文件夹（便于图片管理）" class="headerlink" title="新建文章时，在相同目录下创建同名文件夹（便于图片管理）"></a>新建文章时，在相同目录下创建同名文件夹（便于图片管理）</h1><ul><li>打开站点配置文件_config.yml，搜索post_asset_folder字段，设置其值为true</li><li>安装hexo-asset-image：npm install hexo-asset-image –save</li><li>此时hexo new “fileName”会在/source/_posts目录下创建同名的文件夹</li><li>只需在 md 文件里使用</li></ul><pre class="line-numbers language-md" data-language="md"><code class="language-md">![title](图片名.jpg)</code></pre><p>  无需路径名就可以插入图片。<br>ps: 发现这样就不能启用创建文件自动打开编辑器功能<br>自己创建文件夹即可</p><span id="more"></span><h1 id="启用预览功能"><a href="#启用预览功能" class="headerlink" title="启用预览功能"></a>启用预览功能</h1><p>直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能显示</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;!--more--&gt;</code></pre><h1 id="文章内部锚点跳转"><a href="#文章内部锚点跳转" class="headerlink" title="文章内部锚点跳转"></a>文章内部锚点跳转</h1><p>这个方式是由John Tsai给出的，分成两步：</p><ol><li>定义一个锚(id)：</li></ol><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;span id&#x3D;&quot;jump&quot;&gt;跳转到的地方&lt;&#x2F;span&gt;</code></pre><ol start="2"><li>使用markdown语法：</li></ol><pre class="line-numbers language-md" data-language="md"><code class="language-md">[点击跳转](#jump)</code></pre><h1 id="自己写的文章的跳转"><a href="#自己写的文章的跳转" class="headerlink" title="自己写的文章的跳转"></a>自己写的文章的跳转</h1><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](&#x2F;forder-to-you-file)</code></pre><p>在 /mynotes/math 下的 common_dstribute.md文件可以通过一下代码实现跳转<br><a href="/mynotes/math/common_dstribute.html">常用概率分布</a></p><p><a href="/mynotes/index.html">mynotes</a></p><p>在 /mynotes/ 下的 index.md文件可以通过跳转</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[mynotes](&#x2F;mynotes&#x2F;index.html)</code></pre><p><a href="introduction.html">Introduction</a><br>在/source/_post/ 文件夹下面(和本文件同文件夹)的introduction.md的文件可以通过来跳转</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[Introduction](introduction.html) </code></pre><h1 id="站点文章置顶"><a href="#站点文章置顶" class="headerlink" title="站点文章置顶"></a>站点文章置顶</h1><p>打开Myblog站点下node_modules/hexo-generator-index/lib/generator.js文件。代码全部替换为</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#39;use strict&#39;;var pagination &#x3D; require(&#39;hexo-pagination&#39;);module.exports &#x3D; function(locals)&#123;  var config &#x3D; this.config;  var posts &#x3D; locals.posts;    posts.data &#x3D; posts.data.sort(function(a, b) &#123;        if(a.top &amp;&amp; b.top) &#123; &#x2F;&#x2F; 两篇文章top都有定义            if(a.top &#x3D;&#x3D; b.top) return b.date - a.date; &#x2F;&#x2F; 若top值一样则按照文章日期降序排            else return b.top - a.top; &#x2F;&#x2F; 否则按照top值降序排        &#125;        else if(a.top &amp;&amp; !b.top) &#123; &#x2F;&#x2F; 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）            return -1;        &#125;        else if(!a.top &amp;&amp; b.top) &#123;            return 1;        &#125;        else return b.date - a.date; &#x2F;&#x2F; 都没定义按照文章日期降序排    &#125;);  var paginationDir &#x3D; config.pagination_dir || &#39;page&#39;;  return pagination(&#39;&#39;, posts, &#123;    perPage: config.index_generator.per_page,    layout: [&#39;index&#39;, &#39;archive&#39;],    format: paginationDir + &#39;&#x2F;%d&#x2F;&#39;,    data: &#123;      __index: true    &#125;  &#125;);&#125;;</code></pre><ul><li>打开文章添加top字段,设置数值，数值越大文章越靠前</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">---layout: layouttitle: 标签1date: 2017-08-18 15:41:18tags: 标签1top: 100---</code></pre><p><a href="https://www.jianshu.com/p/d23d67d318c7">参考链接https://www.jianshu.com/p/d23d67d318c7</a></p><h1 id="Hexo博客NexT主题下添加字数统计和阅读时长"><a href="#Hexo博客NexT主题下添加字数统计和阅读时长" class="headerlink" title="Hexo博客NexT主题下添加字数统计和阅读时长"></a>Hexo博客NexT主题下添加字数统计和阅读时长</h1><ul><li><p>安装hexo-symbols-count-time</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">npm install hexo-symbols-count-time --save</code></pre></li><li><p>如果安装完报如下提醒，还需安装eslint</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">npm install eslint --save</code></pre></li><li><p>站点/_config.yml配置</p></li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">symbols_count_time:  symbols: true                # 文章字数统计  time: true                   # 文章阅读时长  total_symbols: true          # 站点总字数统计  total_time: true             # 站点总阅读时长  exclude_codeblock: false     # 排除代码字数统计</code></pre><ul><li>Next主题文件 <strong>themes/next/_config.yml</strong></li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># Post wordcount display settings# Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-timesymbols_count_time:  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）  item_text_total: false   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）  awl: 4                   # Average Word Length  wpm: 275                 # Words Per Minute（每分钟阅读词数）  suffix: mins.</code></pre><p><a href="https://github.com/RongkangXiong/hexo-symbols-count-time">参考链接https://github.com/RongkangXiong/hexo-symbols-count-time</a></p><h1 id="Hexo博客NexT主题下代码块复制功能"><a href="#Hexo博客NexT主题下代码块复制功能" class="headerlink" title="Hexo博客NexT主题下代码块复制功能"></a>Hexo博客NexT主题下代码块复制功能</h1><p>为了提高博客代码块的用户体验，仅仅代码高亮还不行，最好还能一键复制代码。故此文将讲述Hexo NexT主题博客的代码块复制功能配置。</p><ul><li>在themes/next/layout/_third-party/下新建文件copy-code.swig，写入下面的内容：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#123;% if theme.codeblock.copy_button.enable %&#125;  &lt;style&gt;    .copy-btn &#123;      display: inline-block;      padding: 6px 12px;      font-size: 13px;      font-weight: 700;      line-height: 20px;      color: #333;      white-space: nowrap;      vertical-align: middle;      cursor: pointer;      background-color: #eee;      background-image: linear-gradient(#fcfcfc, #eee);      border: 1px solid #d5d5d5;      border-radius: 3px;      user-select: none;      outline: 0;    &#125;    .highlight-wrap .copy-btn &#123;      transition: opacity .3s ease-in-out;      opacity: 0;      padding: 2px 6px;      position: absolute;      right: 4px;      top: 8px;    &#125;    .highlight-wrap:hover .copy-btn,    .highlight-wrap .copy-btn:focus &#123;      opacity: 1    &#125;    .highlight-wrap &#123;      position: relative;    &#125;  &lt;&#x2F;style&gt;    &lt;script&gt;    $(&#39;.highlight&#39;).each(function (i, e) &#123;      var $wrap &#x3D; $(&#39;&lt;div&gt;&#39;).addClass(&#39;highlight-wrap&#39;)      $(e).after($wrap)      $wrap.append($(&#39;&lt;button&gt;&#39;).addClass(&#39;copy-btn&#39;).append(&#39;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#39;).on(&#39;click&#39;, function (e) &#123;        var code &#x3D; $(this).parent().find(&#39;.code&#39;).find(&#39;.line&#39;).map(function (i, e) &#123;          return $(e).text()        &#125;).toArray().join(&#39;\n&#39;)        var ta &#x3D; document.createElement(&#39;textarea&#39;)        document.body.appendChild(ta)        ta.style.position &#x3D; &#39;absolute&#39;        ta.style.top &#x3D; &#39;0px&#39;        ta.style.left &#x3D; &#39;0px&#39;        ta.value &#x3D; code        ta.select()        ta.focus()        var result &#x3D; document.execCommand(&#39;copy&#39;)        document.body.removeChild(ta)        &#123;% if theme.codeblock.copy_button.show_result %&#125;          if(result)$(this).text(&#39;&#123;&#123;__(&quot;post.copy_success&quot;)&#125;&#125;&#39;)          else $(this).text(&#39;&#123;&#123;__(&quot;post.copy_failure&quot;)&#125;&#125;&#39;)        &#123;% endif %&#125;        $(this).blur()      &#125;)).on(&#39;mouseleave&#39;, function (e) &#123;        var $b &#x3D; $(this).find(&#39;.copy-btn&#39;)        setTimeout(function () &#123;          $b.text(&#39;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#39;)        &#125;, 300)      &#125;).append(e)    &#125;)  &lt;&#x2F;script&gt;&#123;% endif %&#125;</code></pre><ul><li><p>编辑themes/next/layout/_layout.njk文件，在文件末尾</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;- next_inject(&#39;bodyEnd&#39;) &#125;&#125;</code></pre></li></ul><p>前面对齐添加一行代码：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#123;% include &#39;_third-party&#x2F;copy-code.swig&#39; -%&#125;</code></pre><ul><li>添加按钮上显示的语言 在themes/next/languages/zh-CN.yml文件的post板块中添加下列代码：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">copy_button: 复制copy_success: 复制成功copy_failure: 复制失败</code></pre><ul><li>在主题配置文件themes/next/_config.yml中添加开关<br>搜索codeblock</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">codeblock:  border_radius:  copy_button:    enable: true    # Show text copy result    show_result: true</code></pre><p>重新生成</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">hexo clean &amp; hexo g</code></pre><p><a href="https://blog.csdn.net/Awt_FuDongLai/article/details/107466848">参考链接https://blog.csdn.net/Awt_FuDongLai/article/details/107466848</a></p><h1 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h1><ul><li>安装插件</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">npm install hexo-generator-search</code></pre><ul><li>查找主题配置文件themes/next/_config.yml中的local_search ：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">local_search:  enable: true  # If auto, trigger search by changing input.  # If manual, trigger search by pressing enter key or search button.  trigger: manual  #手动，按回车键或搜索按钮触发搜索  # Show top n results per article, show all results by setting to -1  top_n_per_article: 1  # Unescape html strings to the readable one.  unescape: false  # Preload the search data when the page loads.  preload: false</code></pre><h1 id="Hexo添加文章时自动打开编辑器"><a href="#Hexo添加文章时自动打开编辑器" class="headerlink" title="Hexo添加文章时自动打开编辑器"></a>Hexo添加文章时自动打开编辑器</h1><ul><li>首先在Hexo目录下的scripts目录中创建一个JavaScript脚本文件(name.js)</li><li>如果没有这个scripts目录，则新建一个scripts目录</li><li>新建的JavaScript脚本文件可以任意取名<br>通过这个脚本，我们用其来监听hexo new这个动作，并在检测到hexo new之后，执行编辑器打开的命令</li><li>如果你是windows平台的Hexo用户，则将下列内容写入你的脚本：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">var spawn &#x3D; require(&#39;child_process&#39;).exec;hexo.on(&#39;new&#39;, function(data)&#123;  spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39; + data.path);&#125;);</code></pre><ul><li>如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">var exec &#x3D; require(&#39;child_process&#39;).exec;hexo.on(&#39;new&#39;, function(data)&#123;    exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39; + data.path);&#125;);</code></pre><p><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373">参考链接https://blog.csdn.net/weixin_39345384/article/details/80785373</a></p><h1 id="多台电脑Hexo写作Blog同步"><a href="#多台电脑Hexo写作Blog同步" class="headerlink" title="多台电脑Hexo写作Blog同步"></a>多台电脑Hexo写作Blog同步</h1><p>新建一个分支。通过在GitHub上新建一个分支，来保存本地的原始文件，另一个分支来保存hexo生成的静态网页。这里详细介绍以下步骤。</p><h2 id="在原始电脑上"><a href="#在原始电脑上" class="headerlink" title="在原始电脑上"></a>在原始电脑上</h2><p>新建一个分支hexo，设置为默认分支，保存本地原始文件<br>在</p><h1 id="点击侧栏头像回到首页"><a href="#点击侧栏头像回到首页" class="headerlink" title="点击侧栏头像回到首页"></a>点击侧栏头像回到首页</h1><p><span id="end">文末</span></p><p><a href="#begin">点击跳转到开头</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span id=&quot;begin&quot;&gt;写在开头&lt;/span&gt;&lt;br&gt;&lt;a href=&quot;#end&quot;&gt;点击跳转到文末&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33616481&quot;&gt;Hexo搭建的GitHub博客之优化大全https://zhuanlan.zhihu.com/p/33616481&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_39345384/article/details/80785373&quot;&gt;背景动画&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;新建文章时，在相同目录下创建同名文件夹（便于图片管理）&quot;&gt;&lt;a href=&quot;#新建文章时，在相同目录下创建同名文件夹（便于图片管理）&quot; class=&quot;headerlink&quot; title=&quot;新建文章时，在相同目录下创建同名文件夹（便于图片管理）&quot;&gt;&lt;/a&gt;新建文章时，在相同目录下创建同名文件夹（便于图片管理）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;打开站点配置文件_config.yml，搜索post_asset_folder字段，设置其值为true&lt;/li&gt;
&lt;li&gt;安装hexo-asset-image：npm install hexo-asset-image –save&lt;/li&gt;
&lt;li&gt;此时hexo new “fileName”会在/source/_posts目录下创建同名的文件夹&lt;/li&gt;
&lt;li&gt;只需在 md 文件里使用&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![title](图片名.jpg)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  无需路径名就可以插入图片。&lt;br&gt;ps: 发现这样就不能启用创建文件自动打开编辑器功能&lt;br&gt;自己创建文件夹即可&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="https://rongkangxiong.top/categories/Hexo/"/>
    
    <category term="NexT" scheme="https://rongkangxiong.top/categories/Hexo/NexT/"/>
    
    
    <category term="hexo" scheme="https://rongkangxiong.top/tags/hexo/"/>
    
    <category term="next" scheme="https://rongkangxiong.top/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>newmenu</title>
    <link href="https://rongkangxiong.top/post/newmenu.html"/>
    <id>https://rongkangxiong.top/post/newmenu.html</id>
    <published>2021-11-10T17:58:21.000Z</published>
    <updated>2021-11-11T13:46:06.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为Hexo的Next主题增加自定义menu菜单"><a href="#为Hexo的Next主题增加自定义menu菜单" class="headerlink" title="为Hexo的Next主题增加自定义menu菜单"></a>为Hexo的Next主题增加自定义menu菜单</h1><p>现在Hexo使用的主题当中，Next主题是比较流行的，查看Next主题的_config.yml，其中有8个默认定义的menu菜单，分别是home、about、tags、categories、archives、schedule、sitemap、commonweal 。通过参考tags、categories两个菜单，可以实现菜单的定制化。</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:  home: &#x2F; || fa fa-home                      #首页  about: &#x2F;about&#x2F; || fa fa-user               #关于  tags: &#x2F;tags&#x2F; || fa fa-tags                 #标签  categories: &#x2F;categories&#x2F; || fa fa-th       #分类  read: &#x2F;categories&#x2F;read || fa fa-book       #读书  archives: &#x2F;archives&#x2F; || fa fa-archive      #归档  mynotes: &#x2F;mynotes&#x2F; || fa fa-sticky-note    #我的笔记  #schedule: &#x2F;schedule&#x2F; || fa fa-calendar    #日历  sitemap: &#x2F;sitemap.xml || fa fa-sitemap     #站点地图，供搜索引擎爬取  #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat      #腾讯公益404  # &quot;||&quot; 前面是目标链接，后面是图标名称，图标库http:&#x2F;&#x2F;www.fontawesome.com.cn&#x2F;faicons&#x2F;#web-application</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;为Hexo的Next主题增加自定义menu菜单&quot;&gt;&lt;a href=&quot;#为Hexo的Next主题增加自定义menu菜单&quot; class=&quot;headerlink&quot; title=&quot;为Hexo的Next主题增加自定义menu菜单&quot;&gt;&lt;/a&gt;为Hexo的Next主题增加自定义</summary>
      
    
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="菜单" scheme="https://rongkangxiong.top/tags/%E8%8F%9C%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>个人博客图床资源获取</title>
    <link href="https://rongkangxiong.top/post/materialsite.html"/>
    <id>https://rongkangxiong.top/post/materialsite.html</id>
    <published>2021-11-10T04:31:49.000Z</published>
    <updated>2021-11-10T05:19:31.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图床&quot;&gt;&lt;a href=&quot;#图床&quot; class=&quot;headerlink&quot; title=&quot;图床&quot;&gt;&lt;/a&gt;图床&lt;/h1&gt;</summary>
      
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="资源" scheme="https://rongkangxiong.top/tags/%E8%B5%84%E6%BA%90/"/>
    
    <category term="图片" scheme="https://rongkangxiong.top/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Introduction</title>
    <link href="https://rongkangxiong.top/post/introduction.html"/>
    <id>https://rongkangxiong.top/post/introduction.html</id>
    <published>2021-11-10T03:14:00.000Z</published>
    <updated>2021-11-10T17:24:20.804Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相遇即是缘分"><a href="#相遇即是缘分" class="headerlink" title="相遇即是缘分"></a>相遇即是缘分</h1><p>博客初建，入站须知<br>欢迎来到我的世界，这是我的个人博客<br>本博客是基于Hexo框架搭建，采用hexo-theme-next主题并加以改进<br>后期也会不定时增加新的功能，敬请期待！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;相遇即是缘分&quot;&gt;&lt;a href=&quot;#相遇即是缘分&quot; class=&quot;headerlink&quot; title=&quot;相遇即是缘分&quot;&gt;&lt;/a&gt;相遇即是缘分&lt;/h1&gt;&lt;p&gt;博客初建，入站须知&lt;br&gt;欢迎来到我的世界，这是我的个人博客&lt;br&gt;本博客是基于Hexo框架搭建，采用hex</summary>
      
    
    
    
    <category term="入站须知" scheme="https://rongkangxiong.top/categories/%E5%85%A5%E7%AB%99%E9%A1%BB%E7%9F%A5/"/>
    
    
    <category term="入站须知" scheme="https://rongkangxiong.top/tags/%E5%85%A5%E7%AB%99%E9%A1%BB%E7%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>First Blog-制作个人博客</title>
    <link href="https://rongkangxiong.top/post/Firstblog.html"/>
    <id>https://rongkangxiong.top/post/Firstblog.html</id>
    <published>2021-11-09T15:02:32.000Z</published>
    <updated>2021-11-11T09:25:28.386Z</updated>
    
    <content type="html"><![CDATA[<p>自己购买域名和服务器，搭建博客的成本比较高，光是搭建和维护，就对大多数人来说，没有这样的精力和时间。<br>直接在github平台上托管我们的博客，就可以安心写作，而不需要定期维护。</p><h1 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h1><p>Hexo是一款基于Node.js的静态博客框架，依赖少，易于安装使用，可以方便生成静态网页托管在GitHub或者Coding上。</p><h1 id="HEXO搭建步骤"><a href="#HEXO搭建步骤" class="headerlink" title="HEXO搭建步骤"></a>HEXO搭建步骤</h1><ol><li>安装<a href="https://git-scm.com/download/win">git</a></li><li>安装<a href="https://nodejs.org/en/download/">Node.js</a>，选择LTS版本就行</li><li>安装Hexo</li><li>Github建立个人仓库</li><li>生成SSH添加到GitHub</li><li>将Hexo部署到GitHub</li><li>设置个人域名</li><li>发布文章</li></ol><span id="more"></span><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><h3 id="Windows检查安装是否成功"><a href="#Windows检查安装是否成功" class="headerlink" title="Windows检查安装是否成功"></a>Windows检查安装是否成功</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">node -vnpm -v</code></pre><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下(或者在这个文件夹下直接右键git bash打开)</p><h3 id="开始安装Hexo"><a href="#开始安装Hexo" class="headerlink" title="开始安装Hexo"></a>开始安装Hexo</h3><p>输入命令</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g hexo-cli</code></pre><p>你会发现出现</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">changed 57 packages in 6s1 package is looking for funding  run &#96;npm fund&#96; for details</code></pre><p>这不是报错，只是开发者寻求捐赠支持<br>翻译：1个包正在寻找资金，运行<font color="red"> npm fund</font>了解详细信息</p><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo init myblog</code></pre><h4 id="当下载很慢的时候可以更换源"><a href="#当下载很慢的时候可以更换源" class="headerlink" title="当下载很慢的时候可以更换源"></a>当下载很慢的时候可以更换源</h4><ul><li><p>淘宝npm镜像</p>  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npmmirror.com</code></pre></li><li><p>阿里源</p>  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config set registry https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config list</code></pre></li><li><p>输入代码检查换源是否成功过</p>  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm config list</code></pre></li></ul><p>然后</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">cd myblog &#x2F;&#x2F;进入这个myblog文件夹npm installhexo g</code></pre><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public: 存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li><strong>_config.yml: 博客的配置文件</strong></li></ul><p>继续输入</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo ghexo server</code></pre><p>打开hexo的服务，在浏览器输入<a href="localhost:4000">localhost:4000</a>就可以在本地看到你生成的博客</p><h3 id="修改配置文件-config-yml"><a href="#修改配置文件-config-yml" class="headerlink" title="修改配置文件 _config.yml"></a>修改配置文件 <strong>_config.yml</strong></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">deploy:    type: git    repo: https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io.git    branch: main</code></pre><p>注意空格还有对齐</p><h3 id="安装deploy-git"><a href="#安装deploy-git" class="headerlink" title="安装deploy-git"></a>安装deploy-git</h3><p>也就是部署的命令,这样你才能用命令部署到GitHub</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install hexo-deployer-git --save</code></pre><p>然后确认是否连接成功</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">ssh -T git@github.com</code></pre><p>会出现让你确认密码</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo cleanhexo generatehexo deploy</code></pre><p>其中<strong>hexo clean</strong>清除了你之前生成的东西，也可以不加。<br><strong>hexo generate</strong> 顾名思义，生成静态文章，可以用<strong>hexo g</strong>缩写<br><strong>hexo deploy</strong> 部署文章，可以用<strong>hexo d</strong>缩写</p><p>出现一下信息表示部署成功</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">Branch &#39;master&#39; set up to track remote branch &#39;main&#39; from &#39;https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io&#39;.INFO  Deploy done: git</code></pre><p>过一会儿就可以在 <a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054"><a href="#出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="出现 OpenSSL SSL_read: Connection was reset, errno 10054"></a>出现 <em><strong>OpenSSL SSL_read: Connection was reset, errno 10054</strong></em></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">    git config --global http.sslVerify &quot;false&quot;&#96;&#96;&#96;自己购买域名和服务器，搭建博客的成本比较高，光是搭建和维护，就对大多数人来说，没有这样的精力和时间。直接在github平台上托管我们的博客，就可以安心写作，而不需要定期维护。# Hexo简介Hexo是一款基于Node.js的静态博客框架，依赖少，易于安装使用，可以方便生成静态网页托管在GitHub或者Coding上。# HEXO搭建步骤1. 安装[git](https:&#x2F;&#x2F;git-scm.com&#x2F;download&#x2F;win)2. 安装[Node.js](https:&#x2F;&#x2F;nodejs.org&#x2F;en&#x2F;download&#x2F;)，选择LTS版本就行3. 安装Hexo4. Github建立个人仓库5. 生成SSH添加到GitHub6. 将Hexo部署到GitHub7. 设置个人域名8. 发布文章# 安装hexo### Windows检查安装是否成功&#96;&#96;&#96;gitnode -vnpm -v</code></pre><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下(或者在这个文件夹下直接右键git bash打开)</p><h3 id="开始安装Hexo-1"><a href="#开始安装Hexo-1" class="headerlink" title="开始安装Hexo"></a>开始安装Hexo</h3><p>输入命令</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g hexo-cli</code></pre><p>你会发现出现</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">changed 57 packages in 6s1 package is looking for funding  run &#96;npm fund&#96; for details</code></pre><p>这不是报错，只是开发者寻求捐赠支持<br>翻译：1个包正在寻找资金，运行<font color="red"> npm fund</font>了解详细信息</p><h3 id="初始化Hexo-1"><a href="#初始化Hexo-1" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo init myblog</code></pre><h4 id="当下载很慢的时候可以更换源-1"><a href="#当下载很慢的时候可以更换源-1" class="headerlink" title="当下载很慢的时候可以更换源"></a>当下载很慢的时候可以更换源</h4><ul><li><p>淘宝npm镜像</p>  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npmmirror.com</code></pre></li><li><p>阿里源</p>  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config set registry https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config list</code></pre></li><li><p>输入代码检查换源是否成功过</p>  <pre class="line-numbers language-git" data-language="git"><code class="language-git">npm config list</code></pre></li></ul><p>然后</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">cd myblog &#x2F;&#x2F;进入这个myblog文件夹npm installhexo g</code></pre><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public: 存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li><strong>_config.yml: 博客的配置文件</strong></li></ul><p>继续输入</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo ghexo server</code></pre><p>打开hexo的服务，在浏览器输入<a href="localhost:4000">localhost:4000</a>就可以在本地看到你生成的博客</p><h3 id="修改配置文件-config-yml-1"><a href="#修改配置文件-config-yml-1" class="headerlink" title="修改配置文件 _config.yml"></a>修改配置文件 <strong>_config.yml</strong></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">deploy:    type: git    repo: https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io.git    branch: main</code></pre><p>这里 repo内容可以换为：</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">git@github.com:RongkangXiong&#x2F;RongkangXiong.github.io.git</code></pre><p>从而避免每次都要输入密码</p><p>注意空格还有对齐</p><h3 id="安装deploy-git-1"><a href="#安装deploy-git-1" class="headerlink" title="安装deploy-git"></a>安装deploy-git</h3><p>也就是部署的命令,这样你才能用命令部署到GitHub</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install hexo-deployer-git --save</code></pre><p>然后确认是否连接成功</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">ssh -T git@github.com</code></pre><p>会出现让你确认密码</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo cleanhexo generatehexo deploy</code></pre><p>其中<strong>hexo clean</strong>清除了你之前生成的东西，也可以不加。<br><strong>hexo generate</strong> 顾名思义，生成静态文章，可以用<strong>hexo g</strong>缩写<br><strong>hexo deploy</strong> 部署文章，可以用<strong>hexo d</strong>缩写</p><p>快速代码为:</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo clean &amp; hexo g &amp; hexo d</code></pre><p>出现一下信息表示部署成功</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">Branch &#39;master&#39; set up to track remote branch &#39;main&#39; from &#39;https:&#x2F;&#x2F;github.com&#x2F;RongkangXiong&#x2F;RongkangXiong.github.io&#39;.INFO  Deploy done: git</code></pre><p>过一会儿就可以在 <a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了</p><h2 id="hexo基本配置"><a href="#hexo基本配置" class="headerlink" title="hexo基本配置"></a>hexo基本配置</h2><p>在文件根目录下的 <em>_config.yml</em>，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。</p><h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><p>| 参数 | 描述 |  作用<br>| - | :-: | -: | -: |<br>| title | 网站标题 | |<br>|subtitle|网站副标题| |<br>|description| 网站描述| 主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词 |<br>|author |您的名字| 显示文章的作者 |<br>|language |网站使用的语言| |<br>|timezone |网站时区Hexo，比如说：America/New_York, Japan和 UTC| 默认使用您电脑的时区 |</p><h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><p>| 参数 | 描述 | 操作 |<br>| - | :-: | :-: | :-: |<br>|url|网址| url改成你的网站域名|<br>|root|网站根目录| |<br>|permalink |文章的 永久链接 格式| 生成某个文章时候的链接格式，官方给出的<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接变量</a>很多 |<br>|permalink_defaults |永久链接中各部分的默认值|</p><h3 id="运行Hexo服务器"><a href="#运行Hexo服务器" class="headerlink" title="运行Hexo服务器"></a>运行Hexo服务器</h3><p>在127.0.0.1::8080 上启动服务器</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo server -i 127.0.0.1 -p 8080</code></pre><h2 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h2><h3 id="出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054-1"><a href="#出现-OpenSSL-SSL-read-Connection-was-reset-errno-10054-1" class="headerlink" title="出现 OpenSSL SSL_read: Connection was reset, errno 10054"></a>出现 <em><strong>OpenSSL SSL_read: Connection was reset, errno 10054</strong></em></h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">git config --global http.sslVerify &quot;false&quot;</code></pre><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>觉得默认的landscape主题不好看，那么可以在<a href="https://hexo.io/themes/">官网的主题</a>中，选择你喜欢的一个主题进行修改就可以啦</p><h2 id="Hexo主题安装教程"><a href="#Hexo主题安装教程" class="headerlink" title="Hexo主题安装教程"></a>Hexo主题安装教程</h2><p>进入<a href="https://hexo.io/themes/">官网的主题</a>，选择喜欢主题，点击链接进入github界面<br>然后复制 <strong>Code</strong> 的 <strong>HTTPS</strong> 或者 <strong>Github CLI</strong>链接</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">git clone https:&#x2F;&#x2F;github.com&#x2F;ppoffice&#x2F;hexo-theme-hueman.git themes&#x2F;hueman</code></pre><p>如果下载不了可以下载zip解压到 themes/hueman 下面<br>也可以用GitHub桌面端进行Clone</p><h3 id="安装搜索系统"><a href="#安装搜索系统" class="headerlink" title="安装搜索系统"></a>安装搜索系统</h3><h3 id="安装评论系统"><a href="#安装评论系统" class="headerlink" title="安装评论系统"></a>安装评论系统</h3><pre class="line-numbers language-git" data-language="git"><code class="language-git">npm install valine --save</code></pre><p>参考链接：</p><ul><li><a href="https://www.jianshu.com/p/ec4e678f6cef">Hexo 更换主题</a></li><li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?utm_source=wechat_session&utm_medium=social&utm_oi=1018674094685900800">hexo史上最全搭建教程</a></li><li><a href="https://aurora.tridiamond.tech/zh/">aurora主题</a></li><li><a href="https://blog.meerost.com/post/AuroraMagicChangeFirst">魔改aurora主题</a></li><li><a href="https://github.com/vuepress-aurora/vuepress-theme-aurora">vuepress-theme-aurora主题</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;自己购买域名和服务器，搭建博客的成本比较高，光是搭建和维护，就对大多数人来说，没有这样的精力和时间。&lt;br&gt;直接在github平台上托管我们的博客，就可以安心写作，而不需要定期维护。&lt;/p&gt;
&lt;h1 id=&quot;Hexo简介&quot;&gt;&lt;a href=&quot;#Hexo简介&quot; class=&quot;headerlink&quot; title=&quot;Hexo简介&quot;&gt;&lt;/a&gt;Hexo简介&lt;/h1&gt;&lt;p&gt;Hexo是一款基于Node.js的静态博客框架，依赖少，易于安装使用，可以方便生成静态网页托管在GitHub或者Coding上。&lt;/p&gt;
&lt;h1 id=&quot;HEXO搭建步骤&quot;&gt;&lt;a href=&quot;#HEXO搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;HEXO搭建步骤&quot;&gt;&lt;/a&gt;HEXO搭建步骤&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;安装&lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt;，选择LTS版本就行&lt;/li&gt;
&lt;li&gt;安装Hexo&lt;/li&gt;
&lt;li&gt;Github建立个人仓库&lt;/li&gt;
&lt;li&gt;生成SSH添加到GitHub&lt;/li&gt;
&lt;li&gt;将Hexo部署到GitHub&lt;/li&gt;
&lt;li&gt;设置个人域名&lt;/li&gt;
&lt;li&gt;发布文章&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="https://rongkangxiong.top/tags/Hexo/"/>
    
    <category term="网站" scheme="https://rongkangxiong.top/tags/%E7%BD%91%E7%AB%99/"/>
    
    <category term="Github" scheme="https://rongkangxiong.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>如何制作输出电子笔记</title>
    <link href="https://rongkangxiong.top/post/HowtoWriteNotes.html"/>
    <id>https://rongkangxiong.top/post/HowtoWriteNotes.html</id>
    <published>2021-11-09T15:02:32.000Z</published>
    <updated>2021-11-10T03:56:28.380Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How-to-Write-MyNotes"><a href="#How-to-Write-MyNotes" class="headerlink" title="How to Write MyNotes"></a>How to Write MyNotes</h1><p>通过 plantuml绘制流程图</p><h3 id="支持类型"><a href="#支持类型" class="headerlink" title="支持类型"></a>支持类型</h3><p><a href>MindMap diagram</a><br><a href>Sequence diagram</a><br><a href>Usecase diagram</a><br><a href>Class diagram</a>  </p><h3 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h3><h4 id="Python代码"><a href="#Python代码" class="headerlink" title="Python代码"></a>Python代码</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">删去&#96; &#96; &#96;之间的空格&#96; &#96; &#96;pythondef helloworld():    print(&quot;helloworld&quot;)&#96; &#96; &#96;</code></pre><p>得到效果</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">def helloworld():    print(&quot;hello world&quot;)</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;How-to-Write-MyNotes&quot;&gt;&lt;a href=&quot;#How-to-Write-MyNotes&quot; class=&quot;headerlink&quot; title=&quot;How to Write MyNotes&quot;&gt;&lt;/a&gt;How to Write MyNotes&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="个人博客制作" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%B6%E4%BD%9C/"/>
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="笔记" scheme="https://rongkangxiong.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Notes" scheme="https://rongkangxiong.top/tags/Notes/"/>
    
  </entry>
  
</feed>
