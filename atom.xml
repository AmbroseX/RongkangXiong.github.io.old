<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rongkang&#39;s Blog</title>
  
  
  <link href="https://rongkangxiong.top/atom.xml" rel="self"/>
  
  <link href="https://rongkangxiong.top/"/>
  <updated>2021-11-17T05:37:08.085Z</updated>
  <id>https://rongkangxiong.top/</id>
  
  <author>
    <name>Rongkang Xiong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Typora如何让Markdown自动显示序号</title>
    <link href="https://rongkangxiong.top/post/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7.html"/>
    <id>https://rongkangxiong.top/post/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7.html</id>
    <published>2021-11-17T03:57:52.000Z</published>
    <updated>2021-11-17T05:37:08.085Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容中编号"><a href="#内容中编号" class="headerlink" title="内容中编号"></a>内容中编号</h1><p>打开Typora外观里面的主题文件夹</p><h2 id="菜单-偏好设置-外观-打开主题文件夹"><a href="#菜单-偏好设置-外观-打开主题文件夹" class="headerlink" title="菜单-偏好设置-外观-打开主题文件夹"></a><code>菜单-偏好设置-外观-打开主题文件夹</code></h2><p><img src="../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117123309505.png" alt="image-20211117123309505"></p><h2 id="新建一个名为base-user-css的文件，写入如下代码："><a href="#新建一个名为base-user-css的文件，写入如下代码：" class="headerlink" title="新建一个名为base.user.css的文件，写入如下代码："></a>新建一个名为<code>base.user.css</code>的文件，写入如下代码：</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css">#write &#123;    counter-reset: h1&#125;h1 &#123;    counter-reset: h2&#125;h2 &#123;    counter-reset: h3&#125;h3 &#123;    counter-reset: h4&#125;h4 &#123;    counter-reset: h5&#125;h5 &#123;    counter-reset: h6&#125;#write h1:before &#123;    counter-increment: h1;    content: counter(h1) &quot; &quot;&#125;#write h2:before &#123;    counter-increment: h2;    content: counter(h1) &quot;.&quot; counter(h2) &quot; &quot;&#125;#write h3:before,h3.md-focus.md-heading:before &#123;    counter-increment: h3;    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot; &quot;&#125;#write h4:before,h4.md-focus.md-heading:before &#123;    counter-increment: h4;    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;.&quot; counter(h4) &quot; &quot;&#125;#write h5:before,h5.md-focus.md-heading:before &#123;    counter-increment: h5;    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;.&quot; counter(h4) &quot;.&quot; counter(h5) &quot; &quot;&#125;#write h6:before,h6.md-focus.md-heading:before &#123;    counter-increment: h6;    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;.&quot; counter(h4) &quot;.&quot; counter(h5) &quot;.&quot; counter(h6) &quot; &quot;&#125;#write &gt; h3.md-focus:before,#write &gt; h4.md-focus:before,#write &gt; h5.md-focus:before,#write &gt; h6.md-focus:before,h3.md-focus:before,h4.md-focus:before,h5.md-focus:before,h6.md-focus:before &#123;    color: inherit;    border: inherit;    border-radius: inherit;    position: inherit;    left: initial;    float: none;    top: initial;    font-size: inherit;    padding-left: inherit;    padding-right: inherit;    vertical-align: inherit;    font-weight: inherit;    line-height: inherit;&#125;</code></pre><p>上边部分是左边的标题栏，下面部分是正文的标题</p><p>这是没有添加前：</p><p><img src="../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117124856611.png" alt="image-20211117124856611"></p><p>添加以后：</p><p><img src="../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117124948102.png" alt="image-20211117124948102"></p><p>自动添加好序号了</p><h1 id="大纲中编号"><a href="#大纲中编号" class="headerlink" title="大纲中编号"></a>大纲中编号</h1><h2 id="添加在base-user-css中添加如下代码"><a href="#添加在base-user-css中添加如下代码" class="headerlink" title="添加在base.user.css中添加如下代码"></a>添加在<code>base.user.css</code>中添加如下代码</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css">.sidebar-content &#123;    counter-reset: h1&#125;.outline-h1 &#123;    counter-reset: h2&#125;.outline-h2 &#123;    counter-reset: h3&#125;.outline-h3 &#123;    counter-reset: h4&#125;.outline-h1&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h1;    content: counter(h1) &quot;. &quot;&#125;.outline-h2&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h2;    content: counter(h1) &quot;.&quot; counter(h2) &quot;. &quot;&#125;.outline-h3&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h3;    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;. &quot;&#125;</code></pre><p>重启Typora</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117125920057.png" alt="image-20211117125920057"></p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css">#write &#123;    counter-reset: h1&#125;h1 &#123;    counter-reset: h2&#125;h2 &#123;    counter-reset: h3&#125;h3 &#123;    counter-reset: h4&#125;h4 &#123;    counter-reset: h5&#125;h5 &#123;    counter-reset: h6&#125;#write h1:before &#123;    counter-increment: h1;    content: counter(h1) &quot;.&quot;&#125;#write h2:before &#123;    counter-increment: h2;    content: counter(h1) &quot;.&quot; counter(h2) &quot; &quot;&#125;#write h3:before,h3.md-focus.md-heading:before &#123;    counter-increment: h3;    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot; &quot;&#125;#write h4:before,h4.md-focus.md-heading:before &#123;    counter-increment: h4;    content: &quot;(&quot; counter(h4) &quot;) &quot;&#125;#write h5:before,h5.md-focus.md-heading:before &#123;    counter-increment: h5;    content: counter(h5) &quot;) &quot;&#125;.sidebar-content &#123;    counter-reset: h1&#125;.outline-h1 &#123;    counter-reset: h2&#125;.outline-h2 &#123;    counter-reset: h3&#125;.outline-h3 &#123;    counter-reset: h4&#125;.outline-h1&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h1;    content: counter(h1) &quot;. &quot;&#125;.outline-h2&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h2;    content: counter(h1) &quot;.&quot; counter(h2) &quot;. &quot;&#125;.outline-h3&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h3;    content: counter(h1) &quot;.&quot; counter(h2) &quot;.&quot; counter(h3) &quot;. &quot;&#125;.outline-h4&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h4;    content: &quot;(&quot; counter(h4) &quot;) &quot;&#125;.outline-h5&gt;.outline-item&gt;.outline-label:before &#123;    counter-increment: h5;    content: counter(h5) &quot;) &quot;&#125;#write &gt; h3.md-focus:before,#write &gt; h4.md-focus:before,#write &gt; h5.md-focus:before,#write &gt; h6.md-focus:before,h3.md-focus:before,h4.md-focus:before,h5.md-focus:before,h6.md-focus:before &#123;    color: inherit;    border: inherit;    border-radius: inherit;    position: inherit;    left: initial;    float: none;    top: initial;    font-size: inherit;    padding-left: inherit;    padding-right: inherit;    vertical-align: inherit;    font-weight: inherit;    line-height: inherit;&#125;</code></pre><h2 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a>效果图</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题###"></a>三级标题<code>###</code></h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题####"></a>四级标题<code>####</code></h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题#####"></a>五级标题<code>#####</code></h5><p><img src="../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117133645418.png" alt="image-20211117133645418"></p><p><img src="../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117133651299.png" alt="image-20211117133651299"></p><p>参考链接：</p><p>​    <a href="https://blog.csdn.net/lt6210925/article/details/109754804?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-109754804.pc_agg_new_rank&utm_term=markdown+%E5%BA%8F%E5%8F%B7&spm=1000.2123.3001.4430">[Markdown][typora]如何让markdown自动显示序号</a></p><p>​    <a href="https://blog.csdn.net/qq_50806329/article/details/112845330">Typora自动在大纲和编辑页面里显示编号</a></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;内容中编号&quot;&gt;&lt;a href=&quot;#内容中编号&quot; class=&quot;headerlink&quot; title=&quot;内容中编号&quot;&gt;&lt;/a&gt;内容中编号&lt;/h1&gt;&lt;p&gt;打开Typora外观里面的主题文件夹&lt;/p&gt;
&lt;h2 id=&quot;菜单-偏好设置-外观-打开主题文件夹&quot;&gt;&lt;a href=&quot;#菜单-偏好设置-外观-打开主题文件夹&quot; class=&quot;headerlink&quot; title=&quot;菜单-偏好设置-外观-打开主题文件夹&quot;&gt;&lt;/a&gt;&lt;code&gt;菜单-偏好设置-外观-打开主题文件夹&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117123309505.png&quot; alt=&quot;image-20211117123309505&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;新建一个名为base-user-css的文件，写入如下代码：&quot;&gt;&lt;a href=&quot;#新建一个名为base-user-css的文件，写入如下代码：&quot; class=&quot;headerlink&quot; title=&quot;新建一个名为base.user.css的文件，写入如下代码：&quot;&gt;&lt;/a&gt;新建一个名为&lt;code&gt;base.user.css&lt;/code&gt;的文件，写入如下代码：&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-css&quot; data-language=&quot;css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;#write &amp;#123;
    counter-reset: h1
&amp;#125;

h1 &amp;#123;
    counter-reset: h2
&amp;#125;

h2 &amp;#123;
    counter-reset: h3
&amp;#125;

h3 &amp;#123;
    counter-reset: h4
&amp;#125;

h4 &amp;#123;
    counter-reset: h5
&amp;#125;

h5 &amp;#123;
    counter-reset: h6
&amp;#125;

#write h1:before &amp;#123;
    counter-increment: h1;
    content: counter(h1) &amp;quot; &amp;quot;
&amp;#125;

#write h2:before &amp;#123;
    counter-increment: h2;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot; &amp;quot;
&amp;#125;

#write h3:before,
h3.md-focus.md-heading:before &amp;#123;
    counter-increment: h3;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;.&amp;quot; counter(h3) &amp;quot; &amp;quot;
&amp;#125;

#write h4:before,
h4.md-focus.md-heading:before &amp;#123;
    counter-increment: h4;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;.&amp;quot; counter(h3) &amp;quot;.&amp;quot; counter(h4) &amp;quot; &amp;quot;
&amp;#125;

#write h5:before,
h5.md-focus.md-heading:before &amp;#123;
    counter-increment: h5;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;.&amp;quot; counter(h3) &amp;quot;.&amp;quot; counter(h4) &amp;quot;.&amp;quot; counter(h5) &amp;quot; &amp;quot;
&amp;#125;

#write h6:before,
h6.md-focus.md-heading:before &amp;#123;
    counter-increment: h6;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;.&amp;quot; counter(h3) &amp;quot;.&amp;quot; counter(h4) &amp;quot;.&amp;quot; counter(h5) &amp;quot;.&amp;quot; counter(h6) &amp;quot; &amp;quot;
&amp;#125;

#write &amp;gt; h3.md-focus:before,
#write &amp;gt; h4.md-focus:before,
#write &amp;gt; h5.md-focus:before,
#write &amp;gt; h6.md-focus:before,
h3.md-focus:before,
h4.md-focus:before,
h5.md-focus:before,
h6.md-focus:before &amp;#123;
    color: inherit;
    border: inherit;
    border-radius: inherit;
    position: inherit;
    left: initial;
    float: none;
    top: initial;
    font-size: inherit;
    padding-left: inherit;
    padding-right: inherit;
    vertical-align: inherit;
    font-weight: inherit;
    line-height: inherit;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上边部分是左边的标题栏，下面部分是正文的标题&lt;/p&gt;
&lt;p&gt;这是没有添加前：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117124856611.png&quot; alt=&quot;image-20211117124856611&quot;&gt;&lt;/p&gt;
&lt;p&gt;添加以后：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117124948102.png&quot; alt=&quot;image-20211117124948102&quot;&gt;&lt;/p&gt;
&lt;p&gt;自动添加好序号了&lt;/p&gt;
&lt;h1 id=&quot;大纲中编号&quot;&gt;&lt;a href=&quot;#大纲中编号&quot; class=&quot;headerlink&quot; title=&quot;大纲中编号&quot;&gt;&lt;/a&gt;大纲中编号&lt;/h1&gt;&lt;h2 id=&quot;添加在base-user-css中添加如下代码&quot;&gt;&lt;a href=&quot;#添加在base-user-css中添加如下代码&quot; class=&quot;headerlink&quot; title=&quot;添加在base.user.css中添加如下代码&quot;&gt;&lt;/a&gt;添加在&lt;code&gt;base.user.css&lt;/code&gt;中添加如下代码&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-css&quot; data-language=&quot;css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;.sidebar-content &amp;#123;
    counter-reset: h1
&amp;#125;

.outline-h1 &amp;#123;
    counter-reset: h2
&amp;#125;

.outline-h2 &amp;#123;
    counter-reset: h3
&amp;#125;

.outline-h3 &amp;#123;
    counter-reset: h4
&amp;#125;

.outline-h1&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h1;
    content: counter(h1) &amp;quot;. &amp;quot;
&amp;#125;

.outline-h2&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h2;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;. &amp;quot;
&amp;#125;

.outline-h3&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h3;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;.&amp;quot; counter(h3) &amp;quot;. &amp;quot;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启Typora&lt;/p&gt;
&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117125920057.png&quot; alt=&quot;image-20211117125920057&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;完整代码&quot;&gt;&lt;a href=&quot;#完整代码&quot; class=&quot;headerlink&quot; title=&quot;完整代码&quot;&gt;&lt;/a&gt;完整代码&lt;/h1&gt;&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-css&quot; data-language=&quot;css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;#write &amp;#123;
    counter-reset: h1
&amp;#125;

h1 &amp;#123;
    counter-reset: h2
&amp;#125;

h2 &amp;#123;
    counter-reset: h3
&amp;#125;

h3 &amp;#123;
    counter-reset: h4
&amp;#125;

h4 &amp;#123;
    counter-reset: h5
&amp;#125;

h5 &amp;#123;
    counter-reset: h6
&amp;#125;

#write h1:before &amp;#123;
    counter-increment: h1;
    content: counter(h1) &amp;quot;.&amp;quot;
&amp;#125;

#write h2:before &amp;#123;
    counter-increment: h2;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot; &amp;quot;
&amp;#125;

#write h3:before,
h3.md-focus.md-heading:before &amp;#123;
    counter-increment: h3;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;.&amp;quot; counter(h3) &amp;quot; &amp;quot;
&amp;#125;

#write h4:before,
h4.md-focus.md-heading:before &amp;#123;
    counter-increment: h4;
    content: &amp;quot;(&amp;quot; counter(h4) &amp;quot;) &amp;quot;
&amp;#125;

#write h5:before,
h5.md-focus.md-heading:before &amp;#123;
    counter-increment: h5;
    content: counter(h5) &amp;quot;) &amp;quot;
&amp;#125;



.sidebar-content &amp;#123;
    counter-reset: h1
&amp;#125;

.outline-h1 &amp;#123;
    counter-reset: h2
&amp;#125;

.outline-h2 &amp;#123;
    counter-reset: h3
&amp;#125;

.outline-h3 &amp;#123;
    counter-reset: h4
&amp;#125;

.outline-h1&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h1;
    content: counter(h1) &amp;quot;. &amp;quot;
&amp;#125;

.outline-h2&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h2;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;. &amp;quot;
&amp;#125;

.outline-h3&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h3;
    content: counter(h1) &amp;quot;.&amp;quot; counter(h2) &amp;quot;.&amp;quot; counter(h3) &amp;quot;. &amp;quot;
&amp;#125;

.outline-h4&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h4;
    content: &amp;quot;(&amp;quot; counter(h4) &amp;quot;) &amp;quot;
&amp;#125;

.outline-h5&amp;gt;.outline-item&amp;gt;.outline-label:before &amp;#123;
    counter-increment: h5;
    content: counter(h5) &amp;quot;) &amp;quot;
&amp;#125;

#write &amp;gt; h3.md-focus:before,
#write &amp;gt; h4.md-focus:before,
#write &amp;gt; h5.md-focus:before,
#write &amp;gt; h6.md-focus:before,
h3.md-focus:before,
h4.md-focus:before,
h5.md-focus:before,
h6.md-focus:before &amp;#123;
    color: inherit;
    border: inherit;
    border-radius: inherit;
    position: inherit;
    left: initial;
    float: none;
    top: initial;
    font-size: inherit;
    padding-left: inherit;
    padding-right: inherit;
    vertical-align: inherit;
    font-weight: inherit;
    line-height: inherit;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;效果图-1&quot;&gt;&lt;a href=&quot;#效果图-1&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题###&quot;&gt;&lt;/a&gt;三级标题&lt;code&gt;###&lt;/code&gt;&lt;/h3&gt;&lt;h4 id=&quot;四级标题&quot;&gt;&lt;a href=&quot;#四级标题&quot; class=&quot;headerlink&quot; title=&quot;四级标题####&quot;&gt;&lt;/a&gt;四级标题&lt;code&gt;####&lt;/code&gt;&lt;/h4&gt;&lt;h5 id=&quot;五级标题&quot;&gt;&lt;a href=&quot;#五级标题&quot; class=&quot;headerlink&quot; title=&quot;五级标题#####&quot;&gt;&lt;/a&gt;五级标题&lt;code&gt;#####&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117133645418.png&quot; alt=&quot;image-20211117133645418&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/Typora%E5%A6%82%E4%BD%95%E8%AE%A9Markdown%E8%87%AA%E5%8A%A8%E6%98%BE%E7%A4%BA%E5%BA%8F%E5%8F%B7/image-20211117133651299.png&quot; alt=&quot;image-20211117133651299&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;p&gt;​    &lt;a href=&quot;https://blog.csdn.net/lt6210925/article/details/109754804?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-109754804.pc_agg_new_rank&amp;utm_term=markdown+%E5%BA%8F%E5%8F%B7&amp;spm=1000.2123.3001.4430&quot;&gt;[Markdown][typora]如何让markdown自动显示序号&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​    &lt;a href=&quot;https://blog.csdn.net/qq_50806329/article/details/112845330&quot;&gt;Typora自动在大纲和编辑页面里显示编号&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Markdown" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://rongkangxiong.top/tags/Markdown/"/>
    
    <category term="Typora" scheme="https://rongkangxiong.top/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>国企改革究竟改的是什么？</title>
    <link href="https://rongkangxiong.top/post/%E5%9B%BD%E4%BC%81%E6%94%B9%E9%9D%A9%E7%A9%B6%E7%AB%9F%E6%94%B9%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.html"/>
    <id>https://rongkangxiong.top/post/%E5%9B%BD%E4%BC%81%E6%94%B9%E9%9D%A9%E7%A9%B6%E7%AB%9F%E6%94%B9%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.html</id>
    <published>2021-11-14T12:46:41.000Z</published>
    <updated>2021-11-14T12:53:46.159Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载自 佐伊23</p><p>链接：<a href="https://www.zhihu.com/question/30105824/answer/1484712593">https://www.zhihu.com/question/30105824/answer/1484712593</a></p><p>来源：知乎</p></blockquote><p>“国企工人不就是大锅饭吗，不就是磨洋工吗，这样不改还得了啊？”</p><p>“他们不就是喜欢从厂里面偷东西吗，这不就是产权不明确无人负责导致的吗？”</p><p>“居然还有人说当时的国企好，国企这么好，那为什么垮了？”</p><p>“那些下岗的自己不努力，怪谁！”</p><p>当过程被人有意无意忽略的时候，某些结果就显得不可理解。但是当我们把过程补齐的时候，一切看似矛盾的事物又都显得那么自洽。</p><p>改革开放前，我国国营企业有三大特点。</p><p>经济上。企业的利润扣除社会保障基金和扩大再生产的资金外，归根结底要通过各种福利制度返还职工。国企有自己的医院、学校和修房子的住建科，职工享受免费的医疗和教育，并且享受福利分房。也就是说，国企的钱不光要给职工发工资，还要给职工修房子、上学、看病。</p><p>管理上。企业在逐步实行“两参一改三结合”（有些实行得好点，有些差一点），即“干部参加劳动，工人参加管理；改革不合理的规章制度；工程技术人员、管理者和工人在生产实践和技术革新中相结合”。工人在劳动中不是被动的工具，不是被动的领受任务，而是主动的自觉的人，主动参与到企业计划的制定之中。</p><p>工人和企业的关系上。工人是企业的主人，而不是企业的雇员。企业管理人员（厂长、书记等等）没有权力开除工人。一般而言，只要工人不犯罪，厂里就没有开除工人的权力。</p><p>对国企而言，改革改的就是这三点。</p><span id="more"></span><h2 id="一、从放权让利到经济责任制"><a href="#一、从放权让利到经济责任制" class="headerlink" title="一、从放权让利到经济责任制"></a>一、从放权让利到经济责任制</h2><p>国企改革的第一阶段叫做放权让利。</p><p>1978年后我国确立了放权让利的基调，要求“扩大企业自主权，并且把企业经营好坏同职工的物质利益结合起来。”从1979年4月开始，中央在2100多个企业进行了试点。</p><p>我国历史上有两次大规模企业权力下放，一次是1958年，一次是1979年。但是，两者有本质不同。1958年在工业企业下放的同时，大力推行工人民主管理，而1979年的放权让利同时大力推行厂长经理负责制。这实际是用物质刺激（奖金）回收工人管理工厂的权力，从短期看工人收入增加，从长期看工人权力丧失，最终必然导致更大的经济利益的丧失。</p><p>放权扩大了厂长经理享有的特权，使企业经营管理人员的公权力私有化，破坏了工人阶级在企业中的领导权。也就是说，国家把权力下放给企业，企业却把权力集中到了厂长经理手里。这显然会损害工人阶级积极性，是不利于国营企业发展的。</p><p>在扩权的初期，企业表现出很高的增产增收的积极性，也多发了一些工资，工人的经济收入在不断提高，而且增长的速度较快。以北京某机械厂为例，1983年机械厂开始对直接生产工人实行超额计件工资制，即超额完成生产指标颁发超额奖，全厂职工的月平均工资从1978年的52元上升到1985年的119元，年均工资增长13％。在这一阶段上，工人逐渐放弃了管理权利，从以前的政治挂帅走向了关注物质利益。然而好景不长，国家提高工资是通过增发货币形成的，这导致经济混乱、财政赤字和通货膨胀。到1980年底，中央决定“进一步调整国民经济”，国有企业也由进行“扩权”改革转向强化完成国家计划的“责任制”，这宣告了放权让利的结束。但是，放权让利虽然结束了，工人被回收的管理权力，却是再也拿不回来了。</p><h2 id="二、利改税和拨改贷"><a href="#二、利改税和拨改贷" class="headerlink" title="二、利改税和拨改贷"></a>二、利改税和拨改贷</h2><p>1983年的利改税和1985年的拨改贷，是国企改制史上至关重要的两个环节。通过利改税和拨改贷两个制度设计，国企在极度不公平的环境下参与了市场竞争，为之后国企破产埋下伏笔。</p><p>我国企业以前所有利润统一上缴国家，如果需要扩建厂房或者购买设备，则由国家无偿拨款给企业。利改税就是用所得税替代利润上缴，用贷款替代无偿拨款。</p><p>企业利润全部上缴，国家就无偿拨款给企业搞建设；企业利润不上交了（只缴税而不交利润），国家就不拨款了，企业搞建设就去银行贷款。这听起来很公平，但事实上全然不是。</p><p>首先看利改税。我们以大企业为例，国家对有盈利的国营大中型企业，按55％的比例税率征收所得税，所得税后剩下的利润，一部分上缴国家，一部分按照国家核定的留利水平留给企业。整体而言，企业要将大约7-8成的利润通过利税方式上缴国家。</p><p>再看拨改贷。国家收走了企业8成的盈利，却不再给企业的建设拨款，而是要求企业向银行借贷。这使得国有企业面临异常困难的境地。当时国有企业已经开始和私企、外企竞争了，但是私企外企的综合税率只有17%-33%（本身税就低，还有各种减免），而国企的综合税率却在70%-80%。这是典型的不平等竞争。外企和私企赚钱了，大部分可以留下来扩大再生产或者购买更新的设备，国企赚钱了，大部分给了国家，国家却不再拨款给企业建设，而要求企业自己去贷款买新设备。这直接导致国企设备老旧，资金不足。</p><p>国企数十年来的利润都给了国家搞建设，而没有用来发展国企自身，本指望国家拨款更新设备，结果突然拨改贷，使得它要么不更新设备，要么背负巨额债务去发展生产。拨改贷实施后，原先的国营企业负债率从20%左右急速升至80%以上，个别企业全额负债，这严重影响了企业的积极性和发展后劲。</p><p>不仅如此，拨改贷项目仍然沿袭由国家定项目，企业和建设单位听命使用资金的做法。国家定项目就是领导人定项目，厂里面的领导人为了政绩胡乱贷款上项目。这导致上届领导借钱下届领导人还款，对借钱者没有有效的制约手段。在“拨改贷”实行后不久，一些厂长经理就悟出了“不贷白不贷”的道理，向国家争投资、争项目、争贷款，最终导致国企债务高企，并引发了80年代数次经济失衡。</p><h2 id="三、一长制和工人的积极性降低"><a href="#三、一长制和工人的积极性降低" class="headerlink" title="三、一长制和工人的积极性降低"></a>三、一长制和工人的积极性降低</h2><p>随着一长制的恢复，工人失去已有的民主权利，管理层逐渐失控。《工人日报》指出：“随着改革方向的明确，厂长、经理及其他经营管理人员的地位、作用已经得到了明确的界定，他们的权力得到了明确的保证。然而，无庸讳言，我们在正确地强调和注重了厂长、经理阶层的权力和职能时，却不恰当地疏忽了职工劳动者的应有权利。致使职工在分享改革成果的预期未得实现的同时，又未能分享参与协调的机会”。</p><p>1982年全国职工状况调查表明，一些领导干部通过不正当的手段为自己的子女安排较好的工种，在提干、晋级、住房分配等涉及群众利益方面，都给自己以及自己的子女和亲属以特殊的照顾。1984年，国家开始改革劳动用工制度，招收合同制工人，1986年废除子女顶替和内部招工办法。</p><p>1986年有调查表明，由于搞活企业的需要，企业管理者向经营者转化，被赋予了更大的企业权力。企业厂长由上级领导任命、委派，实行负责制，职工满意不满意都得接受，干好干坏群众既不能褒，也不能贬。他们说：“工人只尽主人翁义务，没有主人翁权利，主人担风险（企业办不好，领不到工资），公仆有保险（企业办垮了照样当官或调走了事）”。企业干群关系开始紧张，工人用消极怠工来对付干部，已经成为公开的秘密。</p><p>据中华全国总工会1988年对17个城市400多个企业的21万职工所作的劳动积极性调查显示，“国营企业劳动者的劳动热情不在峰值而在谷底。21万职工中认为自己的劳动积极性得到了充分发挥的只占12%。”因为此时工人队伍已经瓦解，所谓的劳动积极性就是关心私利的积极性，当工人的个人利益得不到满足时，劳动积极性自然就会消失。</p><h2 id="四、承包制和工人积极性的进一步降低"><a href="#四、承包制和工人积极性的进一步降低" class="headerlink" title="四、承包制和工人积极性的进一步降低"></a>四、承包制和工人积极性的进一步降低</h2><p>1987年5月，国务院在全国推广承包制。承包制就是把国营企业的各个车间部门承包给各种厂长、书记、主任等等，这些人按承诺缴纳一定的利润，剩下的钱可以自行分配。</p><p>承包制使得工人和干部的收入差距迅速扩大。按照国家的规定，应当采取公开招标办法，通过竞争确定承包经营者，但实际中很少有采用竞争办法的，基本上都是主管领导拍板。在政府和企业之间，企业的承包基数和分成比例等指标取决于政府发包部门和厂长的谈判，没有统一和科学的标准；在企业内部，根据游正林的调查，承包人和承包监督人一般为分厂厂长和书记，在承包指标上有讨价还价余地，承包指标也不会订的太高，正常情况下承包任务完成都不会很难，因此“完不成年度责任目标的，应扣减厂长的个人收入”也就成了空话。</p><p>承包奖包括风险抵押金和超额奖两部分，超额奖的分配由承包者自主决定，不再是公开的。这样，通过两权分离就创造出来“先富起来”的一批干部。现代化大生产彼此之间的联系密切，很难按照计件工资的方式来计算劳动成果，再加上辅助工人和非生产工人没有有形的劳动产品，因此工人的工资改革变成了普调。同时也开始发年度奖和红包，工人之间的年度奖基本都一样，工人与经营者奖金差距日益拉大。工人对工厂的变化看的非常清楚，工人中都流传着这样的话：“工人穷，厂长富，车间主任万元户，厂长挣钱没有数。”</p><h2 id="五、所谓的懒汉"><a href="#五、所谓的懒汉" class="headerlink" title="五、所谓的懒汉"></a>五、所谓的懒汉</h2><p>一长制使得厂长建立了工厂里面的独裁，承包制扩大了工人和干部的收入差距，这还没完。厂里面的领导为了赚更多的钱，开始在外面建小厂。钢铁厂的领导开个焦炭厂，高价把焦炭卖给自己单位；媒矿的领导在外面开个洗煤厂，私底下利益输送。</p><p>作为小说《抉择》原型的那家纺织厂每年的招待费就一千多万元。每个厂长经理退休，发给一百万元办三产，也就是个人小纺织厂。于是大纺织厂周围布满了小纺织厂，国家的资金、原料、市场都流到了小纺织厂。小厂红红火火，大厂一点一点被蚕食。大厂的工人失业，被小厂以低价招来，一天干十几个小时，随意压榨剥削。</p><p>这一切，都被工人看在眼里。就在这样的大背景下，工人和工厂的关系发生了根本性变化。曾经在毛时代积极奋战的工人，有一些人开始变得偷奸耍滑。</p><p>70年代的时候，某个钢铁厂的领导公车私用，被一群工人堵在厂门口，要求他下车来解释，这个车拿去干嘛了，为什么要占国家的便宜。80年代的时候，还是那个钢铁厂，还是那些工人，他们开始从厂里面偷钢偷铁，拿一块好点的钢回家去打把菜刀，或者投点特殊钢材拿去卖给私人老板。你问工人，“你为什么要这样干啊？”他说，“领导大偷，工人小偷，这有什么问题吗？国家的便宜，不占白不占。”</p><p>部分工人开始了磨洋工。当资本制度全面建立时，曾经的主人由抱怨而愤怒、由愤怒而反抗，最初这种反抗是消极的，是以怠工或磨洋工的形式体现出来的。这就是磨洋工的原因。</p><p>一种声音出现了，他们痛斥工人偷懒，他们大呼人性本恶，他们说国企效率就是低下，国企工人就是磨洋工，他们说这一切的原因就是国企没有清晰的产权制度，“全民所有就是全民所无”。他们献言献策，要建立一个由严格的规章制度和明晰的产权制度构成的现代化企业，去防范工人从厂里面拿钢拿铁。但是，他们却从来不说这一切都是什么造成的，他们也从不建立一个规章制度去限制资本占有工人的剩余价值。</p><p>【然而，即使在这样的条件下，很多国企工人照样还是勤勤恳恳的工作，我曾经问过很多老工人，他们怎么看待大锅饭养懒汉的说法。他们无一例外痛斥这种污蔑他们的说法，“我们是企业的主人，不是懒汉！”】</p><h2 id="六、1993年后的国企改革"><a href="#六、1993年后的国企改革" class="headerlink" title="六、1993年后的国企改革"></a>六、1993年后的国企改革</h2><p>1993年11月开始了新一轮国企改革，三个重点：一是抓大放小，二是建立公司法人治理结构，三是理顺企业产权关系。与此同时，全国人大颁布了《公司法》，这标志着按份占有资本并实行权力的产权制度在中国有了法律依据。结合1993年的增值税改革前后的五个文件，可以得出两个结论：</p><p>1、国家除了17%的增值税，还可以获得33%的所得税。表面上看税率较以前的55%有所降低，但由于增值税的税基较原来扩大了很多，因此，国家所得较以前有大幅增加（这从后来津津乐道的税收增长中可以看出来）。更为重要的是，在税负增加的同时，我国彻底抛弃了教育、医疗和住房的包袱，国民不再能通过财政收入享受国有资产的收益。工人曾经享有的医疗、教育和住房福利，基本被改革掉了（1998年后明确终止福利分房，最终完结了工人从经济上获取国企利润的途径）。</p><p>2、对于企业职工福利和奖金，由于原来的文件被废止，而新文件没有交代，于是，它的法律地位被弱化。因此，企业留存的利润，从理论上来讲，除了用于投资，便没有任何可以索取的途径。</p><p>从1993年起，国有资产分成了三大块：政府的税收，约占50%或更多；用于投资的利润，大致占50%弱；没有任何法律保障的职工福利，份额微不足道。</p><p>1994年通过并于1995年实施的《劳动法》，从法律层面上明确了劳动者仅仅是企业的雇员，而不是工厂的主人，也就是说，从法律意义而言，工厂有权力开除工人了。与此前后，国企开始全面推行合同制，国有单位的劳动合同制职工由1992年的2059万人猛增到1996年的5549万人。在签合同的过程中，一开始领导告诉工人这不过是“走过场”，签个字就行了；到了90年代末开始优化的时候，签了字的合同就开始起作用，领导们宣布“老人老办法，新人新办法”，合同制的职工这时就傻眼了。</p><p>1996年一季度，在长期不公平的竞争中（至少有两点：其一、税收不平等。其二、私企和外企只给职工发工资，而国企除了工资，还要给职工修房子、看病、上学），在国企乱象横生的背景下，国有工业企业首次出现全行业净亏损。国有及国有控股大中型亏损企业6599户，亏损面达39.1％。</p><p>而导致这一切的锅，自然又是由那些“磨洋工”的国企工人背了。</p><p>面对当时的局面，领导人提出要进一步深化改革，用各种方法让国企三年脱困。砸三铁、甩包袱，也就是在这个大背景下出台的。在此前后，国有企业甩卖了自己的医院、学校，分出了自己的住建科成立房地产公司，优化了大批老工人以减少成本。</p><p>被优化的工人生活境遇迅速下降，以三线职工为例，2005年三线被优化的职工月收入低于300元的有68％，收入的92％用于衣食和子女教育，88％的人无法养活自己而不得不依靠政府福利、亲友救济。被优化的那些人生活没有着落，出现了各种人间悲剧。有女工成为霓虹灯下的新哨兵，而她的男人每次都驮着她去上岗。有男工为了自己的小孩上学，吃了某种药制造一个大新闻，让社会捐助自己的遗孤。去问问那些经历过这个时期的人，哪一个不是对这些专家学者恨的咬牙切齿。一个老工人这样说，“我们不是懒汉，我们是社会主义的建设者！”还有很多不甘心的老工人开始了串联，上访，甚至实施了其他更激进的措施。《那儿》，《问苍茫》等等优秀的文学作品，就生动地描述了这段对中国有深刻影响的历史。</p><p>1997年刘欢的《从头再来》就是给这些被优化的人。“昨天所有的荣誉，已变成遥远的回忆，辛辛苦苦已度过半生，今夜重又走进风雨……心若在梦就在，天地之间还有真爱，看成败人生豪迈，只不过是从头再来。”工人听了当时就直骂娘，你为什么不走进风雨，凭什么叫我们从头再来！</p><p>而这一切也构成了黄宏那个小品的时代背景。刘欢的歌还比较隐晦，你骂他，他还能闪躲。黄宏的小品实在说不上高明，用这样直白的话，去刺痛工人的心，“工人要为国家想，我不下岗谁下岗”。人家一辈子都在为国家想，人家老了，希望安定一点，希望你也为他想想。结果你倒好，把人家当包袱一甩了之。这就难怪那么多为国家奉献一身的老工人，恨黄宏入骨。</p><p>2000年开始，国家对全国的国有企业改革实行分类指导，对陷入困境的老企业通过出售一块、盘活一块、加强一块等各种方式，进行国企“改革”。数千万工人被优化，众多国企被甩卖。通过甩包袱卖企业，2000年底，终于如期基本实现了国企改革与脱困的三年两大目标。</p><p>从实质而非形式的意义来讲，至此，国企改革已经完毕。后续的行动，无论怎么冠以改革的名义，其实质仅仅是垄断资本的重组而已。2003年组建国资委，对国有垄断资本进行打散重组，这之后的进程，多数人至少也有耳闻了。</p><p>21世纪初期，与资本对立的那些曾经的主人还在动。他们的切身利益受到前所未有的冲击，迫使他们开始关注自身的利益。到2005年，全国群体上访涉及约400万人，其中以他们为主体的有40％。各种消息在他们之间传播。一个城市的那些人，甚至形成了某种网络式的联系。一棉、二棉、三棉联系在一起，钢铁、五金、采矿、炼焦联系在一起，木材厂和肉联厂的也在沟通，这导致了巨大的不安定。这些不安定因素，用自己气吞山河的壮举，延缓了私有化的进程。</p><p>作为曾经的主人，在资本全面复兴的时代，他们唱出了极为悲壮的挽歌，也因此而奏响了新时代的号角。</p><p>-——————————————-</p><p>主要参考文献：</p><p>​    游正林.内部分化与流动——一家国有企业的二十年.北京：社会科学文献出版社，1998</p><p>​    刘卓红.现代化建设主体——当代工人阶级地位研究[M].广东人民出版社，2000</p><p>​    冯同庆，围绕工人阶级理论的争论与工人阶级状况</p><p>​    柳可白，王玫，阎春芝.当代工人阶级的地位和作用.中国工人出版社，2007</p><p>​    胡鞍钢.关于我国就业问题的若干看法</p><p>​    于建嵘.当代中国工人的以理维权</p><p>-————————————————</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载自 佐伊23&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;https://www.zhihu.com/question/30105824/answer/1484712593&quot;&gt;https://www.zhihu.com/question/30105824/answer/1484712593&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;来源：知乎&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“国企工人不就是大锅饭吗，不就是磨洋工吗，这样不改还得了啊？”&lt;/p&gt;
&lt;p&gt;“他们不就是喜欢从厂里面偷东西吗，这不就是产权不明确无人负责导致的吗？”&lt;/p&gt;
&lt;p&gt;“居然还有人说当时的国企好，国企这么好，那为什么垮了？”&lt;/p&gt;
&lt;p&gt;“那些下岗的自己不努力，怪谁！”&lt;/p&gt;
&lt;p&gt;当过程被人有意无意忽略的时候，某些结果就显得不可理解。但是当我们把过程补齐的时候，一切看似矛盾的事物又都显得那么自洽。&lt;/p&gt;
&lt;p&gt;改革开放前，我国国营企业有三大特点。&lt;/p&gt;
&lt;p&gt;经济上。企业的利润扣除社会保障基金和扩大再生产的资金外，归根结底要通过各种福利制度返还职工。国企有自己的医院、学校和修房子的住建科，职工享受免费的医疗和教育，并且享受福利分房。也就是说，国企的钱不光要给职工发工资，还要给职工修房子、上学、看病。&lt;/p&gt;
&lt;p&gt;管理上。企业在逐步实行“两参一改三结合”（有些实行得好点，有些差一点），即“干部参加劳动，工人参加管理；改革不合理的规章制度；工程技术人员、管理者和工人在生产实践和技术革新中相结合”。工人在劳动中不是被动的工具，不是被动的领受任务，而是主动的自觉的人，主动参与到企业计划的制定之中。&lt;/p&gt;
&lt;p&gt;工人和企业的关系上。工人是企业的主人，而不是企业的雇员。企业管理人员（厂长、书记等等）没有权力开除工人。一般而言，只要工人不犯罪，厂里就没有开除工人的权力。&lt;/p&gt;
&lt;p&gt;对国企而言，改革改的就是这三点。&lt;/p&gt;</summary>
    
    
    
    <category term="鉴证" scheme="https://rongkangxiong.top/categories/%E9%89%B4%E8%AF%81/"/>
    
    <category term="国企改革" scheme="https://rongkangxiong.top/categories/%E9%89%B4%E8%AF%81/%E5%9B%BD%E4%BC%81%E6%94%B9%E9%9D%A9/"/>
    
    
    <category term="鉴证" scheme="https://rongkangxiong.top/tags/%E9%89%B4%E8%AF%81/"/>
    
    <category term="改革" scheme="https://rongkangxiong.top/tags/%E6%94%B9%E9%9D%A9/"/>
    
    <category term="国企改革" scheme="https://rongkangxiong.top/tags/%E5%9B%BD%E4%BC%81%E6%94%B9%E9%9D%A9/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Next 主题博客提交百度谷歌收录</title>
    <link href="https://rongkangxiong.top/post/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95.html"/>
    <id>https://rongkangxiong.top/post/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95.html</id>
    <published>2021-11-13T12:01:11.000Z</published>
    <updated>2021-11-13T14:30:31.012Z</updated>
    
    <content type="html"><![CDATA[<p>SEO（Search Engine Optimization）：中文译为搜索引擎优化，即利用搜索引擎的规则提高网站搜索引擎内自然排名。主要通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化等方式实现。</p><p>主要是给各个搜索引擎提交你的 sitemap，让别人能搜到你博客的内容。<br>先确认博客是否被搜索引擎收录，在百度或者谷歌输入下面格式来判断，如果能搜索到就说明被收录，否则就没有。</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">site:写你要搜索的域名# site:xxx.github.io # site:rongkangxiong.top</code></pre><h1 id="开启-Next-主题的-SEO-优化项"><a href="#开启-Next-主题的-SEO-优化项" class="headerlink" title="开启 Next 主题的 SEO 优化项"></a>开启 Next 主题的 SEO 优化项</h1><p>Next 提供了 <code>seo</code> 优化选项，在主题配置文件<code>_config.yml</code>中有个选项是<code>seo</code>，设置成<code>true</code>即开启了<code>seo</code>优化。<br>百度无法搜索到博客信息，是因为 <code>Github Pages </code>屏蔽了百度爬虫</p><p>我们需要使用插件自动生成网站的 sitemap，然后将生成的 sitemap 提交到百度和其他搜索引擎。<br>先安装谷歌和百度的插件，如下：</p><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save</code></pre><p>在博客根目录<code>_config.yml</code>中改<code>url</code>为你的站点地址：</p><pre class="line-numbers language-yam" data-language="yam"><code class="language-yam"># URL## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;url: https:&#x2F;&#x2F;rongkangxiong.toppermalink: &#x2F;post&#x2F;:title.htmlpermalink_defaults:pretty_urls:  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</code></pre><p>在博客根目录的<code>_config.yml</code>中添加如下代码：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">baidusitemap:  path: baidusitemap.xmlsitemap:  path: sitemap.xml</code></pre><p>之后重新打包<code>hexo g -d</code>，若在你的博客根目录的<code>public</code>下面发现生成了<code>sitemap.xml</code>以及<code>baidusitemap.xml</code>就表示成功了</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213456005.png" alt="image-20211113213456005"></p><p>其中<code>sitemap.xml</code>文件是搜索引擎通用的文件，<code>baidusitemap.xml</code>是百度专用的 `sitemap 文件。可以通过<a href="https://xxx.github.io/baidusitemap.xml">https://xxx.github.io/baidusitemap.xml</a>查看该文件。</p><h1 id="向百度提交链接"><a href="#向百度提交链接" class="headerlink" title="向百度提交链接"></a>向百度提交链接</h1><p>之后可以将生成的<code>sitemap</code>文件提交给百度，可以加快爬虫抓取速度</p><p>在<a href="https://ziyuan.baidu.com/">站长平台</a>，找到 <code>网站支持-数据引入-链接提交</code>，选择<code>自动提交</code></p><p>一般主动提交比手动提交效果好，这里介绍主动提交的三种方法。从效率上来说：<code>主动推送&gt;自动推送&gt;sitemap</code>。</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213906951.png" alt="image-20211113213906951"></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213920196.png" alt="image-20211113213920196"></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113214756683.png" alt="image-20211113214756683"></p><p>在选择完网站的类型之后需要验证网站的所有权，有三种验证方式，文件验证、html 标签验证、<code>cname </code>解析验证。</p><p>使用HTML验证最简单</p><p>打开 Hexo 主题配置文件，按如下修改/添加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">google_site_verification: #索引擎提供给你的HTML标签的content后的内容baidu_site_verification: #索引擎提供给你的HTML标签content后的内容</code></pre><p>然后控制台输入<code>hexo g -d</code>，部署更新。</p><p>验证完之后点击<code>提交资源</code></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113215816088.png" alt="image-20211113215816088"></p><p>点击普通收录</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113220003266.png" alt="image-20211113220003266"></p><p>安装插件：</p><pre class="line-numbers language-npm" data-language="npm"><code class="language-npm">npm install hexo-baidu-url-submit --save</code></pre><p>根目录配置文件<code>_config.ym</code>新增字段：</p><pre class="line-numbers language-yam" data-language="yam"><code class="language-yam">baidu_url_submit:  count: 100 # 提交最新的一个链接  host: xxx.github.io # 在百度站长平台中注册的域名  token: xxxxxx # 秘钥，百度站长平台 &gt; 推送接口 &gt; 接口调用地址中token字段  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里  xz_appid: xxxxxx # 你的熊掌号 appid</code></pre><p>其次，记得查看<code>_config.ym</code>文件中<code>url</code>， 必须是百度站长平台注册的域名（包含www）：</p><pre class="line-numbers language-yam" data-language="yam"><code class="language-yam">url: https:&#x2F;&#x2F;rongkangxiong.toppermalink: &#x2F;post&#x2F;:title.htmlpermalink_defaults:pretty_urls:  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</code></pre><p>最后，根目录配置文件新增 deploy：</p><pre class="line-numbers language-yam" data-language="yam"><code class="language-yam">deploy:  type: baidu_url_submitter</code></pre><p><strong>注意：参考 <a href="https://hexo.io/docs/deployment.html">hexo官网</a> 多个 deploy 时要这样写，前面加横杠：</strong></p><pre class="line-numbers language-yam" data-language="yam"><code class="language-yam"># You can use multiple deployers. Hexo will execute each deployer in order.deploy:- type: git  repo:- type: heroku  repo:</code></pre><p>这样以后每次执行<code>hexo deploy</code>，链接就会被推送给百度了。</p><h1 id="让Google收录网站"><a href="#让Google收录网站" class="headerlink" title="让Google收录网站"></a>让Google收录网站</h1><p>进入<code>Google Search Console</code>控制台 <a href="https://search.google.com/search-console/welcome">链接</a></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113222436951.png" alt="image-20211113222436951"></p><h2 id="验证所有权，有几种验证方法："><a href="#验证所有权，有几种验证方法：" class="headerlink" title="验证所有权，有几种验证方法："></a>验证所有权，有几种验证方法：</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">Domain 网域验证URL prefix 网址前缀验证，包含以下验证方法：HTML file（文件验证）HTML taghtml（标签验证）Google AnalyticsGoogle Tag ManagerGoogle name provider</code></pre><p>URL prefix 验证下的，文件验证、标签验证和百度类似，我选的标签验证，在主题配置文件中修改：</p><pre class="line-numbers language-yam" data-language="yam"><code class="language-yam"># Google Webmaster tools verification setting# See: https:&#x2F;&#x2F;www.google.com&#x2F;webmasters&#x2F;google_site_verification: xxxxxxxxxxxxx # 此处改为google提供给你的HTML标签content后的内容</code></pre><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113222848795.png" alt="image-20211113222848795"></p><h2 id="提交Sitemap"><a href="#提交Sitemap" class="headerlink" title="提交Sitemap"></a>提交Sitemap</h2><p>参考链接</p><p>​    <a href="https://www.luanzhuxian.com/post/82d92ad4.html">Hexo + Next 主题博客提交百度谷歌收录</a></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;SEO（Search Engine Optimization）：中文译为搜索引擎优化，即利用搜索引擎的规则提高网站搜索引擎内自然排名。主要通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化等方式实现。&lt;/p&gt;
&lt;p&gt;主要是给各个搜索引擎提交你的 sitemap，让别人能搜到你博客的内容。&lt;br&gt;先确认博客是否被搜索引擎收录，在百度或者谷歌输入下面格式来判断，如果能搜索到就说明被收录，否则就没有。&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;site:写你要搜索的域名
# site:xxx.github.io # site:rongkangxiong.top
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;开启-Next-主题的-SEO-优化项&quot;&gt;&lt;a href=&quot;#开启-Next-主题的-SEO-优化项&quot; class=&quot;headerlink&quot; title=&quot;开启 Next 主题的 SEO 优化项&quot;&gt;&lt;/a&gt;开启 Next 主题的 SEO 优化项&lt;/h1&gt;&lt;p&gt;Next 提供了 &lt;code&gt;seo&lt;/code&gt; 优化选项，在主题配置文件&lt;code&gt;_config.yml&lt;/code&gt;中有个选项是&lt;code&gt;seo&lt;/code&gt;，设置成&lt;code&gt;true&lt;/code&gt;即开启了&lt;code&gt;seo&lt;/code&gt;优化。&lt;br&gt;百度无法搜索到博客信息，是因为 &lt;code&gt;Github Pages &lt;/code&gt;屏蔽了百度爬虫&lt;/p&gt;
&lt;p&gt;我们需要使用插件自动生成网站的 sitemap，然后将生成的 sitemap 提交到百度和其他搜索引擎。&lt;br&gt;先安装谷歌和百度的插件，如下：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-npm&quot; data-language=&quot;npm&quot;&gt;&lt;code class=&quot;language-npm&quot;&gt;npm install hexo-generator-sitemap --save
npm install hexo-generator-baidu-sitemap --save&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在博客根目录&lt;code&gt;_config.yml&lt;/code&gt;中改&lt;code&gt;url&lt;/code&gt;为你的站点地址：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yam&quot; data-language=&quot;yam&quot;&gt;&lt;code class=&quot;language-yam&quot;&gt;# URL
## Set your site url here. For example, if you use GitHub Page, set url as &amp;#39;https:&amp;#x2F;&amp;#x2F;username.github.io&amp;#x2F;project&amp;#39;
url: https:&amp;#x2F;&amp;#x2F;rongkangxiong.top
permalink: &amp;#x2F;post&amp;#x2F;:title.html
permalink_defaults:
pretty_urls:
  trailing_index: true # Set to false to remove trailing &amp;#39;index.html&amp;#39; from permalinks
  trailing_html: true # Set to false to remove trailing &amp;#39;.html&amp;#39; from permalinks&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在博客根目录的&lt;code&gt;_config.yml&lt;/code&gt;中添加如下代码：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;baidusitemap:
  path: baidusitemap.xml
sitemap:
  path: sitemap.xml&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后重新打包&lt;code&gt;hexo g -d&lt;/code&gt;，若在你的博客根目录的&lt;code&gt;public&lt;/code&gt;下面发现生成了&lt;code&gt;sitemap.xml&lt;/code&gt;以及&lt;code&gt;baidusitemap.xml&lt;/code&gt;就表示成功了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213456005.png&quot; alt=&quot;image-20211113213456005&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;sitemap.xml&lt;/code&gt;文件是搜索引擎通用的文件，&lt;code&gt;baidusitemap.xml&lt;/code&gt;是百度专用的 `sitemap 文件。可以通过&lt;a href=&quot;https://xxx.github.io/baidusitemap.xml&quot;&gt;https://xxx.github.io/baidusitemap.xml&lt;/a&gt;查看该文件。&lt;/p&gt;
&lt;h1 id=&quot;向百度提交链接&quot;&gt;&lt;a href=&quot;#向百度提交链接&quot; class=&quot;headerlink&quot; title=&quot;向百度提交链接&quot;&gt;&lt;/a&gt;向百度提交链接&lt;/h1&gt;&lt;p&gt;之后可以将生成的&lt;code&gt;sitemap&lt;/code&gt;文件提交给百度，可以加快爬虫抓取速度&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://ziyuan.baidu.com/&quot;&gt;站长平台&lt;/a&gt;，找到 &lt;code&gt;网站支持-数据引入-链接提交&lt;/code&gt;，选择&lt;code&gt;自动提交&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般主动提交比手动提交效果好，这里介绍主动提交的三种方法。从效率上来说：&lt;code&gt;主动推送&amp;gt;自动推送&amp;gt;sitemap&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213906951.png&quot; alt=&quot;image-20211113213906951&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113213920196.png&quot; alt=&quot;image-20211113213920196&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113214756683.png&quot; alt=&quot;image-20211113214756683&quot;&gt;&lt;/p&gt;
&lt;p&gt;在选择完网站的类型之后需要验证网站的所有权，有三种验证方式，文件验证、html 标签验证、&lt;code&gt;cname &lt;/code&gt;解析验证。&lt;/p&gt;
&lt;p&gt;使用HTML验证最简单&lt;/p&gt;
&lt;p&gt;打开 Hexo 主题配置文件，按如下修改/添加：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;google_site_verification: #索引擎提供给你的HTML标签的content后的内容
baidu_site_verification: #索引擎提供给你的HTML标签content后的内容&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后控制台输入&lt;code&gt;hexo g -d&lt;/code&gt;，部署更新。&lt;/p&gt;
&lt;p&gt;验证完之后点击&lt;code&gt;提交资源&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113215816088.png&quot; alt=&quot;image-20211113215816088&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击普通收录&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113220003266.png&quot; alt=&quot;image-20211113220003266&quot;&gt;&lt;/p&gt;
&lt;p&gt;安装插件：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-npm&quot; data-language=&quot;npm&quot;&gt;&lt;code class=&quot;language-npm&quot;&gt;npm install hexo-baidu-url-submit --save&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;根目录配置文件&lt;code&gt;_config.ym&lt;/code&gt;新增字段：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yam&quot; data-language=&quot;yam&quot;&gt;&lt;code class=&quot;language-yam&quot;&gt;baidu_url_submit:
  count: 100 # 提交最新的一个链接
  host: xxx.github.io # 在百度站长平台中注册的域名
  token: xxxxxx # 秘钥，百度站长平台 &amp;gt; 推送接口 &amp;gt; 接口调用地址中token字段
  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里
  xz_appid: xxxxxx # 你的熊掌号 appid&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其次，记得查看&lt;code&gt;_config.ym&lt;/code&gt;文件中&lt;code&gt;url&lt;/code&gt;， 必须是百度站长平台注册的域名（包含www）：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yam&quot; data-language=&quot;yam&quot;&gt;&lt;code class=&quot;language-yam&quot;&gt;url: https:&amp;#x2F;&amp;#x2F;rongkangxiong.top
permalink: &amp;#x2F;post&amp;#x2F;:title.html
permalink_defaults:
pretty_urls:
  trailing_index: true # Set to false to remove trailing &amp;#39;index.html&amp;#39; from permalinks
  trailing_html: true # Set to false to remove trailing &amp;#39;.html&amp;#39; from permalinks&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后，根目录配置文件新增 deploy：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yam&quot; data-language=&quot;yam&quot;&gt;&lt;code class=&quot;language-yam&quot;&gt;deploy:
  type: baidu_url_submitter&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意：参考 &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot;&gt;hexo官网&lt;/a&gt; 多个 deploy 时要这样写，前面加横杠：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yam&quot; data-language=&quot;yam&quot;&gt;&lt;code class=&quot;language-yam&quot;&gt;# You can use multiple deployers. Hexo will execute each deployer in order.
deploy:
- type: git
  repo:
- type: heroku
  repo:&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样以后每次执行&lt;code&gt;hexo deploy&lt;/code&gt;，链接就会被推送给百度了。&lt;/p&gt;
&lt;h1 id=&quot;让Google收录网站&quot;&gt;&lt;a href=&quot;#让Google收录网站&quot; class=&quot;headerlink&quot; title=&quot;让Google收录网站&quot;&gt;&lt;/a&gt;让Google收录网站&lt;/h1&gt;&lt;p&gt;进入&lt;code&gt;Google Search Console&lt;/code&gt;控制台 &lt;a href=&quot;https://search.google.com/search-console/welcome&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113222436951.png&quot; alt=&quot;image-20211113222436951&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;验证所有权，有几种验证方法：&quot;&gt;&lt;a href=&quot;#验证所有权，有几种验证方法：&quot; class=&quot;headerlink&quot; title=&quot;验证所有权，有几种验证方法：&quot;&gt;&lt;/a&gt;验证所有权，有几种验证方法：&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;Domain 网域验证
URL prefix 网址前缀验证，包含以下验证方法：
	HTML file（文件验证）
	HTML taghtml（标签验证）
	Google Analytics
	Google Tag Manager
	Google name provider&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;URL prefix 验证下的，文件验证、标签验证和百度类似，我选的标签验证，在主题配置文件中修改：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yam&quot; data-language=&quot;yam&quot;&gt;&lt;code class=&quot;language-yam&quot;&gt;# Google Webmaster tools verification setting
# See: https:&amp;#x2F;&amp;#x2F;www.google.com&amp;#x2F;webmasters&amp;#x2F;
google_site_verification: xxxxxxxxxxxxx # 此处改为google提供给你的HTML标签content后的内容&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%A2%AB%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95/image-20211113222848795.png&quot; alt=&quot;image-20211113222848795&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;提交Sitemap&quot;&gt;&lt;a href=&quot;#提交Sitemap&quot; class=&quot;headerlink&quot; title=&quot;提交Sitemap&quot;&gt;&lt;/a&gt;提交Sitemap&lt;/h2&gt;&lt;p&gt;参考链接&lt;/p&gt;
&lt;p&gt;​    &lt;a href=&quot;https://www.luanzhuxian.com/post/82d92ad4.html&quot;&gt;Hexo + Next 主题博客提交百度谷歌收录&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>MATLAB中使用CSV文件</title>
    <link href="https://rongkangxiong.top/post/MATLAB%E4%B8%AD%E4%BD%BF%E7%94%A8CSV%E6%96%87%E4%BB%B6.html"/>
    <id>https://rongkangxiong.top/post/MATLAB%E4%B8%AD%E4%BD%BF%E7%94%A8CSV%E6%96%87%E4%BB%B6.html</id>
    <published>2021-11-13T07:36:38.000Z</published>
    <updated>2021-11-13T07:51:25.433Z</updated>
    
    <content type="html"><![CDATA[<h1 id="读取CSV文件"><a href="#读取CSV文件" class="headerlink" title="读取CSV文件"></a>读取CSV文件</h1><h2 id="csvread只能读取纯数值的CSV文件"><a href="#csvread只能读取纯数值的CSV文件" class="headerlink" title="csvread只能读取纯数值的CSV文件"></a><code>csvread</code>只能读取纯数值的<code>CSV</code>文件</h2><p>查看帮助</p><pre class="line-numbers language-matla" data-language="matla"><code class="language-matla">help csvread</code></pre><p>读取文件格式:</p><pre class="line-numbers language-matl" data-language="matl"><code class="language-matl">a &#x3D; csvread(&#39;1.csv&#39;)disp(a)</code></pre><h1 id="创建CSV文件"><a href="#创建CSV文件" class="headerlink" title="创建CSV文件"></a>创建CSV文件</h1><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;读取CSV文件&quot;&gt;&lt;a href=&quot;#读取CSV文件&quot; class=&quot;headerlink&quot; title=&quot;读取CSV文件&quot;&gt;&lt;/a&gt;读取CSV文件&lt;/h1&gt;&lt;h2 id=&quot;csvread只能读取纯数值的CSV文件&quot;&gt;&lt;a href=&quot;#csvread只能读取纯数值的CSV文件&quot; class=&quot;headerlink&quot; title=&quot;csvread只能读取纯数值的CSV文件&quot;&gt;&lt;/a&gt;&lt;code&gt;csvread&lt;/code&gt;只能读取纯数值的&lt;code&gt;CSV&lt;/code&gt;文件&lt;/h2&gt;&lt;p&gt;查看帮助&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-matla&quot; data-language=&quot;matla&quot;&gt;&lt;code class=&quot;language-matla&quot;&gt;help csvread&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;读取文件格式:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-matl&quot; data-language=&quot;matl&quot;&gt;&lt;code class=&quot;language-matl&quot;&gt;a &amp;#x3D; csvread(&amp;#39;1.csv&amp;#39;)
disp(a)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;创建CSV文件&quot;&gt;&lt;a href=&quot;#创建CSV文件&quot; class=&quot;headerlink&quot; title=&quot;创建CSV文件&quot;&gt;&lt;/a&gt;创建CSV文件&lt;/h1&gt;</summary>
    
    
    
    <category term="MATLAB" scheme="https://rongkangxiong.top/categories/MATLAB/"/>
    
    <category term="CSV" scheme="https://rongkangxiong.top/categories/MATLAB/CSV/"/>
    
    
    <category term="MATLAB" scheme="https://rongkangxiong.top/tags/MATLAB/"/>
    
    <category term="CSV" scheme="https://rongkangxiong.top/tags/CSV/"/>
    
    <category term="文件操作" scheme="https://rongkangxiong.top/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>如何用Colab使用WormPose</title>
    <link href="https://rongkangxiong.top/post/%E5%A6%82%E4%BD%95%E7%94%A8Colab%E4%BD%BF%E7%94%A8WormPose.html"/>
    <id>https://rongkangxiong.top/post/%E5%A6%82%E4%BD%95%E7%94%A8Colab%E4%BD%BF%E7%94%A8WormPose.html</id>
    <published>2021-11-13T03:17:14.000Z</published>
    <updated>2021-11-13T03:40:56.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>有登陆速率限制</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E7%94%A8Colab%E4%BD%BF%E7%94%A8WormPose/image-20211113113629696.png" alt="image-20211113113629696"></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;设置&quot;&gt;&lt;a href=&quot;#设置&quot; class=&quot;headerlink&quot; title=&quot;设置&quot;&gt;&lt;/a&gt;设置&lt;/h1&gt;&lt;p&gt;有登陆速率限制&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E7%94%A8Colab%E4%BD%BF%E7%94%A8WormPose/image-20211113113629696.png&quot; alt=&quot;image-20211113113629696&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://rongkangxiong.top/categories/Python/"/>
    
    <category term="Colab" scheme="https://rongkangxiong.top/categories/Python/Colab/"/>
    
    <category term="WormPose" scheme="https://rongkangxiong.top/categories/Python/Colab/WormPose/"/>
    
    
    <category term="Colab" scheme="https://rongkangxiong.top/tags/Colab/"/>
    
    <category term="Python" scheme="https://rongkangxiong.top/tags/Python/"/>
    
    <category term="WormPose" scheme="https://rongkangxiong.top/tags/WormPose/"/>
    
  </entry>
  
  <entry>
    <title>用在Hexo博客写作中用Typora快捷插入图像</title>
    <link href="https://rongkangxiong.top/post/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F.html"/>
    <id>https://rongkangxiong.top/post/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F.html</id>
    <published>2021-11-12T17:29:04.000Z</published>
    <updated>2021-11-12T17:43:54.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载Typora"><a href="#下载Typora" class="headerlink" title="下载Typora"></a>下载Typora</h1><p><a href="https://www.typora.io/">Typora官网链接</a></p><p>现在安装好后</p><p>打开<code>文件-设置偏好</code></p><span id="more"></span><img src="../images/blog/用Typora快捷插入图像/image-20211113012957221.png" alt="image-20211113012957221"  /><p>点击<code>图像-选择操作 复制到指定路径</code></p><p><img src="../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113013313305.png" alt="image-20211113013313305"></p><p>输入一下代码，没有文件夹的可以选择创建文件夹：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">你的blog的路径\source\images\blog\$&#123;filename&#125;</code></pre><p>下面的两项打上勾</p><p>然后我们测试</p><p>直接复制一张图片粘贴到Typora中</p><p><img src="../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113013626874.png" alt="image-20211113013626874"></p><p>效果如图</p><p><img src="../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113013709011.png" alt="image-20211113013709011"></p><p><code>Ctrl+s</code>保存一下<code>md</code>文件，然后我们打开网页查看是否有图片</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">hexo s</code></pre><p><img src="../images/blog/%E7%94%A8Typora%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/image-20211113014052910.png" alt="image-20211113014052910"></p><p>Nice!</p><p>本地编辑器和网页都有了图像</p><p>尝试了路径各种排列组合，VScode伤透了我的心，同样的路径格式就是要么VScode有图像，要么网页没图像</p><p>最后终于尝试出了一种办法！</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;下载Typora&quot;&gt;&lt;a href=&quot;#下载Typora&quot; class=&quot;headerlink&quot; title=&quot;下载Typora&quot;&gt;&lt;/a&gt;下载Typora&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.typora.io/&quot;&gt;Typora官网链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;现在安装好后&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;文件-设置偏好&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Typora" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Typora/"/>
    
    
    <category term="Hexo" scheme="https://rongkangxiong.top/tags/Hexo/"/>
    
    <category term="Typora" scheme="https://rongkangxiong.top/tags/Typora/"/>
    
    <category term="插入图像" scheme="https://rongkangxiong.top/tags/%E6%8F%92%E5%85%A5%E5%9B%BE%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>常用网址查询</title>
    <link href="https://rongkangxiong.top/post/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%E6%9F%A5%E8%AF%A2.html"/>
    <id>https://rongkangxiong.top/post/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%E6%9F%A5%E8%AF%A2.html</id>
    <published>2021-11-12T15:49:49.000Z</published>
    <updated>2021-11-12T15:53:07.313Z</updated>
    
    <content type="html"><![CDATA[<p><a href="source/../../keep_html/color.html">颜色代码查询https://rongkangxiong.top/keep_html/color.html</a></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;source/../../keep_html/color.html&quot;&gt;颜色代码查询https://rongkangxiong.top/keep_html/color.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
  </entry>
  
  <entry>
    <title>如何使用Google的Colab</title>
    <link href="https://rongkangxiong.top/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab.html"/>
    <id>https://rongkangxiong.top/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab.html</id>
    <published>2021-11-12T14:34:00.000Z</published>
    <updated>2021-11-13T07:20:27.955Z</updated>
    
    <content type="html"><![CDATA[<p>Google Colab(Colaboratory) 是一个研究项目，可免费使用。<br>旨在帮助传播机器学习培训和研究成果。它是一个 Jupyter 笔记本环境，不需要进行任何设置就可以使用，并且完全在云端运行</p><h1 id="创建Colab"><a href="#创建Colab" class="headerlink" title="创建Colab"></a>创建Colab</h1><p>登录<a href="https://drive.google.com/drive/my-drive">GoogleDriver地址 https://drive.google.com/drive/my-drive</a></p><p>点击 <code>我的云端硬盘-更多-关联更多应用</code></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105751743.png" alt="image-20211113105751743"></p><p>选择<code>Colaboratory</code>然后点击进去安装</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105832690.png" alt="image-20211113105832690"></p><p>安装Colaboratory插件,选择自己的Google账号，，选择与Google云端硬盘关联</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105925943.png" alt="image-20211113105925943"></p><p>新建Colaborator</p><img src="../images/blog/如何使用Google的Colab/image-20211113110211489.png" alt="image-20211113110211489" style="zoom: 67%;" /><p>链接到Google云端硬盘</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110505754.png" alt="image-20211113110505754"></p><p>允许授权</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110430488.png" alt="image-20211113110430488"></p><p>然后你的文件夹编程如下形式</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110605422.png" alt="image-20211113110605422"></p><p>查看是否能使用GPU</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">import tensorflow as tftf.test.gpu_device_name()</code></pre><p>如果结果为空，则不能使用GPU</p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110919130.png" alt="image-20211113110919130"></p><p>选择<code>Runtime-GPU-Save</code>然后再重新运行代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">import tensorflow as tftf.test.gpu_device_name()</code></pre><p>如果结果为<code>/device:GPU:0</code></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111100800.png" alt="image-20211113111100800"></p><p>使用<code>!/opt/bin/nvidia-smi</code>查看显存情况</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">!&#x2F;opt&#x2F;bin&#x2F;nvidia-smi</code></pre><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111158328.png" alt="image-20211113111158328"></p><p>查看显卡内存使用上限</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">from tensorflow.python.client import device_libdevice_lib.list_local_devices()</code></pre><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111238429.png" alt="image-20211113111238429"></p><p>查看内存信息</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">!cat &#x2F;proc&#x2F;meminfo</code></pre><p>查看CPU信息</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">!cat &#x2F;proc&#x2F;cupinfo</code></pre><h1 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h1><h2 id="挂载Google云盘"><a href="#挂载Google云盘" class="headerlink" title="挂载Google云盘"></a>挂载Google云盘</h2><p>这一步很重要，Colab的运行原理实际上就是给你分配一台远程的带GPU的主机，所以它的原始路径不是你的谷歌云盘（也就是你的代码文件）所在的路径。所以第一步我们先要把谷歌云盘挂载带到那台远程主机上</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">from google.colab import drivedrive.mount(&#39;&#x2F;content&#x2F;drive&#39;)</code></pre><h2 id="更改运行目录"><a href="#更改运行目录" class="headerlink" title="更改运行目录"></a>更改运行目录</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">import osos.chdir(&quot;&#x2F;content&#x2F;gdrive&#x2F;My Drive&#x2F;Colab Notebooks&#x2F;Hashing&quot;)</code></pre><h1 id="重要的事情！！！"><a href="#重要的事情！！！" class="headerlink" title="重要的事情！！！"></a>重要的事情！！！</h1><h2 id="Error-404-rate-limit-exceeded"><a href="#Error-404-rate-limit-exceeded" class="headerlink" title="Error 404: rate_limit_exceeded"></a>Error 404: rate_limit_exceeded</h2><p>Google 对应用的新用户登录频率设有上限。您可以稍后尝试重新登录，或者要求开发者 (<a href="mailto:&#x64;&#114;&#x69;&#x76;&#x65;&#x2d;&#x66;&#x69;&#108;&#101;&#45;&#x73;&#116;&#114;&#x65;&#x61;&#x6d;&#x2d;&#x66;&#101;&#x65;&#x64;&#98;&#97;&#99;&#x6b;&#64;&#103;&#x6f;&#x6f;&#x67;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;">&#x64;&#114;&#x69;&#x76;&#x65;&#x2d;&#x66;&#x69;&#108;&#101;&#45;&#x73;&#116;&#114;&#x65;&#x61;&#x6d;&#x2d;&#x66;&#101;&#x65;&#x64;&#98;&#97;&#99;&#x6b;&#64;&#103;&#x6f;&#x6f;&#x67;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;</a>) 提高此应用的登录速率限制。</p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>出现403错误是因为gdrive使用的谷歌的API使用频率超限，这个API调用的凭据（Credentials）是集成在gdrive里的，使用的人太多了，就导致超限错误</p><p>所以为了解决这个错误，就需要把gdrive里内置的ClientId和ClientSecret替换为我们自己的。</p><h2 id="申请API"><a href="#申请API" class="headerlink" title="申请API"></a>申请API</h2><ul><li><p>登陆Google API服务</p><p><a href="https://console.developers.google.com/apis/dashboard">https://console.developers.google.com/apis/dashboard</a></p><p>需要统一服务条款</p></li><li><p>创建项目</p></li></ul><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113143740935.png" alt="image-20211113143740935"></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113143814842.png" alt="image-20211113143814842"></p><p>项目名称随意填写</p><ul><li>启用Google Drive API</li></ul><p>打开<a href="https://console.developers.google.com/apis/library/drive.googleapis.com">https://console.developers.google.com/apis/library/drive.googleapis.com</a>点击<strong>启用</strong></p><p><img src="../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113144026038.png" alt="image-20211113144026038"></p><ul><li>创建凭据</li></ul><p>参考链接</p><p>​        <a href="https://blog.csdn.net/qq122716072/article/details/106779195">如何使用Google Colab免费算力训练自己的模型</a></p><p>​        <a href="https://www.cnblogs.com/think90/articles/13072937.html">如何正确使用Google Colab</a></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;Google Colab(Colaboratory) 是一个研究项目，可免费使用。&lt;br&gt;旨在帮助传播机器学习培训和研究成果。它是一个 Jupyter 笔记本环境，不需要进行任何设置就可以使用，并且完全在云端运行&lt;/p&gt;
&lt;h1 id=&quot;创建Colab&quot;&gt;&lt;a href=&quot;#创建Colab&quot; class=&quot;headerlink&quot; title=&quot;创建Colab&quot;&gt;&lt;/a&gt;创建Colab&lt;/h1&gt;&lt;p&gt;登录&lt;a href=&quot;https://drive.google.com/drive/my-drive&quot;&gt;GoogleDriver地址 https://drive.google.com/drive/my-drive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击 &lt;code&gt;我的云端硬盘-更多-关联更多应用&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105751743.png&quot; alt=&quot;image-20211113105751743&quot;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;Colaboratory&lt;/code&gt;然后点击进去安装&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105832690.png&quot; alt=&quot;image-20211113105832690&quot;&gt;&lt;/p&gt;
&lt;p&gt;安装Colaboratory插件,选择自己的Google账号，，选择与Google云端硬盘关联&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113105925943.png&quot; alt=&quot;image-20211113105925943&quot;&gt;&lt;/p&gt;
&lt;p&gt;新建Colaborator&lt;/p&gt;
&lt;img src=&quot;../images/blog/如何使用Google的Colab/image-20211113110211489.png&quot; alt=&quot;image-20211113110211489&quot; style=&quot;zoom: 67%;&quot; /&gt;



&lt;p&gt;链接到Google云端硬盘&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110505754.png&quot; alt=&quot;image-20211113110505754&quot;&gt;&lt;/p&gt;
&lt;p&gt;允许授权&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110430488.png&quot; alt=&quot;image-20211113110430488&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后你的文件夹编程如下形式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110605422.png&quot; alt=&quot;image-20211113110605422&quot;&gt;&lt;/p&gt;
&lt;p&gt;查看是否能使用GPU&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;import tensorflow as tf
tf.test.gpu_device_name()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果结果为空，则不能使用GPU&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113110919130.png&quot; alt=&quot;image-20211113110919130&quot;&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;Runtime-GPU-Save&lt;/code&gt;然后再重新运行代码&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;import tensorflow as tf
tf.test.gpu_device_name()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果结果为&lt;code&gt;/device:GPU:0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111100800.png&quot; alt=&quot;image-20211113111100800&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;!/opt/bin/nvidia-smi&lt;/code&gt;查看显存情况&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;!&amp;#x2F;opt&amp;#x2F;bin&amp;#x2F;nvidia-smi&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111158328.png&quot; alt=&quot;image-20211113111158328&quot;&gt;&lt;/p&gt;
&lt;p&gt;查看显卡内存使用上限&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;from tensorflow.python.client import device_lib
device_lib.list_local_devices()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113111238429.png&quot; alt=&quot;image-20211113111238429&quot;&gt;&lt;/p&gt;
&lt;p&gt;查看内存信息&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;!cat &amp;#x2F;proc&amp;#x2F;meminfo&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看CPU信息&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;!cat &amp;#x2F;proc&amp;#x2F;cupinfo&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;运行代码&quot;&gt;&lt;a href=&quot;#运行代码&quot; class=&quot;headerlink&quot; title=&quot;运行代码&quot;&gt;&lt;/a&gt;运行代码&lt;/h1&gt;&lt;h2 id=&quot;挂载Google云盘&quot;&gt;&lt;a href=&quot;#挂载Google云盘&quot; class=&quot;headerlink&quot; title=&quot;挂载Google云盘&quot;&gt;&lt;/a&gt;挂载Google云盘&lt;/h2&gt;&lt;p&gt;这一步很重要，Colab的运行原理实际上就是给你分配一台远程的带GPU的主机，所以它的原始路径不是你的谷歌云盘（也就是你的代码文件）所在的路径。所以第一步我们先要把谷歌云盘挂载带到那台远程主机上&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;from google.colab import drive
drive.mount(&amp;#39;&amp;#x2F;content&amp;#x2F;drive&amp;#39;)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;更改运行目录&quot;&gt;&lt;a href=&quot;#更改运行目录&quot; class=&quot;headerlink&quot; title=&quot;更改运行目录&quot;&gt;&lt;/a&gt;更改运行目录&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;import os
os.chdir(&amp;quot;&amp;#x2F;content&amp;#x2F;gdrive&amp;#x2F;My Drive&amp;#x2F;Colab Notebooks&amp;#x2F;Hashing&amp;quot;)&lt;/code&gt;&lt;/pre&gt;



&lt;h1 id=&quot;重要的事情！！！&quot;&gt;&lt;a href=&quot;#重要的事情！！！&quot; class=&quot;headerlink&quot; title=&quot;重要的事情！！！&quot;&gt;&lt;/a&gt;重要的事情！！！&lt;/h1&gt;&lt;h2 id=&quot;Error-404-rate-limit-exceeded&quot;&gt;&lt;a href=&quot;#Error-404-rate-limit-exceeded&quot; class=&quot;headerlink&quot; title=&quot;Error 404: rate_limit_exceeded&quot;&gt;&lt;/a&gt;Error 404: rate_limit_exceeded&lt;/h2&gt;&lt;p&gt;Google 对应用的新用户登录频率设有上限。您可以稍后尝试重新登录，或者要求开发者 (&lt;a href=&quot;mailto:&amp;#x64;&amp;#114;&amp;#x69;&amp;#x76;&amp;#x65;&amp;#x2d;&amp;#x66;&amp;#x69;&amp;#108;&amp;#101;&amp;#45;&amp;#x73;&amp;#116;&amp;#114;&amp;#x65;&amp;#x61;&amp;#x6d;&amp;#x2d;&amp;#x66;&amp;#101;&amp;#x65;&amp;#x64;&amp;#98;&amp;#97;&amp;#99;&amp;#x6b;&amp;#64;&amp;#103;&amp;#x6f;&amp;#x6f;&amp;#x67;&amp;#x6c;&amp;#x65;&amp;#x2e;&amp;#x63;&amp;#111;&amp;#109;&quot;&gt;&amp;#x64;&amp;#114;&amp;#x69;&amp;#x76;&amp;#x65;&amp;#x2d;&amp;#x66;&amp;#x69;&amp;#108;&amp;#101;&amp;#45;&amp;#x73;&amp;#116;&amp;#114;&amp;#x65;&amp;#x61;&amp;#x6d;&amp;#x2d;&amp;#x66;&amp;#101;&amp;#x65;&amp;#x64;&amp;#98;&amp;#97;&amp;#99;&amp;#x6b;&amp;#64;&amp;#103;&amp;#x6f;&amp;#x6f;&amp;#x67;&amp;#x6c;&amp;#x65;&amp;#x2e;&amp;#x63;&amp;#111;&amp;#109;&lt;/a&gt;) 提高此应用的登录速率限制。&lt;/p&gt;
&lt;h2 id=&quot;问题原因&quot;&gt;&lt;a href=&quot;#问题原因&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h2&gt;&lt;p&gt;出现403错误是因为gdrive使用的谷歌的API使用频率超限，这个API调用的凭据（Credentials）是集成在gdrive里的，使用的人太多了，就导致超限错误&lt;/p&gt;
&lt;p&gt;所以为了解决这个错误，就需要把gdrive里内置的ClientId和ClientSecret替换为我们自己的。&lt;/p&gt;
&lt;h2 id=&quot;申请API&quot;&gt;&lt;a href=&quot;#申请API&quot; class=&quot;headerlink&quot; title=&quot;申请API&quot;&gt;&lt;/a&gt;申请API&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;登陆Google API服务&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://console.developers.google.com/apis/dashboard&quot;&gt;https://console.developers.google.com/apis/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;需要统一服务条款&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建项目&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113143740935.png&quot; alt=&quot;image-20211113143740935&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113143814842.png&quot; alt=&quot;image-20211113143814842&quot;&gt;&lt;/p&gt;
&lt;p&gt;项目名称随意填写&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启用Google Drive API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开&lt;a href=&quot;https://console.developers.google.com/apis/library/drive.googleapis.com&quot;&gt;https://console.developers.google.com/apis/library/drive.googleapis.com&lt;/a&gt;点击&lt;strong&gt;启用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/blog/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google%E7%9A%84Colab/image-20211113144026038.png&quot; alt=&quot;image-20211113144026038&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建凭据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考链接&lt;/p&gt;
&lt;p&gt;​        &lt;a href=&quot;https://blog.csdn.net/qq122716072/article/details/106779195&quot;&gt;如何使用Google Colab免费算力训练自己的模型&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​        &lt;a href=&quot;https://www.cnblogs.com/think90/articles/13072937.html&quot;&gt;如何正确使用Google Colab&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://rongkangxiong.top/categories/Python/"/>
    
    <category term="Colab" scheme="https://rongkangxiong.top/categories/Python/Colab/"/>
    
    
    <category term="Colab" scheme="https://rongkangxiong.top/tags/Colab/"/>
    
    <category term="机器学习" scheme="https://rongkangxiong.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Python" scheme="https://rongkangxiong.top/tags/Python/"/>
    
    <category term="Jupyter notebook" scheme="https://rongkangxiong.top/tags/Jupyter-notebook/"/>
    
  </entry>
  
  <entry>
    <title>用Pycharm跑Jupyter在远程服务器上运行</title>
    <link href="https://rongkangxiong.top/post/%E7%94%A8Pycharm%E8%B7%91Jupyter%E5%9C%A8%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8C.html"/>
    <id>https://rongkangxiong.top/post/%E7%94%A8Pycharm%E8%B7%91Jupyter%E5%9C%A8%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E8%BF%90%E8%A1%8C.html</id>
    <published>2021-11-12T07:44:28.000Z</published>
    <updated>2021-11-12T15:51:15.194Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</summary>
      
    
    
    
    <category term="Python" scheme="https://rongkangxiong.top/categories/Python/"/>
    
    <category term="Jupyter notebook" scheme="https://rongkangxiong.top/categories/Python/Jupyter-notebook/"/>
    
    
    <category term="Jupyter notebook" scheme="https://rongkangxiong.top/tags/Jupyter-notebook/"/>
    
    <category term="Pycharm" scheme="https://rongkangxiong.top/tags/Pycharm/"/>
    
    <category term="服务器" scheme="https://rongkangxiong.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="https://rongkangxiong.top/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <id>https://rongkangxiong.top/post/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</id>
    <published>2021-11-12T05:34:35.000Z</published>
    <updated>2021-11-13T14:30:31.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux进程管理"><a href="#Linux进程管理" class="headerlink" title="Linux进程管理"></a>Linux进程管理</h1><h2 id="清除Terminal界面"><a href="#清除Terminal界面" class="headerlink" title="清除Terminal界面"></a>清除Terminal界面</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">clear</code></pre><h2 id="显示正在运行的CPU进程"><a href="#显示正在运行的CPU进程" class="headerlink" title="显示正在运行的CPU进程"></a>显示正在运行的CPU进程</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">htop</code></pre><p><img src="../images/blog/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/image-20211113130948515.png" alt="image-20211113130948515"></p><h2 id="显示正在运行的GPU进程"><a href="#显示正在运行的GPU进程" class="headerlink" title="显示正在运行的GPU进程"></a>显示正在运行的GPU进程</h2><p>显示正在运行的GPU进程</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">nvidia-smi</code></pre><p><img src="../images/blog/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/image-20211113131005993.png" alt="image-20211113131005993"></p><h2 id="清理进程"><a href="#清理进程" class="headerlink" title="清理进程"></a>清理进程</h2><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">kill -9 PID</code></pre><p>其中<code>PID</code> 是你的进程编号</p><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="统计文件夹下面文件个数"><a href="#统计文件夹下面文件个数" class="headerlink" title="统计文件夹下面文件个数"></a>统计文件夹下面文件个数</h2><p>长列表输出该目录下文件信息(注意这里的文件是指目录、链接、设备文件等)，每一行对应一个文件或目录</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">ls -l # 查看详细信息ls -a #查看隐藏文件ls -la #同时具备上述两者特点</code></pre><p>统计当前目录下文件的个数包括子目录</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">ls -lR</code></pre><p>查看文件中内容</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">cat</code></pre><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><ul><li><p>直接删除</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">rm filename</code></pre></li><li><p>删除前提示</p><pre class="line-numbers language-pytho" data-language="pytho"><code class="language-pytho">rm -i filename</code></pre></li><li><p>强制删除</p><pre class="line-numbers language-py" data-language="py"><code class="language-py">rm -f filename</code></pre></li><li><p>递归删除</p><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux">rm -rf &#x2F;dir</code></pre></li></ul><h2 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h2><ul><li>删除名为<code>Mydocuments</code>的空文件夹</li></ul><pre class="line-numbers language-py" data-language="py"><code class="language-py">rmdir Mydocuments</code></pre><p>如果文件夹不是空的，会提示 <code>rmdir: failed to remove ‘MyDocuments’: Directory not empty</code></p><ul><li><p>使用<code>rm</code>递归删除来删除，会删除所有目录和子目录，不提示</p><pre class="line-numbers language-py" data-language="py"><code class="language-py">rm -rf dir1 dir2 dir3</code></pre></li><li><p>删除所有空目录</p><pre class="line-numbers language-py" data-language="py"><code class="language-py">find . -type d -empty -delete</code></pre><p><code>-empty</code>只对空目录进行限制</p><p><code>-delete</code>删除包括子目录在内的所有空目录</p></li></ul><h1 id="文件创建"><a href="#文件创建" class="headerlink" title="文件创建"></a>文件创建</h1><p><code>echo</code>文字输入</p><pre class="line-numbers language-linux" data-language="linux"><code class="language-linux">echo xxx &gt; y.txt  # 把 xxx 内容放到 y.txt 文件中，如果没有这个文件则创建这个文件，新存放的内容会替换原有文件的内容</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux进程管理&quot;&gt;&lt;a href=&quot;#Linux进程管理&quot; class=&quot;headerlink&quot; title=&quot;Linux进程管理&quot;&gt;&lt;/a&gt;Linux进程管理&lt;/h1&gt;&lt;h2 id=&quot;清除Terminal界面&quot;&gt;&lt;a href=&quot;#清除Terminal界面&quot;</summary>
      
    
    
    
    <category term="常用" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/"/>
    
    <category term="Linux" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/Linux/"/>
    
    
    <category term="Linux" scheme="https://rongkangxiong.top/tags/Linux/"/>
    
    <category term="命令" scheme="https://rongkangxiong.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
    <category term="常用" scheme="https://rongkangxiong.top/tags/%E5%B8%B8%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Markdown常用语法</title>
    <link href="https://rongkangxiong.top/post/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html"/>
    <id>https://rongkangxiong.top/post/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html</id>
    <published>2021-11-12T05:02:59.000Z</published>
    <updated>2021-11-12T16:58:27.170Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.typora.io/#windows">Typora下载</a></p><h1 id="小功能"><a href="#小功能" class="headerlink" title="小功能"></a>小功能</h1><h2 id="启用预览功能"><a href="#启用预览功能" class="headerlink" title="启用预览功能"></a>启用预览功能</h2><p>直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能此代码下面的内容</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;!--more--&gt;</code></pre><h2 id="文章内部锚点跳转"><a href="#文章内部锚点跳转" class="headerlink" title="文章内部锚点跳转"></a>文章内部锚点跳转</h2><p>这个方式是由John Tsai给出的，分成两步：</p><ul><li>定义一个锚(id)：</li></ul><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;span id&#x3D;&quot;jump&quot;&gt;跳转到的地方&lt;&#x2F;span&gt;</code></pre><ul><li>使用markdown语法：</li></ul><pre class="line-numbers language-md" data-language="md"><code class="language-md">[点击跳转](#jump)</code></pre><h2 id="自己写的文章的跳转"><a href="#自己写的文章的跳转" class="headerlink" title="自己写的文章的跳转"></a>自己写的文章的跳转</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](&#x2F;forder-to-you-file)</code></pre><p>例子:</p><ul><li><p>跳转到<a href="/post/Firstblog.html">我的第一篇博客</a></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[我的第一篇博客](&#x2F;post&#x2F;Firstblog.html)</code></pre></li><li><p>跳转到<a href="/mynotes/math/common_dstribute.html">我的笔记</a><br>  在内部的位置是<code>myblog/source/mynotes/math/common_dstribute.html</code></p>  <pre class="line-numbers language-md" data-language="md"><code class="language-md">[我的笔记](&#x2F;mynotes&#x2F;math&#x2F;common_dstribute.html)</code></pre></li></ul><h2 id="链接跳转"><a href="#链接跳转" class="headerlink" title="链接跳转"></a>链接跳转</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](链接)</code></pre><h1 id="如何插入图片"><a href="#如何插入图片" class="headerlink" title="如何插入图片"></a>如何插入图片</h1><p>HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用</p><p>Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片</p><p>在<code>source</code>中新建一个<code>images</code>目录用于存放图片，将图片放在该目录下，示例:</p><h2 id="例1-如在任意-post目录下的文章中引用"><a href="#例1-如在任意-post目录下的文章中引用" class="headerlink" title="例1. 如在任意_post目录下的文章中引用"></a>例1. 如在任意<code>_post</code>目录下的文章中引用</h2><p><code>myblog/source/images/notecover/Firstblog.png</code>的这张图片<br>想引用的时候VScode和网页都能看到要用如下格式</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![](images&#x2F;notecover&#x2F;..&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)或者![](images&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><p>如果使用格式以下格式</p><h3 id="网页端看不到的格式-VScode能看到"><a href="#网页端看不到的格式-VScode能看到" class="headerlink" title="网页端看不到的格式|VScode能看到"></a>网页端看不到的格式|VScode能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)![ceshi](&#x2F;source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><h3 id="VsCode看不到的格式-网页端能看到"><a href="#VsCode看不到的格式-网页端能看到" class="headerlink" title="VsCode看不到的格式|网页端能看到"></a>VsCode看不到的格式|网页端能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><h3 id="网页端和VsCode都看不到的格式"><a href="#网页端和VsCode都看不到的格式" class="headerlink" title="网页端和VsCode都看不到的格式"></a>网页端和VsCode都看不到的格式</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)![ceshi](&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><h2 id="例2-引用同级目录的同名文件夹下的图片"><a href="#例2-引用同级目录的同名文件夹下的图片" class="headerlink" title="例2.引用同级目录的同名文件夹下的图片"></a>例2.引用同级目录的同名文件夹下的图片</h2><p><code>myblog/source/_post/Linux常用命令.md</code>文件中插入<code>myblog/source/_post/Linux常用命令/cup进程.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](_post&#x2F;Linux常用命令&#x2F;..&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><p>下面的方法只能在文章<code>Linux常用命令.md</code>中插入同文件夹路径下的图片<code>Linux常用命令/tupian.png</code></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](Linux常用命令&#x2F;GUP进程.png)</code></pre><h3 id="VScode能看到的格式-网页端看不到"><a href="#VScode能看到的格式-网页端看不到" class="headerlink" title="VScode能看到的格式|网页端看不到"></a>VScode能看到的格式|网页端看不到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><h3 id="网页端能看到的格式-VScode看不到"><a href="#网页端能看到的格式-VScode看不到" class="headerlink" title="网页端能看到的格式|VScode看不到"></a>网页端能看到的格式|VScode看不到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;_post&#x2F;_Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;GUP进程.png)![ceshi](GUP进程.png)</code></pre><h3 id="网页端和VScode都不能看到"><a href="#网页端和VScode都不能看到" class="headerlink" title="网页端和VScode都不能看到"></a>网页端和VScode都不能看到</h3><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;_post&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><span id="more"></span><h1 id="VSCode快捷键"><a href="#VSCode快捷键" class="headerlink" title="VSCode快捷键"></a>VSCode快捷键</h1><h2 id="快速修复"><a href="#快速修复" class="headerlink" title="快速修复"></a>快速修复</h2><p><code>Windows</code> 上是 <code>Ctrl + .</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.typora.io/#windows&quot;&gt;Typora下载&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;小功能&quot;&gt;&lt;a href=&quot;#小功能&quot; class=&quot;headerlink&quot; title=&quot;小功能&quot;&gt;&lt;/a&gt;小功能&lt;/h1&gt;&lt;h2 id=&quot;启用预览功能&quot;&gt;&lt;a href=&quot;#启用预览功能&quot; class=&quot;headerlink&quot; title=&quot;启用预览功能&quot;&gt;&lt;/a&gt;启用预览功能&lt;/h2&gt;&lt;p&gt;直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能此代码下面的内容&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;文章内部锚点跳转&quot;&gt;&lt;a href=&quot;#文章内部锚点跳转&quot; class=&quot;headerlink&quot; title=&quot;文章内部锚点跳转&quot;&gt;&lt;/a&gt;文章内部锚点跳转&lt;/h2&gt;&lt;p&gt;这个方式是由John Tsai给出的，分成两步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义一个锚(id)：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;&amp;lt;span id&amp;#x3D;&amp;quot;jump&amp;quot;&amp;gt;跳转到的地方&amp;lt;&amp;#x2F;span&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;使用markdown语法：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[点击跳转](#jump)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;自己写的文章的跳转&quot;&gt;&lt;a href=&quot;#自己写的文章的跳转&quot; class=&quot;headerlink&quot; title=&quot;自己写的文章的跳转&quot;&gt;&lt;/a&gt;自己写的文章的跳转&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[名称](&amp;#x2F;forder-to-you-file)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例子:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;跳转到&lt;a href=&quot;/post/Firstblog.html&quot;&gt;我的第一篇博客&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[我的第一篇博客](&amp;#x2F;post&amp;#x2F;Firstblog.html)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;跳转到&lt;a href=&quot;/mynotes/math/common_dstribute.html&quot;&gt;我的笔记&lt;/a&gt;&lt;br&gt;  在内部的位置是&lt;code&gt;myblog/source/mynotes/math/common_dstribute.html&lt;/code&gt;&lt;/p&gt;
  &lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[我的笔记](&amp;#x2F;mynotes&amp;#x2F;math&amp;#x2F;common_dstribute.html)&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;链接跳转&quot;&gt;&lt;a href=&quot;#链接跳转&quot; class=&quot;headerlink&quot; title=&quot;链接跳转&quot;&gt;&lt;/a&gt;链接跳转&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[名称](链接)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;如何插入图片&quot;&gt;&lt;a href=&quot;#如何插入图片&quot; class=&quot;headerlink&quot; title=&quot;如何插入图片&quot;&gt;&lt;/a&gt;如何插入图片&lt;/h1&gt;&lt;p&gt;HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用&lt;/p&gt;
&lt;p&gt;Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;source&lt;/code&gt;中新建一个&lt;code&gt;images&lt;/code&gt;目录用于存放图片，将图片放在该目录下，示例:&lt;/p&gt;
&lt;h2 id=&quot;例1-如在任意-post目录下的文章中引用&quot;&gt;&lt;a href=&quot;#例1-如在任意-post目录下的文章中引用&quot; class=&quot;headerlink&quot; title=&quot;例1. 如在任意_post目录下的文章中引用&quot;&gt;&lt;/a&gt;例1. 如在任意&lt;code&gt;_post&lt;/code&gt;目录下的文章中引用&lt;/h2&gt;&lt;p&gt;&lt;code&gt;myblog/source/images/notecover/Firstblog.png&lt;/code&gt;的这张图片&lt;br&gt;想引用的时候VScode和网页都能看到要用如下格式&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![](images&amp;#x2F;notecover&amp;#x2F;..&amp;#x2F;..&amp;#x2F;..&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
或者
![](images&amp;#x2F;..&amp;#x2F;..&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果使用格式以下格式&lt;/p&gt;
&lt;h3 id=&quot;网页端看不到的格式-VScode能看到&quot;&gt;&lt;a href=&quot;#网页端看不到的格式-VScode能看到&quot; class=&quot;headerlink&quot; title=&quot;网页端看不到的格式|VScode能看到&quot;&gt;&lt;/a&gt;网页端看不到的格式|VScode能看到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
![ceshi](&amp;#x2F;source&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;VsCode看不到的格式-网页端能看到&quot;&gt;&lt;a href=&quot;#VsCode看不到的格式-网页端能看到&quot; class=&quot;headerlink&quot; title=&quot;VsCode看不到的格式|网页端能看到&quot;&gt;&lt;/a&gt;VsCode看不到的格式|网页端能看到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;网页端和VsCode都看不到的格式&quot;&gt;&lt;a href=&quot;#网页端和VsCode都看不到的格式&quot; class=&quot;headerlink&quot; title=&quot;网页端和VsCode都看不到的格式&quot;&gt;&lt;/a&gt;网页端和VsCode都看不到的格式&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](source&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
![ceshi](&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;例2-引用同级目录的同名文件夹下的图片&quot;&gt;&lt;a href=&quot;#例2-引用同级目录的同名文件夹下的图片&quot; class=&quot;headerlink&quot; title=&quot;例2.引用同级目录的同名文件夹下的图片&quot;&gt;&lt;/a&gt;例2.引用同级目录的同名文件夹下的图片&lt;/h2&gt;&lt;p&gt;&lt;code&gt;myblog/source/_post/Linux常用命令.md&lt;/code&gt;文件中插入&lt;code&gt;myblog/source/_post/Linux常用命令/cup进程.png&lt;/code&gt;的这张图片想引用的时候VScode和网页都能看到要用如下格式&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](_post&amp;#x2F;..&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](_post&amp;#x2F;Linux常用命令&amp;#x2F;..&amp;#x2F;..&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面的方法只能在文章&lt;code&gt;Linux常用命令.md&lt;/code&gt;中插入同文件夹路径下的图片&lt;code&gt;Linux常用命令/tupian.png&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;VScode能看到的格式-网页端看不到&quot;&gt;&lt;a href=&quot;#VScode能看到的格式-网页端看不到&quot; class=&quot;headerlink&quot; title=&quot;VScode能看到的格式|网页端看不到&quot;&gt;&lt;/a&gt;VScode能看到的格式|网页端看不到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;网页端能看到的格式-VScode看不到&quot;&gt;&lt;a href=&quot;#网页端能看到的格式-VScode看不到&quot; class=&quot;headerlink&quot; title=&quot;网页端能看到的格式|VScode看不到&quot;&gt;&lt;/a&gt;网页端能看到的格式|VScode看不到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](&amp;#x2F;_post&amp;#x2F;_Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;GUP进程.png)
![ceshi](GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;网页端和VScode都不能看到&quot;&gt;&lt;a href=&quot;#网页端和VScode都不能看到&quot; class=&quot;headerlink&quot; title=&quot;网页端和VScode都不能看到&quot;&gt;&lt;/a&gt;网页端和VScode都不能看到&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](_post&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;_post&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="常用" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/"/>
    
    <category term="Markdown" scheme="https://rongkangxiong.top/categories/%E5%B8%B8%E7%94%A8/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://rongkangxiong.top/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-NexT主题添加相册</title>
    <link href="https://rongkangxiong.top/post/add-photo-album.html"/>
    <id>https://rongkangxiong.top/post/add-photo-album.html</id>
    <published>2021-11-11T14:09:55.000Z</published>
    <updated>2021-11-12T04:58:19.995Z</updated>
    
    <content type="html"><![CDATA[<p>相册期待实现效果<br>对于相册，在自己 基于Hexo NexT搭建 的博客上期待实现与豆瓣相册类似的效果，具体如下</p><ul><li>主界面<ul><li>分类相册</li><li>自定义相册名</li><li>自定义封面</li></ul></li><li>分类相册界面<ul><li>三等分列</li><li>点击看大图</li><li>本地图片源/图床外链均可</li><li>与文章插图格式保持统一</li></ul></li><li>其他<ul><li>每张图片都可以有对应的文字描述</li><li>游客可以为图片添加评论</li><li>相册里面也可以插入视频</li></ul></li></ul><span id="more"></span><h1 id="Hexo-NexT博客搭建相册功能"><a href="#Hexo-NexT博客搭建相册功能" class="headerlink" title="Hexo+NexT博客搭建相册功能"></a>Hexo+NexT博客搭建相册功能</h1><h2 id="创建相册目录"><a href="#创建相册目录" class="headerlink" title="创建相册目录"></a>创建相册目录</h2><ul><li>在 <code>git bash</code> 中输入命令 <pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new page gallery</code></pre></li><li>在 <code>hexo/sourse/gallery</code> 目录下建立你需要的分类相册文件夹；</li><li>进入 <code>hexo/sourse/gallery</code> 目录，新建 <code>img</code> 文件夹用来存放相册封面；<br>在每个相册文件夹中创建 <code>img</code> 文件夹用来存放大图，以及 img/s 文件夹用来存放缩略图。<br>注意：<code>img/s</code> 文件夹可以省略不建，用<code>文件名-s.jpg</code> 的格式重命名缩略图即可。</li></ul><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><h3 id="原图处理"><a href="#原图处理" class="headerlink" title="原图处理"></a>原图处理</h3><p>将需要上传的图片放入 <code>gallery/相册名/img</code> 文件夹中，为了加载速度建议压缩至 <code>1mb</code> 以下，使用 <code>jpg</code> 格式保存；<br>除了文件大小以外没有其它要求，但是为了方便后续页面编辑，建议将文件以容易辨识的方式重命名，例如<code>日期-图片名.jpg</code>。</p><p>ps：可以写一个python的gui来搭配使用</p><p><a href="https://tding.top/archives/607c3b85.html">https://tding.top/archives/607c3b85.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;相册期待实现效果&lt;br&gt;对于相册，在自己 基于Hexo NexT搭建 的博客上期待实现与豆瓣相册类似的效果，具体如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主界面&lt;ul&gt;
&lt;li&gt;分类相册&lt;/li&gt;
&lt;li&gt;自定义相册名&lt;/li&gt;
&lt;li&gt;自定义封面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分类相册界面&lt;ul&gt;
&lt;li&gt;三等分列&lt;/li&gt;
&lt;li&gt;点击看大图&lt;/li&gt;
&lt;li&gt;本地图片源/图床外链均可&lt;/li&gt;
&lt;li&gt;与文章插图格式保持统一&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他&lt;ul&gt;
&lt;li&gt;每张图片都可以有对应的文字描述&lt;/li&gt;
&lt;li&gt;游客可以为图片添加评论&lt;/li&gt;
&lt;li&gt;相册里面也可以插入视频&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Hexo" scheme="https://rongkangxiong.top/tags/Hexo/"/>
    
    <category term="NexT" scheme="https://rongkangxiong.top/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>配置博客过程中的各种问题</title>
    <link href="https://rongkangxiong.top/post/question-blog.html"/>
    <id>https://rongkangxiong.top/post/question-blog.html</id>
    <published>2021-11-11T13:53:09.000Z</published>
    <updated>2021-11-11T14:10:32.278Z</updated>
    
    <content type="html"><![CDATA[<p>配置blog过程中遇到的一些问题</p><span id="more"></span><h1 id="点击标签和分类进去发现是空白"><a href="#点击标签和分类进去发现是空白" class="headerlink" title="点击标签和分类进去发现是空白"></a>点击<code>标签</code>和<code>分类</code>进去发现是空白</h1><p>这时候需要打开主题配置文件<code>_config.yml</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:  home: &#x2F; || fa fa-home                      #首页  about: &#x2F;about&#x2F; || fa fa-user               #关于  #tags: &#x2F;tags&#x2F; || fa fa-tags                 #标签  #categories: &#x2F;categories&#x2F; || fa fa-th       #分类</code></pre><p>将<code>tags</code>和<code>categories</code>给注释取消，然后用</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new page tags</code></pre><p>打开生成的tags文件夹下的<code>index.md</code>修改里面的内容添加一行`type:</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: categoriesdate: 2021-11-10 23:11:21type: &quot;tags&quot;  #新加的---</code></pre><p>分类<code>categories</code>同理</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: categoriesdate: 2021-11-10 23:11:21type: &quot;categories&quot;---</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;配置blog过程中遇到的一些问题&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="问题" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="问题" scheme="https://rongkangxiong.top/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>addcount_number</title>
    <link href="https://rongkangxiong.top/post/addcount-number.html"/>
    <id>https://rongkangxiong.top/post/addcount-number.html</id>
    <published>2021-11-11T12:02:48.000Z</published>
    <updated>2021-11-11T13:45:37.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>Next 主题已经合并<br>在NexT主题配置文件中找到</p><pre class="line-numbers language-md" data-language="md"><code class="language-md"># Post wordcount display settings# Dependencies: https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-word-countersymbols_count_time:  symbols: true  time: true  total_symbols: true  total_time: true  exclude_codeblock: false  #允许排出代码块内所有内容，以便进行准确的单词计数  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）  item_text_total: true   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）  awl: 2                   # Average Word Length  wpm: 275                 # Words Per Minute（每分钟阅读词数）  suffix: &quot;mins.&quot;</code></pre><h1 id="busuanzi统计"><a href="#busuanzi统计" class="headerlink" title="busuanzi统计"></a>busuanzi统计</h1><p>NexT已经集成了busuanzi统计功能，只需要在主题配置文件<code>_config.yml</code>文件中将如下代码中的<br><code>enable: flase</code>改为<code>enable: true</code>即可</p><pre class="line-numbers language-njk" data-language="njk"><code class="language-njk"># Show Views &#x2F; Visitors of the website &#x2F; page with busuanzi.# For more information: http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi&#x2F;busuanzi_count:  enable: true  total_visitors: true  total_visitors_icon: fa fa-user  total_views: true  total_views_icon: fa fa-eye  post_views: true  post_views_icon: far fa-eye</code></pre><p>然后</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo cleanhexo ghexo d</code></pre><p>输入密码部署上去可能要等待十分钟左右就可以显示了</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Next 主题已经合并&lt;br&gt;在NexT主题配置文件中找到&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;# Post wordcount display settings
# Dependencies: https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;next-theme&amp;#x2F;hexo-word-counter
symbols_count_time:
  symbols: true
  time: true
  total_symbols: true
  total_time: true
  exclude_codeblock: false  #允许排出代码块内所有内容，以便进行准确的单词计数
  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）
  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）
  item_text_total: true   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）
  awl: 2                   # Average Word Length
  wpm: 275                 # Words Per Minute（每分钟阅读词数）
  suffix: &amp;quot;mins.&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;busuanzi统计&quot;&gt;&lt;a href=&quot;#busuanzi统计&quot; class=&quot;headerlink&quot; title=&quot;busuanzi统计&quot;&gt;&lt;/a&gt;busuanzi统计&lt;/h1&gt;&lt;p&gt;NexT已经集成了busuanzi统计功能，只需要在主题配置文件&lt;code&gt;_config.yml&lt;/code&gt;文件中将如下代码中的&lt;br&gt;&lt;code&gt;enable: flase&lt;/code&gt;改为&lt;code&gt;enable: true&lt;/code&gt;即可&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-njk&quot; data-language=&quot;njk&quot;&gt;&lt;code class=&quot;language-njk&quot;&gt;# Show Views &amp;#x2F; Visitors of the website &amp;#x2F; page with busuanzi.
# For more information: http:&amp;#x2F;&amp;#x2F;ibruce.info&amp;#x2F;2015&amp;#x2F;04&amp;#x2F;04&amp;#x2F;busuanzi&amp;#x2F;
busuanzi_count:
  enable: true
  total_visitors: true
  total_visitors_icon: fa fa-user
  total_views: true
  total_views_icon: fa fa-eye
  post_views: true
  post_views_icon: far fa-eye&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;hexo clean
hexo g
hexo d&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输入密码部署上去可能要等待十分钟左右就可以显示了&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="https://rongkangxiong.top/tags/hexo/"/>
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="访客统计" scheme="https://rongkangxiong.top/tags/%E8%AE%BF%E5%AE%A2%E7%BB%9F%E8%AE%A1/"/>
    
    <category term="阅读统计" scheme="https://rongkangxiong.top/tags/%E9%98%85%E8%AF%BB%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>如何用Markdown书写博客</title>
    <link href="https://rongkangxiong.top/post/writeblog.html"/>
    <id>https://rongkangxiong.top/post/writeblog.html</id>
    <published>2021-11-11T09:08:25.000Z</published>
    <updated>2021-11-12T14:11:18.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h1><p><code>git</code> 中进入根目录输入 <code>hexo new &lt;模板&gt; &lt;文章名&gt;</code> 新建文章<br>其中<code>&lt;模板&gt;</code>在<code>source</code>文件夹下面，默认有三个模板 <code>post</code>,<code>draft</code>,<code>page</code></p><p>命令行输入</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo new post aiticle_title</code></pre><p>此时会在 <code>source/_posts/</code> 文件夹中多了一个 <code>aiticle_title.md</code> 文件<br>打开后可以看到 <code>---</code>之间的内容为文章的配置内容</p><p>模板配置文件可以在<code>/scaffolds/post.md</code>修改<code>post.md</code>模板</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: &#123;&#123; title &#125;&#125;author: 爱养虫的小熊date: &#123;&#123; date &#125;&#125;tags: []categories:    - [个人博客,Hexo]top: 1feature: truemathjx: true  #是否开启数学公式支持comment: true---</code></pre><h1 id="如何插入图片"><a href="#如何插入图片" class="headerlink" title="如何插入图片"></a>如何插入图片</h1><p>HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用</p><p>Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片</p><p>在<code>source</code>中新建一个<code>images</code>目录用于存放图片，将图片放在该目录下，示例:</p><p>例1. 如在<code>myblog/source/images/notecover/Firstblog.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![](images&#x2F;notecover&#x2F;..&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)或者![](images&#x2F;..&#x2F;..&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><p>如果使用格式以下格式</p><h2 id="网页端看不到的格式-VScode能看到"><a href="#网页端看不到的格式-VScode能看到" class="headerlink" title="网页端看不到的格式|VScode能看到"></a>网页端看不到的格式|VScode能看到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)![ceshi](&#x2F;source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><h2 id="VsCode看不到的格式-网页端能看到"><a href="#VsCode看不到的格式-网页端能看到" class="headerlink" title="VsCode看不到的格式|网页端能看到"></a>VsCode看不到的格式|网页端能看到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><h2 id="网页端和VsCode都看不到的格式"><a href="#网页端和VsCode都看不到的格式" class="headerlink" title="网页端和VsCode都看不到的格式"></a>网页端和VsCode都看不到的格式</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](source&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)![ceshi](&#x2F;images&#x2F;notecover&#x2F;Firstblog.png)</code></pre><p>例2.  如在<code>myblog/source/_post/Linux常用命令.md</code>文件中插入<code>myblog/source/_post/Linux常用命令/cup进程.png</code>的这张图片想引用的时候VScode和网页都能看到要用如下格式</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](_post&#x2F;Linux常用命令&#x2F;..&#x2F;..&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><p>下面的方法只能在文章<code>Linux常用命令.md</code>中插入同文件夹路径下的图片<code>Linux常用命令/tupian.png</code></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](Linux常用命令&#x2F;GUP进程.png)</code></pre><h2 id="VScode能看到的格式-网页端看不到"><a href="#VScode能看到的格式-网页端看不到" class="headerlink" title="VScode能看到的格式|网页端看不到"></a>VScode能看到的格式|网页端看不到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><h2 id="网页端能看到的格式-VScode看不到"><a href="#网页端能看到的格式-VScode看不到" class="headerlink" title="网页端能看到的格式|VScode看不到"></a>网页端能看到的格式|VScode看不到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](&#x2F;_post&#x2F;_Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;GUP进程.png)![ceshi](GUP进程.png)</code></pre><h2 id="网页端和VScode都不能看到"><a href="#网页端和VScode都不能看到" class="headerlink" title="网页端和VScode都不能看到"></a>网页端和VScode都不能看到</h2><pre class="line-numbers language-md" data-language="md"><code class="language-md">![ceshi](_post&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;_post&#x2F;Linux常用命令&#x2F;GUP进程.png)![ceshi](&#x2F;Linux常用命令&#x2F;GUP进程.png)</code></pre><h1 id="如何插入链接"><a href="#如何插入链接" class="headerlink" title="如何插入链接"></a>如何插入链接</h1><p>格式:</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[](链接)</code></pre><span id="more"></span><h1 id="hexo-admin插件管理博客写作"><a href="#hexo-admin插件管理博客写作" class="headerlink" title="hexo-admin插件管理博客写作"></a>hexo-admin插件管理博客写作</h1><p>每次新建文章和写作文章都在<code>git</code>命令行中，很不方便，于是可以安装这款插件<br><a href="https://github.com/jaredly/hexo-admin">参考hexo-admin官方页面</a></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">npm install --save hexo-adminhexo ghexo sopen &lt;http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;&gt;</code></pre><p>然后浏览器输入<code>http://localhost:4000/admin/</code>进入管理界面<code>setting</code><br><img src="_post/../writeblog/writeblog_setup.png" alt="设置"><br><img src="post/../writeblog/writeblog_pass.png" alt="登陆"></p><p><a href="/mynotes/math/common_dstribute.html">我的笔记</a></p><p>复制下面生成的 <code>Admin Config Section</code>内容到 <code>/blog/_config.yml</code>粘贴在最后即可<br>之后登陆需要输入账户密码</p><p>在Deploy之前，还要编辑网站配置文件<code>_config.yml</code> （否则会出现<code>Error: Config value &quot;admin.deployCommand&quot; not found</code>)报错<br>如果实在<code>Windows系统</code>，这在末尾加上</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">deployCommand:&#39;hexo-generate.bat&#39;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;创建新文章&quot;&gt;&lt;a href=&quot;#创建新文章&quot; class=&quot;headerlink&quot; title=&quot;创建新文章&quot;&gt;&lt;/a&gt;创建新文章&lt;/h1&gt;&lt;p&gt;&lt;code&gt;git&lt;/code&gt; 中进入根目录输入 &lt;code&gt;hexo new &amp;lt;模板&amp;gt; &amp;lt;文章名&amp;gt;&lt;/code&gt; 新建文章&lt;br&gt;其中&lt;code&gt;&amp;lt;模板&amp;gt;&lt;/code&gt;在&lt;code&gt;source&lt;/code&gt;文件夹下面，默认有三个模板 &lt;code&gt;post&lt;/code&gt;,&lt;code&gt;draft&lt;/code&gt;,&lt;code&gt;page&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;命令行输入&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;hexo new post aiticle_title&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时会在 &lt;code&gt;source/_posts/&lt;/code&gt; 文件夹中多了一个 &lt;code&gt;aiticle_title.md&lt;/code&gt; 文件&lt;br&gt;打开后可以看到 &lt;code&gt;---&lt;/code&gt;之间的内容为文章的配置内容&lt;/p&gt;
&lt;p&gt;模板配置文件可以在&lt;code&gt;/scaffolds/post.md&lt;/code&gt;修改&lt;code&gt;post.md&lt;/code&gt;模板&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;---
title: &amp;#123;&amp;#123; title &amp;#125;&amp;#125;
author: 爱养虫的小熊
date: &amp;#123;&amp;#123; date &amp;#125;&amp;#125;
tags: []
categories:
    - [个人博客,Hexo]
top: 1
feature: true
mathjx: true  #是否开启数学公式支持
comment: true
---&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;如何插入图片&quot;&gt;&lt;a href=&quot;#如何插入图片&quot; class=&quot;headerlink&quot; title=&quot;如何插入图片&quot;&gt;&lt;/a&gt;如何插入图片&lt;/h1&gt;&lt;p&gt;HEXO生成静态界面时，同一篇文章会在多处页面生成，例如首页、文章详情页等，而不同页面与图片的相对位置是不一样的，而该方式hexo不会自动处理图片引用&lt;/p&gt;
&lt;p&gt;Vscode和Hexo在网页渲染的图片位置是不一样的试用好久才发现如下的格式两者都会显示图片&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;source&lt;/code&gt;中新建一个&lt;code&gt;images&lt;/code&gt;目录用于存放图片，将图片放在该目录下，示例:&lt;/p&gt;
&lt;p&gt;例1. 如在&lt;code&gt;myblog/source/images/notecover/Firstblog.png&lt;/code&gt;的这张图片想引用的时候VScode和网页都能看到要用如下格式&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![](images&amp;#x2F;notecover&amp;#x2F;..&amp;#x2F;..&amp;#x2F;..&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
或者
![](images&amp;#x2F;..&amp;#x2F;..&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果使用格式以下格式&lt;/p&gt;
&lt;h2 id=&quot;网页端看不到的格式-VScode能看到&quot;&gt;&lt;a href=&quot;#网页端看不到的格式-VScode能看到&quot; class=&quot;headerlink&quot; title=&quot;网页端看不到的格式|VScode能看到&quot;&gt;&lt;/a&gt;网页端看不到的格式|VScode能看到&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
![ceshi](&amp;#x2F;source&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;VsCode看不到的格式-网页端能看到&quot;&gt;&lt;a href=&quot;#VsCode看不到的格式-网页端能看到&quot; class=&quot;headerlink&quot; title=&quot;VsCode看不到的格式|网页端能看到&quot;&gt;&lt;/a&gt;VsCode看不到的格式|网页端能看到&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;网页端和VsCode都看不到的格式&quot;&gt;&lt;a href=&quot;#网页端和VsCode都看不到的格式&quot; class=&quot;headerlink&quot; title=&quot;网页端和VsCode都看不到的格式&quot;&gt;&lt;/a&gt;网页端和VsCode都看不到的格式&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](source&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)
![ceshi](&amp;#x2F;images&amp;#x2F;notecover&amp;#x2F;Firstblog.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例2.  如在&lt;code&gt;myblog/source/_post/Linux常用命令.md&lt;/code&gt;文件中插入&lt;code&gt;myblog/source/_post/Linux常用命令/cup进程.png&lt;/code&gt;的这张图片想引用的时候VScode和网页都能看到要用如下格式&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](_post&amp;#x2F;..&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](_post&amp;#x2F;Linux常用命令&amp;#x2F;..&amp;#x2F;..&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面的方法只能在文章&lt;code&gt;Linux常用命令.md&lt;/code&gt;中插入同文件夹路径下的图片&lt;code&gt;Linux常用命令/tupian.png&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;VScode能看到的格式-网页端看不到&quot;&gt;&lt;a href=&quot;#VScode能看到的格式-网页端看不到&quot; class=&quot;headerlink&quot; title=&quot;VScode能看到的格式|网页端看不到&quot;&gt;&lt;/a&gt;VScode能看到的格式|网页端看不到&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;网页端能看到的格式-VScode看不到&quot;&gt;&lt;a href=&quot;#网页端能看到的格式-VScode看不到&quot; class=&quot;headerlink&quot; title=&quot;网页端能看到的格式|VScode看不到&quot;&gt;&lt;/a&gt;网页端能看到的格式|VScode看不到&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](&amp;#x2F;_post&amp;#x2F;_Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;GUP进程.png)
![ceshi](GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;网页端和VScode都不能看到&quot;&gt;&lt;a href=&quot;#网页端和VScode都不能看到&quot; class=&quot;headerlink&quot; title=&quot;网页端和VScode都不能看到&quot;&gt;&lt;/a&gt;网页端和VScode都不能看到&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![ceshi](_post&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;_post&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)
![ceshi](&amp;#x2F;Linux常用命令&amp;#x2F;GUP进程.png)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;如何插入链接&quot;&gt;&lt;a href=&quot;#如何插入链接&quot; class=&quot;headerlink&quot; title=&quot;如何插入链接&quot;&gt;&lt;/a&gt;如何插入链接&lt;/h1&gt;&lt;p&gt;格式:&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;[](链接)&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/Hexo/"/>
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的Next主题配置Utterances评论系统</title>
    <link href="https://rongkangxiong.top/post/addcomment.html"/>
    <id>https://rongkangxiong.top/post/addcomment.html</id>
    <published>2021-11-11T08:41:00.000Z</published>
    <updated>2021-11-12T14:38:24.354Z</updated>
    
    <content type="html"><![CDATA[<p>写作前面<br>最新版本的NexT默认不内置gitment评论系统<br>选用目前NexT 8+版本的内置Utterances</p><h1 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h1><p>在自己的github账号下创建一个仓库来存放评论，仓库名最好为<code>utterances</code>，方便后续自己识别，仓库设置为public<br>设置一个readme文件</p><h2 id="安装Utterances"><a href="#安装Utterances" class="headerlink" title="安装Utterances"></a>安装Utterances</h2><p>安装地址：<a href="https://github.com/apps/utterances">https://github.com/apps/utterances</a><br>访问安装地址，进入安装页面，点击<code>Install</code>按钮<br>权限选择，可以选择访问全部仓库，或者刚才指定仓库</p><h2 id="配置Utterances"><a href="#配置Utterances" class="headerlink" title="配置Utterances"></a>配置Utterances</h2><p>打开/blog/themes/next/_config.yml<br>查找<code>utterances</code>字段并修改如下</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># Utterances# For more information: https:&#x2F;&#x2F;utteranc.esutterances:  enable: true  repo: SantaJiang&#x2F;utterances#格式是 user_name&#x2F;repo_name  # Available values: pathname | url | title | og:title  issue_term: pathname  # Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light  theme: github-light</code></pre><p>完成后重新部署:</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">hexo cleanhexo ghexo d</code></pre><p>一个一个运行，不然可能部署会报错</p><p>参考链接:<br>    <a href="https://utteranc.es/?installation_id=20644453&setup_action=install">utterance</a><br>    <a href="https://santajiang.github.io/2021/08/18/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEUtterances%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/#more">Santa的个人博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;写作前面&lt;br&gt;最新版本的NexT默认不内置gitment评论系统&lt;br&gt;选用目前NexT 8+版本的内置Utterances&lt;/p&gt;
&lt;h1 id=&quot;创建GitHub仓库&quot;&gt;&lt;a href=&quot;#创建GitHub仓库&quot; class=&quot;headerlink&quot; title=&quot;创</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://rongkangxiong.top/tags/hexo/"/>
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="NexT" scheme="https://rongkangxiong.top/tags/NexT/"/>
    
    <category term="评论系统" scheme="https://rongkangxiong.top/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Next配置</title>
    <link href="https://rongkangxiong.top/post/config-next.html"/>
    <id>https://rongkangxiong.top/post/config-next.html</id>
    <published>2021-11-11T03:14:00.000Z</published>
    <updated>2021-11-11T08:23:04.582Z</updated>
    
    <content type="html"><![CDATA[<p><span id="begin">写在开头</span><br><a href="#end">点击跳转到文末</a></p><p><a href="https://zhuanlan.zhihu.com/p/33616481">Hexo搭建的GitHub博客之优化大全https://zhuanlan.zhihu.com/p/33616481</a><br><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373">背景动画</a></p><h1 id="新建文章时，在相同目录下创建同名文件夹（便于图片管理）"><a href="#新建文章时，在相同目录下创建同名文件夹（便于图片管理）" class="headerlink" title="新建文章时，在相同目录下创建同名文件夹（便于图片管理）"></a>新建文章时，在相同目录下创建同名文件夹（便于图片管理）</h1><ul><li>打开站点配置文件_config.yml，搜索post_asset_folder字段，设置其值为true</li><li>安装hexo-asset-image：npm install hexo-asset-image –save</li><li>此时hexo new “fileName”会在/source/_posts目录下创建同名的文件夹</li><li>只需在 md 文件里使用</li></ul><pre class="line-numbers language-md" data-language="md"><code class="language-md">![title](图片名.jpg)</code></pre><p>  无需路径名就可以插入图片。<br>ps: 发现这样就不能启用创建文件自动打开编辑器功能<br>自己创建文件夹即可</p><span id="more"></span><h1 id="启用预览功能"><a href="#启用预览功能" class="headerlink" title="启用预览功能"></a>启用预览功能</h1><p>直接在文章中插入即可，此代码一下的需要点击 阅读更多 才能显示</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;!--more--&gt;</code></pre><h1 id="文章内部锚点跳转"><a href="#文章内部锚点跳转" class="headerlink" title="文章内部锚点跳转"></a>文章内部锚点跳转</h1><p>这个方式是由John Tsai给出的，分成两步：</p><ol><li>定义一个锚(id)：</li></ol><pre class="line-numbers language-md" data-language="md"><code class="language-md">&lt;span id&#x3D;&quot;jump&quot;&gt;跳转到的地方&lt;&#x2F;span&gt;</code></pre><ol start="2"><li>使用markdown语法：</li></ol><pre class="line-numbers language-md" data-language="md"><code class="language-md">[点击跳转](#jump)</code></pre><h1 id="自己写的文章的跳转"><a href="#自己写的文章的跳转" class="headerlink" title="自己写的文章的跳转"></a>自己写的文章的跳转</h1><pre class="line-numbers language-md" data-language="md"><code class="language-md">[名称](&#x2F;forder-to-you-file)</code></pre><p>在 /mynotes/math 下的 common_dstribute.md文件可以通过一下代码实现跳转<br><a href="/mynotes/math/common_dstribute.html">常用概率分布</a></p><p><a href="/mynotes/index.html">mynotes</a></p><p>在 /mynotes/ 下的 index.md文件可以通过跳转</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[mynotes](&#x2F;mynotes&#x2F;index.html)</code></pre><p><a href="introduction.html">Introduction</a><br>在/source/_post/ 文件夹下面(和本文件同文件夹)的introduction.md的文件可以通过来跳转</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[Introduction](introduction.html) </code></pre><h1 id="站点文章置顶"><a href="#站点文章置顶" class="headerlink" title="站点文章置顶"></a>站点文章置顶</h1><p>打开Myblog站点下node_modules/hexo-generator-index/lib/generator.js文件。代码全部替换为</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#39;use strict&#39;;var pagination &#x3D; require(&#39;hexo-pagination&#39;);module.exports &#x3D; function(locals)&#123;  var config &#x3D; this.config;  var posts &#x3D; locals.posts;    posts.data &#x3D; posts.data.sort(function(a, b) &#123;        if(a.top &amp;&amp; b.top) &#123; &#x2F;&#x2F; 两篇文章top都有定义            if(a.top &#x3D;&#x3D; b.top) return b.date - a.date; &#x2F;&#x2F; 若top值一样则按照文章日期降序排            else return b.top - a.top; &#x2F;&#x2F; 否则按照top值降序排        &#125;        else if(a.top &amp;&amp; !b.top) &#123; &#x2F;&#x2F; 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）            return -1;        &#125;        else if(!a.top &amp;&amp; b.top) &#123;            return 1;        &#125;        else return b.date - a.date; &#x2F;&#x2F; 都没定义按照文章日期降序排    &#125;);  var paginationDir &#x3D; config.pagination_dir || &#39;page&#39;;  return pagination(&#39;&#39;, posts, &#123;    perPage: config.index_generator.per_page,    layout: [&#39;index&#39;, &#39;archive&#39;],    format: paginationDir + &#39;&#x2F;%d&#x2F;&#39;,    data: &#123;      __index: true    &#125;  &#125;);&#125;;</code></pre><ul><li>打开文章添加top字段,设置数值，数值越大文章越靠前</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">---layout: layouttitle: 标签1date: 2017-08-18 15:41:18tags: 标签1top: 100---</code></pre><p><a href="https://www.jianshu.com/p/d23d67d318c7">参考链接https://www.jianshu.com/p/d23d67d318c7</a></p><h1 id="Hexo博客NexT主题下添加字数统计和阅读时长"><a href="#Hexo博客NexT主题下添加字数统计和阅读时长" class="headerlink" title="Hexo博客NexT主题下添加字数统计和阅读时长"></a>Hexo博客NexT主题下添加字数统计和阅读时长</h1><ul><li><p>安装hexo-symbols-count-time</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">npm install hexo-symbols-count-time --save</code></pre></li><li><p>如果安装完报如下提醒，还需安装eslint</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">npm install eslint --save</code></pre></li><li><p>站点/_config.yml配置</p></li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">symbols_count_time:  symbols: true                # 文章字数统计  time: true                   # 文章阅读时长  total_symbols: true          # 站点总字数统计  total_time: true             # 站点总阅读时长  exclude_codeblock: false     # 排除代码字数统计</code></pre><ul><li>Next主题文件 <strong>themes/next/_config.yml</strong></li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># Post wordcount display settings# Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-timesymbols_count_time:  separated_meta: true     # 是否另起一行（true的话不和发表时间等同一行）  item_text_post: true     # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）  item_text_total: false   # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）  awl: 4                   # Average Word Length  wpm: 275                 # Words Per Minute（每分钟阅读词数）  suffix: mins.</code></pre><p><a href="https://github.com/RongkangXiong/hexo-symbols-count-time">参考链接https://github.com/RongkangXiong/hexo-symbols-count-time</a></p><h1 id="Hexo博客NexT主题下代码块复制功能"><a href="#Hexo博客NexT主题下代码块复制功能" class="headerlink" title="Hexo博客NexT主题下代码块复制功能"></a>Hexo博客NexT主题下代码块复制功能</h1><p>为了提高博客代码块的用户体验，仅仅代码高亮还不行，最好还能一键复制代码。故此文将讲述Hexo NexT主题博客的代码块复制功能配置。</p><ul><li>在themes/next/layout/_third-party/下新建文件copy-code.swig，写入下面的内容：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#123;% if theme.codeblock.copy_button.enable %&#125;  &lt;style&gt;    .copy-btn &#123;      display: inline-block;      padding: 6px 12px;      font-size: 13px;      font-weight: 700;      line-height: 20px;      color: #333;      white-space: nowrap;      vertical-align: middle;      cursor: pointer;      background-color: #eee;      background-image: linear-gradient(#fcfcfc, #eee);      border: 1px solid #d5d5d5;      border-radius: 3px;      user-select: none;      outline: 0;    &#125;    .highlight-wrap .copy-btn &#123;      transition: opacity .3s ease-in-out;      opacity: 0;      padding: 2px 6px;      position: absolute;      right: 4px;      top: 8px;    &#125;    .highlight-wrap:hover .copy-btn,    .highlight-wrap .copy-btn:focus &#123;      opacity: 1    &#125;    .highlight-wrap &#123;      position: relative;    &#125;  &lt;&#x2F;style&gt;    &lt;script&gt;    $(&#39;.highlight&#39;).each(function (i, e) &#123;      var $wrap &#x3D; $(&#39;&lt;div&gt;&#39;).addClass(&#39;highlight-wrap&#39;)      $(e).after($wrap)      $wrap.append($(&#39;&lt;button&gt;&#39;).addClass(&#39;copy-btn&#39;).append(&#39;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#39;).on(&#39;click&#39;, function (e) &#123;        var code &#x3D; $(this).parent().find(&#39;.code&#39;).find(&#39;.line&#39;).map(function (i, e) &#123;          return $(e).text()        &#125;).toArray().join(&#39;\n&#39;)        var ta &#x3D; document.createElement(&#39;textarea&#39;)        document.body.appendChild(ta)        ta.style.position &#x3D; &#39;absolute&#39;        ta.style.top &#x3D; &#39;0px&#39;        ta.style.left &#x3D; &#39;0px&#39;        ta.value &#x3D; code        ta.select()        ta.focus()        var result &#x3D; document.execCommand(&#39;copy&#39;)        document.body.removeChild(ta)        &#123;% if theme.codeblock.copy_button.show_result %&#125;          if(result)$(this).text(&#39;&#123;&#123;__(&quot;post.copy_success&quot;)&#125;&#125;&#39;)          else $(this).text(&#39;&#123;&#123;__(&quot;post.copy_failure&quot;)&#125;&#125;&#39;)        &#123;% endif %&#125;        $(this).blur()      &#125;)).on(&#39;mouseleave&#39;, function (e) &#123;        var $b &#x3D; $(this).find(&#39;.copy-btn&#39;)        setTimeout(function () &#123;          $b.text(&#39;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#39;)        &#125;, 300)      &#125;).append(e)    &#125;)  &lt;&#x2F;script&gt;&#123;% endif %&#125;</code></pre><ul><li><p>编辑themes/next/layout/_layout.njk文件，在文件末尾</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;- next_inject(&#39;bodyEnd&#39;) &#125;&#125;</code></pre></li></ul><p>前面对齐添加一行代码：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">&#123;% include &#39;_third-party&#x2F;copy-code.swig&#39; -%&#125;</code></pre><ul><li>添加按钮上显示的语言 在themes/next/languages/zh-CN.yml文件的post板块中添加下列代码：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">copy_button: 复制copy_success: 复制成功copy_failure: 复制失败</code></pre><ul><li>在主题配置文件themes/next/_config.yml中添加开关<br>搜索codeblock</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">codeblock:  border_radius:  copy_button:    enable: true    # Show text copy result    show_result: true</code></pre><p>重新生成</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">hexo clean &amp; hexo g</code></pre><p><a href="https://blog.csdn.net/Awt_FuDongLai/article/details/107466848">参考链接https://blog.csdn.net/Awt_FuDongLai/article/details/107466848</a></p><h1 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h1><ul><li>安装插件</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">npm install hexo-generator-search</code></pre><ul><li>查找主题配置文件themes/next/_config.yml中的local_search ：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">local_search:  enable: true  # If auto, trigger search by changing input.  # If manual, trigger search by pressing enter key or search button.  trigger: manual  #手动，按回车键或搜索按钮触发搜索  # Show top n results per article, show all results by setting to -1  top_n_per_article: 1  # Unescape html strings to the readable one.  unescape: false  # Preload the search data when the page loads.  preload: false</code></pre><h1 id="Hexo添加文章时自动打开编辑器"><a href="#Hexo添加文章时自动打开编辑器" class="headerlink" title="Hexo添加文章时自动打开编辑器"></a>Hexo添加文章时自动打开编辑器</h1><ul><li>首先在Hexo目录下的scripts目录中创建一个JavaScript脚本文件(name.js)</li><li>如果没有这个scripts目录，则新建一个scripts目录</li><li>新建的JavaScript脚本文件可以任意取名<br>通过这个脚本，我们用其来监听hexo new这个动作，并在检测到hexo new之后，执行编辑器打开的命令</li><li>如果你是windows平台的Hexo用户，则将下列内容写入你的脚本：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">var spawn &#x3D; require(&#39;child_process&#39;).exec;hexo.on(&#39;new&#39;, function(data)&#123;  spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39; + data.path);&#125;);</code></pre><ul><li>如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：</li></ul><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">var exec &#x3D; require(&#39;child_process&#39;).exec;hexo.on(&#39;new&#39;, function(data)&#123;    exec(&#39;open -a &quot;markdown编辑器绝对路径.app&quot; &#39; + data.path);&#125;);</code></pre><p><a href="https://blog.csdn.net/weixin_39345384/article/details/80785373">参考链接https://blog.csdn.net/weixin_39345384/article/details/80785373</a></p><h1 id="多台电脑Hexo写作Blog同步"><a href="#多台电脑Hexo写作Blog同步" class="headerlink" title="多台电脑Hexo写作Blog同步"></a>多台电脑Hexo写作Blog同步</h1><p>新建一个分支。通过在GitHub上新建一个分支，来保存本地的原始文件，另一个分支来保存hexo生成的静态网页。这里详细介绍以下步骤。</p><h2 id="在原始电脑上"><a href="#在原始电脑上" class="headerlink" title="在原始电脑上"></a>在原始电脑上</h2><p>新建一个分支hexo，设置为默认分支，保存本地原始文件<br>在</p><h1 id="点击侧栏头像回到首页"><a href="#点击侧栏头像回到首页" class="headerlink" title="点击侧栏头像回到首页"></a>点击侧栏头像回到首页</h1><p><span id="end">文末</span></p><p><a href="#begin">点击跳转到开头</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span id=&quot;begin&quot;&gt;写在开头&lt;/span&gt;&lt;br&gt;&lt;a href=&quot;#end&quot;&gt;点击跳转到文末&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33616481&quot;&gt;Hexo搭建的GitHub博客之优化大全https://zhuanlan.zhihu.com/p/33616481&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_39345384/article/details/80785373&quot;&gt;背景动画&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;新建文章时，在相同目录下创建同名文件夹（便于图片管理）&quot;&gt;&lt;a href=&quot;#新建文章时，在相同目录下创建同名文件夹（便于图片管理）&quot; class=&quot;headerlink&quot; title=&quot;新建文章时，在相同目录下创建同名文件夹（便于图片管理）&quot;&gt;&lt;/a&gt;新建文章时，在相同目录下创建同名文件夹（便于图片管理）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;打开站点配置文件_config.yml，搜索post_asset_folder字段，设置其值为true&lt;/li&gt;
&lt;li&gt;安装hexo-asset-image：npm install hexo-asset-image –save&lt;/li&gt;
&lt;li&gt;此时hexo new “fileName”会在/source/_posts目录下创建同名的文件夹&lt;/li&gt;
&lt;li&gt;只需在 md 文件里使用&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-md&quot; data-language=&quot;md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;![title](图片名.jpg)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  无需路径名就可以插入图片。&lt;br&gt;ps: 发现这样就不能启用创建文件自动打开编辑器功能&lt;br&gt;自己创建文件夹即可&lt;/p&gt;</summary>
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="https://rongkangxiong.top/categories/Hexo/"/>
    
    <category term="NexT" scheme="https://rongkangxiong.top/categories/Hexo/NexT/"/>
    
    
    <category term="hexo" scheme="https://rongkangxiong.top/tags/hexo/"/>
    
    <category term="next" scheme="https://rongkangxiong.top/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>newmenu</title>
    <link href="https://rongkangxiong.top/post/newmenu.html"/>
    <id>https://rongkangxiong.top/post/newmenu.html</id>
    <published>2021-11-10T17:58:21.000Z</published>
    <updated>2021-11-11T13:46:06.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为Hexo的Next主题增加自定义menu菜单"><a href="#为Hexo的Next主题增加自定义menu菜单" class="headerlink" title="为Hexo的Next主题增加自定义menu菜单"></a>为Hexo的Next主题增加自定义menu菜单</h1><p>现在Hexo使用的主题当中，Next主题是比较流行的，查看Next主题的_config.yml，其中有8个默认定义的menu菜单，分别是home、about、tags、categories、archives、schedule、sitemap、commonweal 。通过参考tags、categories两个菜单，可以实现菜单的定制化。</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">menu:  home: &#x2F; || fa fa-home                      #首页  about: &#x2F;about&#x2F; || fa fa-user               #关于  tags: &#x2F;tags&#x2F; || fa fa-tags                 #标签  categories: &#x2F;categories&#x2F; || fa fa-th       #分类  read: &#x2F;categories&#x2F;read || fa fa-book       #读书  archives: &#x2F;archives&#x2F; || fa fa-archive      #归档  mynotes: &#x2F;mynotes&#x2F; || fa fa-sticky-note    #我的笔记  #schedule: &#x2F;schedule&#x2F; || fa fa-calendar    #日历  sitemap: &#x2F;sitemap.xml || fa fa-sitemap     #站点地图，供搜索引擎爬取  #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat      #腾讯公益404  # &quot;||&quot; 前面是目标链接，后面是图标名称，图标库http:&#x2F;&#x2F;www.fontawesome.com.cn&#x2F;faicons&#x2F;#web-application</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;为Hexo的Next主题增加自定义menu菜单&quot;&gt;&lt;a href=&quot;#为Hexo的Next主题增加自定义menu菜单&quot; class=&quot;headerlink&quot; title=&quot;为Hexo的Next主题增加自定义menu菜单&quot;&gt;&lt;/a&gt;为Hexo的Next主题增加自定义</summary>
      
    
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="菜单" scheme="https://rongkangxiong.top/tags/%E8%8F%9C%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>个人博客图床资源获取</title>
    <link href="https://rongkangxiong.top/post/materialsite.html"/>
    <id>https://rongkangxiong.top/post/materialsite.html</id>
    <published>2021-11-10T04:31:49.000Z</published>
    <updated>2021-11-10T05:19:31.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图床&quot;&gt;&lt;a href=&quot;#图床&quot; class=&quot;headerlink&quot; title=&quot;图床&quot;&gt;&lt;/a&gt;图床&lt;/h1&gt;</summary>
      
    
    
    
    <category term="个人博客" scheme="https://rongkangxiong.top/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="资源" scheme="https://rongkangxiong.top/tags/%E8%B5%84%E6%BA%90/"/>
    
    <category term="图片" scheme="https://rongkangxiong.top/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Introduction</title>
    <link href="https://rongkangxiong.top/post/introduction.html"/>
    <id>https://rongkangxiong.top/post/introduction.html</id>
    <published>2021-11-10T03:14:00.000Z</published>
    <updated>2021-11-12T14:26:04.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相遇即是缘分"><a href="#相遇即是缘分" class="headerlink" title="相遇即是缘分"></a>相遇即是缘分</h1><p>博客初建，入站须知</p><p>欢迎来到我的世界，这是我的个人博客</p><p>知识总结，技术分享</p><p>本博客是基于Hexo框架搭建，采用Hexo-theme-next主题并加以改进</p><p>后期也会不定时增加新的功能</p><p>欢迎留言评论~</p><p>敬请期待！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;相遇即是缘分&quot;&gt;&lt;a href=&quot;#相遇即是缘分&quot; class=&quot;headerlink&quot; title=&quot;相遇即是缘分&quot;&gt;&lt;/a&gt;相遇即是缘分&lt;/h1&gt;&lt;p&gt;博客初建，入站须知&lt;/p&gt;
&lt;p&gt;欢迎来到我的世界，这是我的个人博客&lt;/p&gt;
&lt;p&gt;知识总结，技术分享&lt;/p</summary>
      
    
    
    
    <category term="入站须知" scheme="https://rongkangxiong.top/categories/%E5%85%A5%E7%AB%99%E9%A1%BB%E7%9F%A5/"/>
    
    
    <category term="入站须知" scheme="https://rongkangxiong.top/tags/%E5%85%A5%E7%AB%99%E9%A1%BB%E7%9F%A5/"/>
    
  </entry>
  
</feed>
